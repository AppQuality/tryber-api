openapi: 3.0.0
info:
  contact:
    email: it@app-quality.com
    name: Developers
  description: An API to get all data for your bugfinding and ux research needs!
  title: AppQualityApi
  version: '1.0'
servers:
  - url: 'https://api.app-quality.com'
paths:
  /:
    get:
      operationId: get-root
      summary: Get API description
      description: Get all routes available for this apis
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value: {}
              schema:
                type: object
                properties: {}
      tags: []
    parameters: []
  /agreements:
    get:
      operationId: get-agreements
      summary: GET Agreements
      description: Retrive all agreements
      parameters:
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    items:
                      - customer:
                          company: Customer Company
                          id: 1
                        expirationDate: '2023-06-06'
                        id: 1
                        isTokenBased: true
                        note: Agreement Notes
                        startDate: '2023-06-06'
                        title: Agreement Title
                        tokens: 10.5
                        unitPrice: 165
                    limit: 0
                    size: 0
                    start: 0
                    total: 0
                agreement-empty:
                  value:
                    items: []
                    size: 0
                    start: 0
                agreement-filterBy-customer1:
                  value:
                    items:
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-03-01'
                        id: 70
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-11-20'
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-01-01'
                        id: 69
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                    size: 2
                    start: 0
                'agreement-filterBy[customer]=1,3&start=1':
                  value:
                    items:
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-01-01'
                        id: 69
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                      - customer:
                          company: Epical s.p.a.
                          id: 3
                        expirationDate: '2020-01-01'
                        id: 42
                        isTokenBased: true
                        note: Test con dati veri
                        startDate: '2020-10-20'
                        title: Epic Token
                        tokens: 103
                        unitPrice: 166.6
                    limit: 10
                    size: 2
                    start: 1
                    total: 3
                'filterBy[customer]=1,3&limit=1':
                  value:
                    items:
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-03-01'
                        id: 70
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-11-20'
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                    limit: 1
                    size: 1
                    start: 0
                    total: 3
                items-no-filtered:
                  value:
                    items:
                      - customer:
                          company: AffidabilData s.p.a.
                          id: 2
                        expirationDate: '2023-01-01'
                        id: 241
                        isTokenBased: true
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: AffidabilData Token
                        tokens: 100
                        unitPrice: 165.6
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-03-01'
                        id: 70
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-11-20'
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-01-01'
                        id: 69
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                      - customer:
                          company: Epical s.p.a.
                          id: 3
                        expirationDate: '2020-01-01'
                        id: 42
                        isTokenBased: true
                        note: Test con dati veri
                        startDate: '2020-10-20'
                        title: Epic Token
                        tokens: 103
                        unitPrice: 166.6
                    size: 4
                    start: 0
                items-no-filtered-limit=1:
                  value:
                    items:
                      - customer:
                          company: AffidabilData s.p.a.
                          id: 2
                        expirationDate: '2023-01-01'
                        id: 241
                        isTokenBased: true
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: AffidabilData Token
                        tokens: 100
                        unitPrice: 165.6
                    limit: 1
                    size: 1
                    start: 0
                    total: 4
                items-no-filtered-limite=1&start=1:
                  value:
                    items:
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-03-01'
                        id: 70
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-11-20'
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                    limit: 1
                    size: 1
                    start: 1
                    total: 4
                'response-items-filterBy[customer]=1,3&start=1&limit=1':
                  value:
                    items:
                      - customer:
                          company: Rocco & Friends
                          id: 1
                        expirationDate: '2023-01-01'
                        id: 69
                        isTokenBased: false
                        note: Test con dati veri
                        startDate: '2023-10-20'
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                    limit: 3
                    size: 1
                    start: 0
                    total: 3
              schema:
                allOf:
                  - properties:
                      items:
                        type: array
                        items:
                          allOf:
                            - properties:
                                id:
                                  type: integer
                              required:
                                - id
                              type: object
                            - $ref: '#/components/schemas/Agreement'
                            - properties:
                                customer:
                                  type: object
                                  properties:
                                    company:
                                      type: string
                                    id:
                                      type: integer
                                  required:
                                    - id
                                    - company
                              required:
                                - customer
                              type: object
                    required:
                      - items
                    type: object
                  - $ref: '#/components/schemas/PaginationData'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
    parameters: []
    post:
      operationId: post-agreements
      summary: POST Agreement
      description: Create a new Agreement
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  customerId: 1
                  expirationDate: '2023-07-03'
                  id: 1
                  isTokenBased: true
                  note: string
                  startDate: '2023-07-03'
                  title: string
                  tokens: 0
                  unitPrice: 0
            schema:
              allOf:
                - properties:
                    customerId:
                      type: integer
                  required:
                    - customerId
                  type: object
                - $ref: '#/components/schemas/Agreement'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                success-creation:
                  value:
                    agreementId: 11111
              schema:
                type: object
                properties:
                  agreementId:
                    type: integer
                required:
                  - agreementId
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
  '/agreements/{agreementId}':
    delete:
      operationId: delete-agreements-agreement-id
      summary: ''
      description: Delete a specific Agreement
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                deletion-success:
                  value: {}
              schema:
                type: object
                properties: {}
        '403':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
    get:
      operationId: get-agreements-agreement-id
      summary: ''
      description: Get a specific Agreement
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    customer:
                      company: string
                      id: 1
                    expirationDate: '2023-07-03'
                    id: 1
                    isTokenBased: false
                    note: string
                    startDate: '2023-07-03'
                    title: string
                    tokens: 1
                    unitPrice: 165
                success-found:
                  value:
                    customer:
                      company: string
                      id: 1
                    expirationDate: '2023-10-31'
                    id: 69
                    isTokenBased: false
                    note: Agreement improved by Sunset
                    startDate: '2022-02-03'
                    title: Sunset Crowdtesting (Bug Hunting) 2022-2023
                    tokens: 666
                    unitPrice: 100
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    required:
                      - id
                    type: object
                  - $ref: '#/components/schemas/Agreement'
                  - properties:
                      customer:
                        type: object
                        properties:
                          company:
                            type: string
                          id:
                            type: integer
                        required:
                          - id
                          - company
                    required:
                      - customer
                    type: object
        '403':
          $ref: '#/components/responses/Authentication'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
    parameters:
      - name: agreementId
        in: path
        required: true
        schema:
          type: string
    put:
      operationId: put-agreements-agreement-id
      summary: ''
      description: Put a specific Agreement
      requestBody:
        description: ''
        content:
          application/json:
            examples:
              Example 1:
                value:
                  customerId: 0
                  expirationDate: '2023-07-03'
                  id: 1
                  isTokenBased: true
                  note: string
                  startDate: '2023-07-03'
                  title: string
                  tokens: 165
                  unitPrice: 165
            schema:
              allOf:
                - $ref: '#/components/schemas/Agreement'
                - properties:
                    customerId:
                      type: integer
                  required:
                    - customerId
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    customer:
                      company: string
                      id: 0
                    expirationDate: '2023-07-03'
                    id: 0
                    isTokenBased: false
                    note: string
                    startDate: '2023-07-03'
                    title: string
                    tokens: 0
                    unitPrice: 0
                request-correct:
                  value:
                    customer:
                      company: string
                      id: 0
                    customerId: 1
                    expirationDate: '2020-01-01'
                    id: 1
                    isTokenBased: true
                    note: Agreement notes
                    startDate: '2020-01-01'
                    title: Agreement Title
                    tokens: 10
                    unitPrice: 1
                success:
                  value:
                    customer:
                      company: string
                      id: 0
                    customerId: 1
                    expirationDate: '2020-01-01'
                    id: 11111
                    isTokenBased: true
                    note: Agreement notes
                    startDate: '2020-01-01'
                    title: Agreement Title
                    tokens: 10
                    unitPrice: 1
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    required:
                      - id
                    type: object
                  - $ref: '#/components/schemas/Agreement'
                  - properties:
                      customer:
                        type: object
                        properties:
                          company:
                            type: string
                          id:
                            type: integer
                        required:
                          - id
                          - company
                    required:
                      - customer
                    type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
  /authenticate:
    post:
      operationId: post-authenticate
      summary: ''
      description: A request to login with your username and password
      parameters: []
      requestBody:
        description: A JSON containing username and password
        content:
          application/json:
            examples:
              example:
                value:
                  password: my-strong-password
                  username: Elon71
            schema:
              type: object
              properties:
                password:
                  type: string
                username:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    message: Error 401
              schema:
                type: object
                properties:
                  message:
                    type: string
      tags:
        - Authentication
  /browsers:
    get:
      operationId: get-browsers
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    results:
                      - id: 1
                        name: Chrome
                      - id: 2
                        name: Firefox
                      - id: 3
                        name: Safari
                      - id: 4
                        name: Edge
                      - id: 100
                        name: Other
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                required:
                  - results
      tags: []
  '/bugs/{bugId}/status':
    parameters:
      - name: bugId
        in: path
        required: true
        schema:
          type: string
    patch:
      operationId: patch-bugs-bugId-status
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status_id:
                  type: integer
              required:
                - status_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - JWT: []
  /campaignTypes:
    get:
      operationId: get-campaign-types
      summary: Get Campaign Types
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    - customRoles:
                        - roleId: 0
                          userIds:
                            - 0
                      id: 0
                      name: string
              schema:
                type: array
                items:
                  properties:
                    customRoles:
                      type: array
                      items:
                        properties:
                          roleId:
                            type: integer
                          userIds:
                            type: array
                            items:
                              type: integer
                        required:
                          - roleId
                          - userIds
                        type: object
                    id:
                      type: integer
                    name:
                      type: string
                  required:
                    - id
                    - name
                    - customRoles
                  type: object
      security:
        - JWT: []
      tags: []
    parameters: []
  /campaigns:
    get:
      operationId: get-campaigns
      summary: Get all available Campaigns
      description: Get all the Campaigns you have access to
      parameters:
        - name: fields
          in: query
          schema:
            type: string
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - name: mine
          in: query
          description: Return only your campaign?
          schema:
            type: string
            enum:
              - 'true'
          allowEmptyValue: true
        - name: search
          in: query
          description: A value to search in id or title
          schema:
            type: string
        - $ref: '#/components/parameters/order'
        - name: orderBy
          in: query
          description: The parameter to order by
          schema:
            type: string
            enum:
              - id
              - startDate
              - endDate
        - name: filterBy
          in: query
          schema: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    items:
                      - csm:
                          id: 0
                          name: string
                          surname: string
                        customer:
                          id: 0
                          name: string
                        customerTitle: string
                        endDate: string
                        id: 0
                        name: string
                        phase:
                          id: 0
                          name: string
                        project:
                          id: 0
                          name: string
                        quote:
                          id: 0
                          price: string
                          status: string
                        resultType: bug
                        roles:
                          - role:
                              id: 0
                              name: string
                            user:
                              id: 0
                              name: string
                              surname: string
                        startDate: string
                        status: running
                        type:
                          area: quality
                          name: string
                        visibility: admin
                    limit: 0
                    size: 0
                    start: 0
                    total: 0
              schema:
                allOf:
                  - properties:
                      items:
                        type: array
                        items:
                          properties:
                            csm:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                surname:
                                  type: string
                              required:
                                - id
                                - name
                                - surname
                            customer:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - name
                            customerTitle:
                              type: string
                            endDate:
                              type: string
                            id:
                              type: integer
                            name:
                              type: string
                            phase:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - id
                                - name
                            project:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - name
                            quote:
                              type: object
                              properties:
                                id:
                                  type: integer
                                price:
                                  type: string
                                status:
                                  type: string
                              required:
                                - id
                                - price
                                - status
                            resultType:
                              type: string
                              enum:
                                - bug
                                - bugparade
                                - 'no'
                            roles:
                              type: array
                              items:
                                properties:
                                  role:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                    required:
                                      - id
                                      - name
                                  user:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      surname:
                                        type: string
                                    required:
                                      - id
                                      - name
                                      - surname
                                required:
                                  - role
                                  - user
                                type: object
                            startDate:
                              type: string
                            status:
                              type: string
                              enum:
                                - running
                                - closed
                                - incoming
                            type:
                              type: object
                              properties:
                                area:
                                  type: string
                                  enum:
                                    - quality
                                    - experience
                                name:
                                  type: string
                              required:
                                - name
                                - area
                            visibility:
                              type: string
                              enum:
                                - admin
                                - smallgroup
                                - logged
                                - public
                                - target
                          type: object
                    type: object
                  - $ref: '#/components/schemas/PaginationData'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    post:
      operationId: post-campaigns
      summary: Create a new Campaign
      description: Create a new Campaign if you have access to the creation
      requestBody:
        description: 'The Campaign data to set on the newly created Campaign, including the id of the Project to link the Campaign to'
        content:
          application/json:
            examples:
              example:
                value:
                  additionalFields:
                    - id: 2
                  allowed:
                    bug_types:
                      - id: 3
                    replicabilities:
                      - id: '1'
                    severities:
                      - id: 3
                  campaign_type: 1
                  customerCanViewReviewing: true
                  customer_title: Tesla Inc.
                  dates:
                    close: 17/09/2021
                    end: 17/08/2021
                    start: 17/02/2021
                  devices:
                    - id: '2'
                  hasBugParade: true
                  internal_id: T4242
                  language: English (England)
                  minNumberOfMedia: 0
                  name: Tesla-Model-3-selfdrive-UX
                  projectManager:
                    username: Elon Musk
                  project_id: 42
                  public: true
                  status: true
                  titleRule: true
            schema:
              allOf:
                - $ref: '#/components/schemas/Campaign'
                - properties:
                    project_id:
                      type: integer
                  type: object
      responses:
        '201':
          $ref: '#/components/responses/SingleCampaign'
        '400':
          $ref: '#/components/responses/MissingParameters'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - Campaign
  /campaigns/forms:
    get:
      operationId: get-campaigns-forms
      summary: Get all forms
      description: ''
      parameters:
        - $ref: '#/components/parameters/searchBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    limit: 0
                    results:
                      - campaign: 0
                        id: 0
                        name: string
                    size: 0
                    start: 0
                    total: 0
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  results:
                    type: array
                    items:
                      properties:
                        campaign:
                          type: integer
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                  size:
                    type: integer
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - size
                x-examples:
                  example-1:
                    results:
                      - id: 3
                        name: Form Name
                    total: 2
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
    parameters: []
    post:
      operationId: post-campaigns-forms
      summary: Create a new preselection form
      description: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  campaign: 0
                  creationDate: string
                  fields:
                    - question: string
                      short_name: string
                      type: gender
                  name: string
            schema:
              type: object
              properties:
                campaign:
                  type: integer
                creationDate:
                  type: string
                fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/PreselectionFormQuestion'
                name:
                  type: string
              required:
                - name
                - fields
              x-examples:
                example-1:
                  fields:
                    - question: 'What''s your [custom question]?'
                      type: text
                    - options:
                        - Option1
                        - Option2
                      question: 'What''s your [custom selectable question]?'
                      type: select
                    - options:
                        - Option1
                        - Option2
                      question: 'What''s your [custom selectable question]?'
                      type: select
                    - question: 'What''s your [cuf text question]?'
                      type: cuf_1
                    - options:
                        - 1
                        - 5
                        - 14
                      question: 'What''s your [cuf text question]?'
                      type: cuf_12
                    - question: 'What''s your [profile question]?'
                      type: gender
                  name: My form
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    campaign:
                      id: 0
                      name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
                    id: 0
                    name: string
              schema:
                type: object
                properties:
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  fields:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: integer
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  '/campaigns/forms/{formId}':
    get:
      operationId: get-campaigns-forms-formId
      summary: Get a preselection form
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    campaign:
                      id: 0
                      name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
                    id: 0
                    name: My form
              schema:
                type: object
                properties:
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  fields:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                  id:
                    type: number
                  name:
                    type: string
                    example: My form
                required:
                  - id
                  - name
                  - fields
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
    put:
      operationId: put-campaigns-forms-formId
      summary: Edit a preselection form
      description: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  campaign: 0
                  fields:
                    - id: 0
                      question: string
                      short_name: string
                      type: gender
                  name: string
            schema:
              type: object
              properties:
                campaign:
                  type: integer
                fields:
                  type: array
                  items:
                    allOf:
                      - properties:
                          id:
                            type: number
                        type: object
                      - $ref: '#/components/schemas/PreselectionFormQuestion'
                name:
                  type: string
              required:
                - name
                - fields
              x-examples:
                example-1:
                  campaign: 1
                  fields:
                    - id: 3
                      question: 'What''s your [custom question]?'
                      type: text
                    - id: 12
                      options:
                        - Option1
                        - Option2
                      question: 'What''s your [custom selectable question]?'
                      type: select
                    - id: 9
                      options:
                        - Option1
                        - Option2
                      question: 'What''s your [custom selectable question]?'
                      type: select
                    - id: 24
                      question: 'What''s your [cuf text question]?'
                      type: cuf_1
                    - id: 29
                      options:
                        - 1
                        - 5
                        - 7
                        - 14
                      question: 'What''s your [cuf select question]?'
                      type: cuf_12
                    - question: 'What''s your [profile question]?'
                      type: gender
                  name: My form
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    campaign:
                      id: 0
                      name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
                    id: 0
                    name: string
              schema:
                type: object
                properties:
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  fields:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
                  - fields
                x-examples:
                  example-1:
                    fields:
                      - id: 3
                        question: 'What''s your [custom question]?'
                        type: text
                      - id: 12
                        options:
                          - Option1
                          - Option2
                        question: 'What''s your [custom selectable question]?'
                        type: select
                      - id: 9
                        options:
                          - Option1
                          - Option2
                        question: 'What''s your [custom selectable question]?'
                        type: select
                      - id: 24
                        question: 'What''s your [cuf text question]?'
                        type: cuf_1
                      - id: 29
                        options:
                          - 1
                          - 5
                          - 14
                        question: 'What''s your [cuf text question]?'
                        type: cuf_12
                      - id: 89
                        question: 'What''s your [profile question]?'
                        type: gender
                    id: 15
                    name: My form
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  /campaigns/owners:
    get:
      operationId: get-campaigns-owners
      summary: Get owners of Campaigns
      description: Get all the owners of campaigns you have access to
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    surname:
                      type: string
                  required:
                    - id
                    - name
                    - surname
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    parameters: []
  '/campaigns/{campaign}':
    get:
      operationId: get-campaigns-campaign
      summary: Get a Campaign
      description: 'Get the data of a Campaign if you have access to it '
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 1
                    title: Campaign Title
                    type: Campaign Type
                    typeDescription: Campaign DescriptionType
                Example 2:
                  value:
                    id: 1
                    preselectionFormId: 69
                    title: Campaign Title
                    type: Campaign Type
                    typeDescription: Campaign DescriptionType
                campaign_with_plan:
                  value:
                    id: 0
                    plan:
                      id: 0
                      name: string
                    preselectionFormId: 0
                    title: string
                    type: string
                    typeDescription: string
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  plan:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  preselectionFormId:
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                  typeDescription:
                    type: string
                required:
                  - id
                  - title
                  - type
                  - typeDescription
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          description: Not Found
      security:
        - JWT: []
      tags:
        - Campaign
    parameters:
      - $ref: '#/components/parameters/campaign'
    put:
      operationId: put-campaigns-campaign
      summary: Edit a Campaign
      description: 'Edit the data of a Campaign if you have access to it '
      requestBody:
        description: The Campaign data to edit
        content:
          application/json:
            examples:
              change-name-example:
                value:
                  name: Tesla-Model-3-selfdrive-UX new name
              full-example:
                value:
                  additionalFields:
                    - id: 2
                  allowed:
                    bug_types:
                      - id: 3
                    replicabilities:
                      - id: '1'
                    severities:
                      - id: 3
                  customerCanViewReviewing: true
                  customer_title: Tesla Inc.
                  dates:
                    close: 17/09/2021
                    end: 17/08/2021
                    start: 17/02/2021
                  devices:
                    - id: '2'
                  hasBugParade: true
                  internal_id: T4242
                  language: English (England)
                  minNumberOfMedia: 0
                  name: Tesla-Model-3-selfdrive-UX
                  projectManager:
                    username: Elon Musk
                  public: true
                  status: true
                  titleRule: true
              update-campaign-token-usage:
                value:
                  tokens: 12
            schema:
              $ref: '#/components/schemas/CampaignOptional'
      responses:
        '200':
          $ref: '#/components/responses/SingleCampaign'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
  '/campaigns/{campaign}/bugs':
    get:
      operationId: get-campaigns-cid-bugs
      summary: Get all Campaign Bugs
      description: 'Get all bugs of a Campaign if you have access to it '
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/order'
        - name: orderBy
          in: query
          description: 'Order values by STATUS, TESTERID, SEVERITY, TYPE, ID'
          schema:
            type: string
            enum:
              - severity
              - testerId
              - status
              - type
              - id
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    items:
                      - created: string
                        duplication: father
                        id: 0
                        internalId: string
                        isFavourite: true
                        severity:
                          id: 0
                          name: string
                        status:
                          id: 0
                          name: string
                        tags:
                          - id: 0
                            name: string
                        tester:
                          id: 0
                        title: string
                        type:
                          id: 0
                          name: string
                        updated: string
                    limit: 0
                    size: 0
                    start: 0
                    total: 0
              schema:
                allOf:
                  - properties:
                      items:
                        type: array
                        items:
                          properties:
                            created:
                              type: string
                            duplication:
                              type: string
                              enum:
                                - father
                                - unique
                                - duplicated
                            id:
                              type: integer
                            internalId:
                              type: string
                            isFavourite:
                              type: boolean
                            severity:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - id
                                - name
                            status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - id
                                - name
                            tags:
                              type: array
                              items:
                                $ref: '#/components/schemas/BugTag'
                            tester:
                              type: object
                              properties:
                                id:
                                  type: integer
                              required:
                                - id
                            title:
                              type: string
                            type:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - id
                                - name
                            updated:
                              type: string
                          required:
                            - id
                            - title
                            - internalId
                            - status
                            - type
                            - severity
                            - tester
                            - duplication
                            - isFavourite
                            - created
                            - updated
                          type: object
                    required:
                      - items
                    type: object
                  - $ref: '#/components/schemas/PaginationData'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    parameters:
      - $ref: '#/components/parameters/campaign'
  '/campaigns/{campaign}/bugs/{bugId}':
    get:
      operationId: get-campaigns-single-bug
      summary: Get a specific Campaign Bug
      description: 'Get single bug of a Campaign if you have access to it '
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  actual_result:
                    type: string
                  description:
                    type: string
                  expected_result:
                    type: string
                  id:
                    type: integer
                  media:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        url:
                          type: string
                      required:
                        - id
                        - url
                        - type
                      type: object
                  note:
                    type: string
                  reason:
                    type: string
                  replicability:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  severity:
                    $ref: '#/components/schemas/BugSeverity'
                  status:
                    $ref: '#/components/schemas/BugStatus'
                  status_history:
                    type: array
                    items:
                      properties:
                        date:
                          type: string
                        reason:
                          type: string
                        status:
                          type: string
                      required:
                        - date
                        - reason
                        - status
                      type: object
                  title:
                    type: string
                  type:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  usecase:
                    type: object
                    properties:
                      description:
                        type: string
                      id:
                        type: integer
                      title:
                        type: string
                    required:
                      - description
                      - id
                      - title
                required:
                  - actual_result
                  - description
                  - expected_result
                  - id
                  - media
                  - note
                  - reason
                  - replicability
                  - severity
                  - status
                  - status_history
                  - title
                  - type
                  - usecase
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
      - name: bugId
        in: path
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/bugs/{bugId}/aiReview':
    get:
      operationId: get-campaigns-single-bug-ai-review
      summary: Get a specific Campaign Bug AI review
      description: 'Get ai review for a single bug of a Campaign if you have access to it '
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    ai_reason: 'The bug requires review because it impacts the functionality of a key feature on the homepage, specifically the ''Find a dealer'' section, which is essential for user navigation and experience.'
                    ai_status: need_review
                    score_percentage: 54
                Example 2:
                  value:
                    ai_notes: ' The mixed language content creates confusion for users during registration.'
                    ai_reason: 'The bug has been refused due to language inconsistencies in the title and description, which do not align with the use case requirements for a clear and consistent registration process.'
                    ai_status: refused
                    score_percentage: 31
              schema:
                type: object
                properties:
                  ai_notes:
                    type: string
                  ai_reason:
                    type: string
                  ai_status:
                    type: string
                  score_percentage:
                    type: number
                required:
                  - ai_status
                  - ai_reason
                  - score_percentage
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
      - name: bugId
        in: path
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/candidates':
    get:
      operationId: get-campaigns-campaign-candidates
      summary: Get all candidates for a campaign
      description: ''
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - name: fields
          in: query
          description: The fields to add to the results
          schema:
            type: string
            example: 'question_1,question_2'
        - name: filterByInclude
          in: query
          description: Key-value Array for item filtering
          schema: {}
        - name: filterByExclude
          in: query
          description: Key-value Array for item filtering
          schema: {}
        - name: filterByAge
          in: query
          description: Array with min and max
          schema: {}
        - name: show
          in: query
          description: Show accepted/candidates or both
          schema:
            type: string
            enum:
              - onlyAccepted
              - onlyCandidates
              - all
              - candidatesAndExcluded
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-2:
                  value:
                    results:
                      - age: 20
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 0
                            os: Windows
                            osVersion: Windows 10 May 2021 Update (19043)
                          - id: 1
                            manufacturer: Samsung
                            model: Galaxy M31
                            os: Android
                            osVersion: 12 (12)
                          - id: 2
                            manufacturer: Apple
                            model: iPad
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 3
                            manufacturer: Apple
                            model: iPhone SE (2020)
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 4
                            os: Windows
                            osVersion: Windows 11
                          - id: 5
                            manufacturer: Google
                            model: Pixel 6
                            os: Android
                            osVersion: 13(beta) (13(beta))
                        experience: 100
                        gender: female
                        id: 1234
                        levels:
                          bugHunting: Newbie
                          metal: Bronze
                        name: Giulia
                        surname: Baldini
                      - age: 21
                        businessCps: 10
                        businessCpsLastMonth: 5
                        devices:
                          - id: 6
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 7
                            manufacturer: Xiaomi
                            model: Redmi 8
                            os: Android
                            osVersion: 11 (11)
                        experience: 100
                        gender: male
                        id: 1235
                        levels:
                          bugHunting: No level
                          metal: No level
                        name: Cesare
                        surname: Alagna
                      - age: 22
                        businessCps: 69
                        businessCpsLastMonth: 9
                        devices:
                          - id: 8
                            manufacturer: Huawei
                            model: Mate 20 Pro
                            os: Android
                            osVersion: 10 (10.0)
                        experience: 100
                        gender: not-specified
                        id: 12346
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Carlo
                        surname: Paolini
                      - age: 23
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 9
                            os: MacOS
                            osVersion: Mac OS X 12 (Monterey) (12.1)
                          - id: 10
                            manufacturer: Xiaomi
                            model: Mi 11 Lite
                            os: Android
                            osVersion: 12 (12)
                        experience: 100
                        gender: other
                        id: 1239
                        levels:
                          bugHunting: Rookie
                          metal: Silver
                        name: Chiara
                        surname: Mancini
                      - age: 25
                        businessCps: 31
                        businessCpsLastMonth: 1
                        devices:
                          - id: 11
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 12
                            manufacturer: Samsung
                            model: Galaxy S20 FE
                            os: Android
                            osVersion: 12 (12)
                        experience: 100
                        gender: female
                        id: 1236
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Rosa
                        surname: Contralto
                      - age: 26
                        businessCps: 50
                        businessCpsLastMonth: 10
                        devices:
                          - id: 13
                            manufacturer: Apple
                            model: iPad Pro 12.9
                            os: iOS
                            osVersion: iOS 15.7 (15.7)
                          - id: 14
                            manufacturer: Samsung
                            model: Galaxy A20e
                            os: Android
                            osVersion: 11 (11)
                        experience: 100
                        gender: male
                        id: 12356
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Beppe
                        surname: Gianduiotto
                      - age: 27
                        businessCps: 22
                        businessCpsLastMonth: 2
                        devices:
                          - id: 15
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 16
                            manufacturer: Asus
                            model: ZenFone 5 (ZE620KL)
                            os: Android
                            osVersion: Pie (9.0)
                        experience: 100
                        gender: female
                        id: 12369
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Monica
                        surname: Lorenzini
                      - age: 30
                        businessCps: 21
                        businessCpsLastMonth: 1
                        devices:
                          - id: 17
                            manufacturer: Apple
                            model: iPhone 14 Pro Max
                            os: iOS
                            osVersion: iOS 16(beta) (16(beta))
                        experience: 100
                        gender: male
                        id: 12389
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Tullio
                        surname: De Sica
                    size: 8
                    start: 0
                example-with-questions:
                  value:
                    results:
                      - age: 20
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 0
                            os: Windows
                            osVersion: Windows 10 May 2021 Update (19043)
                          - id: 1
                            manufacturer: Samsung
                            model: Galaxy M31
                            os: Android
                            osVersion: 12 (12)
                          - id: 2
                            manufacturer: Apple
                            model: iPad
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 3
                            manufacturer: Apple
                            model: iPhone SE (2020)
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 4
                            os: Windows
                            osVersion: Windows 11
                          - id: 5
                            manufacturer: Google
                            model: Pixel 6
                            os: Android
                            osVersion: 13(beta) (13(beta))
                        experience: 100
                        gender: female
                        id: 1234
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Giulia
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: Baldini
                      - age: 21
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 6
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 7
                            manufacturer: Xiaomi
                            model: Redmi 8
                            os: Android
                            osVersion: 11 (11)
                        experience: 100
                        gender: male
                        id: 1235
                        levels:
                          bugHunting: No level
                          metal: No level
                        name: Cesare
                        surname: Alagna
                      - age: 22
                        businessCps: 10
                        businessCpsLastMonth: 5
                        devices:
                          - id: 8
                            manufacturer: Huawei
                            model: Mate 20 Pro
                            os: Android
                            osVersion: 10 (10.0)
                        experience: 100
                        gender: not-specified
                        id: 12346
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Carlo
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: Paolini
                      - age: 23
                        businessCps: 70
                        businessCpsLastMonth: 13
                        devices:
                          - id: 9
                            os: MacOS
                            osVersion: Mac OS X 12 (Monterey) (12.1)
                          - id: 10
                            manufacturer: Xiaomi
                            model: Mi 11 Lite
                            os: Android
                            osVersion: 12 (12)
                        experience: 100
                        gender: other
                        id: 1239
                        levels:
                          bugHunting: Rookie
                          metal: No level
                        name: Chiara
                        questions:
                          - id: 1
                            title: Cane
                            value: 'No'
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: Mancini
                      - age: 25
                        businessCps: 60
                        businessCpsLastMonth: 1
                        devices:
                          - id: 11
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 12
                            manufacturer: Samsung
                            model: Galaxy S20 FE
                            os: Android
                            osVersion: 12 (12)
                        experience: 100
                        gender: female
                        id: 1236
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Rosa
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: Contralto
                      - age: 26
                        businessCps: 69
                        businessCpsLastMonth: 9
                        devices:
                          - id: 13
                            manufacturer: Apple
                            model: iPad Pro 12.9
                            os: iOS
                            osVersion: iOS 15.7 (15.7)
                          - id: 14
                            manufacturer: Samsung
                            model: Galaxy A20e
                            os: Android
                            osVersion: 11 (11)
                        experience: 100
                        gender: male
                        id: 12356
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Beppe
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: Gianduiotto
                      - age: 27
                        businessCps: 20
                        businessCpsLastMonth: 5
                        devices:
                          - id: 15
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - id: 16
                            manufacturer: Asus
                            model: ZenFone 5 (ZE620KL)
                            os: Android
                            osVersion: Pie (9.0)
                        experience: 100
                        gender: female
                        id: 12369
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Monica
                        questions:
                          - id: 1
                            title: Cane
                            value: 'No'
                          - id: 2
                            title: Pagamento
                            value: Sì
                        surname: Lorenzini
                      - age: 30
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 17
                            manufacturer: Apple
                            model: iPhone 14 Pro Max
                            os: iOS
                            osVersion: iOS 16(beta) (16(beta))
                        experience: 100
                        gender: male
                        id: 12389
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        name: Tullio
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                        surname: De Sica
                    size: 8
                    start: 0
              schema:
                allOf:
                  - properties:
                      results:
                        type: array
                        items:
                          properties:
                            age:
                              type: number
                            businessCps:
                              type: integer
                            businessCpsLastMonth:
                              type: integer
                            devices:
                              type: array
                              items:
                                properties:
                                  id:
                                    type: number
                                  manufacturer:
                                    type: string
                                  model:
                                    type: string
                                  os:
                                    type: string
                                  osVersion:
                                    type: string
                                required:
                                  - os
                                  - osVersion
                                  - id
                                type: object
                            experience:
                              type: number
                            gender:
                              $ref: '#/components/schemas/Gender'
                            id:
                              type: integer
                            levels:
                              type: object
                              properties:
                                bugHunting:
                                  type: string
                                metal:
                                  type: string
                              required:
                                - bugHunting
                                - metal
                            name:
                              type: string
                            questions:
                              type: array
                              items:
                                properties:
                                  id:
                                    type: integer
                                  title:
                                    type: string
                                  value:
                                    type: string
                                type: object
                            status:
                              type: string
                              enum:
                                - candidate
                                - excluded
                                - selected
                            surname:
                              type: string
                          required:
                            - id
                            - name
                            - surname
                            - gender
                            - age
                            - experience
                            - businessCps
                            - businessCpsLastMonth
                            - levels
                            - devices
                          type: object
                    type: object
                  - $ref: '#/components/schemas/PaginationData'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    post:
      operationId: post-campaigns-campaign-candidates
      summary: ''
      description: The Tryber will be inserted as a candidate Tryber on a specific Campaign
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - items:
                    properties:
                      device:
                        oneOf:
                          - properties: {}
                            type: number
                          - enum:
                              - random
                            properties: {}
                            type: string
                      tester_id:
                        type: number
                    required:
                      - tester_id
                    type: object
                  type: array
                - properties:
                    device:
                      oneOf:
                        - properties: {}
                          type: number
                        - enum:
                            - random
                          properties: {}
                          type: string
                    tester_id:
                      type: number
                  required:
                    - tester_id
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        campaignId:
                          type: number
                        device:
                          oneOf:
                            - enum:
                                - any
                              properties: {}
                              type: string
                            - properties: {}
                              type: number
                        tester_id:
                          type: number
                      required:
                        - tester_id
                      type: object
                required:
                  - results
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  invalidTesters:
                    type: array
                    items:
                      type: number
                  results:
                    type: array
                    items:
                      properties:
                        campaignId:
                          type: number
                        device:
                          oneOf:
                            - enum:
                                - any
                              type: string
                            - type: number
                        tester_id:
                          type: number
                      required:
                        - tester_id
                      type: object
                required:
                  - results
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  '/campaigns/{campaign}/clusters':
    get:
      operationId: get-campaigns-campaign-clusters
      summary: Get use case clusters for a campaign
      description: Get all clusters for  a specific campaign
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              examples:
                4-items:
                  value:
                    items:
                      - id: 1
                        name: 'UC1: Cart'
                      - id: 2
                        name: 'UC2: Login'
                      - id: 3
                        name: 'UC3: Checkout'
                      - id: 4
                        name: 'UC4: Search'
                ux-campaign-get-clusters:
                  value:
                    items:
                      - id: 1
                        name: UC 1 - Carrello
                      - id: 2
                        name: UC 2 - Profilo
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                required:
                  - items
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/forms':
    get:
      operationId: get-campaigns-campaign-forms
      summary: Get a preselection form by campaign id
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - id: 1
                      question: My question 1
                      shortName: Q1
                    - id: 2
                      question: My question 2
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    question:
                      type: string
                    shortName:
                      type: string
                  required:
                    - id
                    - question
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/groups':
    get:
      operationId: get-campaigns-cid-groups
      summary: Get all Campaign Groups
      description: 'Get all groups used in a Campaign if you have access to it '
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                  required:
                    - id
                    - name
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/observations':
    get:
      operationId: get-campaigns-campaign-observations
      summary: Get observations for a campaign
      description: Get observations for a campaign
      parameters:
        - name: filterBy
          in: query
          schema: {}
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              examples:
                3-observations:
                  value:
                    items:
                      - cluster:
                          id: 1
                          name: Cluster Name1
                        id: 1
                        media:
                          id: 1
                          streamUrl: www.example.com
                          url: www.example.com
                        name: Observation Name1
                        tester:
                          id: 11111
                          name: Jhon Doe
                        time: 59
                      - cluster:
                          id: 1
                          name: Cluster Name1
                        id: 2
                        media:
                          id: 1
                          streamUrl: www.example.com
                          url: www.example.com
                        name: Observation Name2
                        tester:
                          id: 12345
                          name: Mary Blue
                        time: 39
                      - cluster:
                          id: 2
                          name: Cluster Name2
                        id: 3
                        media:
                          id: 1
                          streamUrl: www.example.com
                          url: www.example.com
                        name: Observation Name3
                        tester:
                          id: 11111
                          name: Jhon Doe
                        time: 19
                ux-campaign-get-observations:
                  value:
                    items:
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10678
                        media:
                          id: 73578
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T11291/91d3f36562a4d2be809c9b1217f591b317f928b4_1666108920-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T11291/91d3f36562a4d2be809c9b1217f591b317f928b4_1666108920.mp4'
                        name: ok
                        tester:
                          id: 11291
                          name: Aurora
                        time: 0
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10682
                        media:
                          id: 73577
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262.mp4'
                        name: ''
                        tester:
                          id: 8208
                          name: Eliseo
                        time: 22
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10683
                        media:
                          id: 73579
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033.mp4'
                        name: t58918_xiaomi_mi10_usecase1-mp4
                        tester:
                          id: 58918
                          name: Claudio
                        time: 0
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10684
                        media:
                          id: 73580
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T960/19ebc32b3d71e4a3f2858eea298761d44db5d83b_1666112983-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T960/19ebc32b3d71e4a3f2858eea298761d44db5d83b_1666112983.mp4'
                        name: t960_apple_iphone12_usecase0-mp4
                        tester:
                          id: 960
                          name: Domenico
                        time: 0
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10685
                        media:
                          id: 73589
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T17968/0af496e75fb6ec367749d1c34a2f9a0dec0f2b4a_1666121805-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T17968/0af496e75fb6ec367749d1c34a2f9a0dec0f2b4a_1666121805.mp4'
                        name: t17968_pc_desktop-_amd_usecase1-
                        tester:
                          id: 17968
                          name: Vittorio
                        time: 0
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10686
                        media:
                          id: 73590
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T29187/c40ae70fbc3e3ac3c77a07aefdddec014d099e30_1666125348-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T29187/c40ae70fbc3e3ac3c77a07aefdddec014d099e30_1666125348.mp4'
                        name: t29187_huaweihonor_usecase0-mp4
                        tester:
                          id: 29187
                          name: Giada
                        time: 0
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10687
                        media:
                          id: 73577
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262.mp4'
                        name: interessante
                        tester:
                          id: 8208
                          name: Eliseo
                        time: 58
                      - cluster:
                          id: 781
                          name: UC 1 - Carrello
                        id: 10688
                        media:
                          id: 73579
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033.mp4'
                        name: giommiobs
                        tester:
                          id: 58918
                          name: Claudio
                        time: 108
                      - cluster:
                          id: 782
                          name: UC 2 - Profilo
                        id: 10690
                        media:
                          id: 74191
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/mediaconvert-encoder-staging-bucket/CP4845/UC19596/T32/ad4fc347f2579800a1920a8be6e181dda0f4b290_1692791543-stream.m3u8'
                          url: 'https://s3-eu-west-1.amazonaws.com/mediaconvert-encoder-staging-bucket/CP4845/UC19596/T32/ad4fc347f2579800a1920a8be6e181dda0f4b290_1692791543.mp4'
                        name: ok T32
                        tester:
                          id: 32
                          name: Luca
                        time: 4
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      properties:
                        cluster:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                            - id
                            - name
                        id:
                          type: integer
                        media:
                          type: object
                          properties:
                            id:
                              type: integer
                            streamUrl:
                              type: string
                            url:
                              type: string
                          required:
                            - id
                            - url
                            - streamUrl
                        name:
                          type: string
                        tester:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                            - id
                            - name
                        time:
                          type: number
                      required:
                        - id
                        - name
                        - time
                        - tester
                        - cluster
                        - media
                      type: object
                required:
                  - items
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/payouts':
    get:
      operationId: get-campaigns-campaign-payouts
      summary: Get payout data for a specific campaign
      description: ''
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    completionRule:
                      bugs: 4
                      usecases: 53
                    maxBonusBug: 5.99
                    testFailure:
                      message: message
                      payout: 0
                      points: -200
                    testSuccess:
                      message: message
                      payout: 15
                      points: 100
              schema:
                type: object
                properties:
                  completionRule:
                    type: object
                    properties:
                      bugs:
                        type: number
                      usecases:
                        type: number
                  maxBonusBug:
                    type: number
                  testFailure:
                    type: object
                    properties:
                      message:
                        type: string
                      payout:
                        type: number
                      points:
                        type: number
                    required:
                      - payout
                      - points
                      - message
                  testSuccess:
                    type: object
                    properties:
                      message:
                        type: string
                      payout:
                        type: number
                      points:
                        type: number
                    required:
                      - payout
                      - points
                      - message
                required:
                  - maxBonusBug
                  - completionRule
                  - testSuccess
                  - testFailure
                x-examples:
                  Example 1:
                    maxBonusBug: 4.99
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
    parameters:
      - $ref: '#/components/parameters/campaign'
    put:
      operationId: put-campaigns-campaign-payouts
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_complete_bonus_eur:
                  type: number
                  minimum: 0
                campaign_pts:
                  type: number
                critical_bug_payout:
                  type: number
                  minimum: 0
                high_bug_payout:
                  type: number
                  minimum: 0
                low_bug_payout:
                  type: number
                  minimum: 0
                medium_bug_payout:
                  type: number
                  minimum: 0
                minimum_bugs:
                  type: number
                  minimum: 0
                payout_limit:
                  type: number
                  minimum: 0
                percent_usecases:
                  type: number
                  maximum: 100
                  minimum: 0
                point_multiplier_critical:
                  type: number
                  minimum: 0
                point_multiplier_high:
                  type: number
                  minimum: 0
                point_multiplier_low:
                  type: number
                  minimum: 0
                point_multiplier_medium:
                  type: number
                  minimum: 0
                point_multiplier_perfect:
                  type: number
                  minimum: 0
                point_multiplier_refused:
                  type: number
                  minimum: 0
                top_tester_bonus:
                  type: number
                  minimum: 0
              x-examples:
                Example 1:
                  campaign_complete_bonus_eur: 0
                  campaign_pts: 0
                  critical_bug_payout: 0
                  high_bug_payout: 0
                  low_bug_payout: 0
                  medium_bug_payout: 0
                  minimum_bugs: 0
                  payout_limit: 0
                  percent_usecases: 0
                  point_multiplier_critical: 0
                  point_multiplier_high: 0
                  point_multiplier_low: 0
                  point_multiplier_medium: 0
                  point_multiplier_perfect: 0
                  point_multiplier_refused: 0
                  top_tester_bonus: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign_complete_bonus_eur:
                    type: integer
                  campaign_pts:
                    type: integer
                  critical_bug_payout:
                    type: integer
                  high_bug_payout:
                    type: integer
                  low_bug_payout:
                    type: integer
                  medium_bug_payout:
                    type: integer
                  minimum_bugs:
                    type: integer
                  payout_limit:
                    type: integer
                  percent_usecases:
                    type: integer
                  point_multiplier_critical:
                    type: integer
                  point_multiplier_high:
                    type: integer
                  point_multiplier_low:
                    type: integer
                  point_multiplier_medium:
                    type: integer
                  point_multiplier_perfect:
                    type: integer
                  point_multiplier_refused:
                    type: integer
                  top_tester_bonus:
                    type: integer
                x-examples:
                  Example 1:
                    campaign_complete_bonus_eur: 0
                    campaign_pts: 0
                    critical_bug_payout: 0
                    high_bug_payout: 0
                    low_bug_payout: 0
                    medium_bug_payout: 0
                    minimum_bugs: 0
                    payout_limit: 0
                    percent_usecases: 0
                    point_multiplier_critical: 0
                    point_multiplier_high: 0
                    point_multiplier_low: 0
                    point_multiplier_medium: 0
                    point_multiplier_perfect: 0
                    point_multiplier_refused: 0
                    top_tester_bonus: 0
        '400':
          $ref: '#/components/responses/MissingParameters'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  '/campaigns/{campaign}/prospect':
    get:
      operationId: get-campaigns-campaign-prospect
      summary: Get a prospect by campaign id
      description: ''
      parameters:
        - name: filterByInclude
          in: query
          description: Key-value Array for item filtering
          schema: {}
        - name: filterByExclude
          in: query
          description: Key-value Array for item filtering
          schema: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    items:
                      - bugs:
                          critical: 0
                          high: 0
                          low: 0
                          medium: 0
                        experience:
                          completion: 0
                          extra: 0
                        isCompleted: true
                        isTopTester: true
                        note: string
                        payout:
                          bug: 0
                          completion: 0
                          extra: 0
                          refund: 0
                        status: pending
                        tester:
                          group: 0
                          id: 0
                          name: string
                          surname: string
                        usecases:
                          completed: 0
                          required: 0
                        weightedBugs: 0
                    status: draft
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      properties:
                        bugs:
                          type: object
                          properties:
                            critical:
                              type: integer
                            high:
                              type: integer
                            low:
                              type: integer
                            medium:
                              type: integer
                          required:
                            - critical
                            - high
                            - medium
                            - low
                        experience:
                          type: object
                          properties:
                            completion:
                              type: integer
                            extra:
                              type: integer
                          required:
                            - completion
                            - extra
                        isCompleted:
                          type: boolean
                        isTopTester:
                          type: boolean
                        note:
                          type: string
                        payout:
                          type: object
                          properties:
                            bug:
                              type: number
                            completion:
                              type: number
                            extra:
                              type: number
                            refund:
                              type: number
                          required:
                            - completion
                            - bug
                            - refund
                            - extra
                        status:
                          type: string
                          enum:
                            - pending
                            - done
                        tester:
                          type: object
                          properties:
                            group:
                              type: number
                            id:
                              type: integer
                            name:
                              type: string
                            surname:
                              type: string
                          required:
                            - id
                            - name
                            - surname
                            - group
                        usecases:
                          type: object
                          properties:
                            completed:
                              type: integer
                            required:
                              type: integer
                          required:
                            - completed
                            - required
                        weightedBugs:
                          type: number
                      required:
                        - tester
                        - usecases
                        - bugs
                        - payout
                        - experience
                        - note
                        - status
                        - weightedBugs
                        - isCompleted
                        - isTopTester
                      type: object
                  status:
                    $ref: '#/components/schemas/ProspectStatus'
                required:
                  - items
                  - status
                x-examples:
                  Example 1:
                    items:
                      - bugs:
                          critical: 0
                          high: 0
                          low: 0
                          medium: 0
                        experience:
                          completion: 0
                          extra: 0
                        note: string
                        payout:
                          bug: 0
                          completion: 0
                          extra: 0
                          refund: 0
                        status: pending
                        tester:
                          id: 0
                          name: string
                          surname: string
                        usecases:
                          completed: 0
                          required: 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          description: Precondition Failed
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
    patch:
      operationId: patch-campaigns-campaign-prospect
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ProspectStatus'
      responses:
        '200':
          description: OK
        '304':
          description: Not Modified
        '403':
          description: Forbidden
        '501':
          description: Not Implemented
      security:
        - JWT: []
    put:
      operationId: put-campaigns-campaign-prospect
      summary: Edit a campaign prospect
      description: 'Make campaign perspective status done, and change exp points and tester payouts.'
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  items:
                    - completed: true
                      experience:
                        completion: 0
                        extra: 0
                      note: string
                      payout:
                        bug: 0
                        completion: 0
                        extra: 0
                        refund: 0
                      tester:
                        id: 0
                  status: done
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    properties:
                      completed:
                        type: boolean
                      experience:
                        type: object
                        properties:
                          completion:
                            type: integer
                          extra:
                            type: integer
                        required:
                          - completion
                          - extra
                      note:
                        type: string
                      payout:
                        type: object
                        properties:
                          bug:
                            type: number
                          completion:
                            type: number
                          extra:
                            type: number
                          refund:
                            type: number
                        required:
                          - completion
                          - bug
                          - extra
                          - refund
                      tester:
                        type: object
                        properties:
                          id:
                            type: integer
                        required:
                          - id
                    required:
                      - tester
                      - experience
                      - payout
                      - completed
                    type: object
                status:
                  $ref: '#/components/schemas/ProspectStatus'
              required:
                - status
                - items
      responses:
        '200':
          description: OK
          content: {}
        '304':
          description: Not Modified
        '501':
          description: Not Implemented
      security:
        - JWT: []
  '/campaigns/{campaign}/prospect/{testerId}':
    parameters:
      - $ref: '#/components/parameters/campaign'
      - $ref: '#/components/parameters/testerId'
    put:
      operationId: put-campaigns-campaign-prospect-testerId
      summary: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  completed: true
                  experience:
                    completion: 0
                    extra: 0
                  note: string
                  payout:
                    bugs: 0
                    completion: 0
                    extra: 0
                    refund: 0
            schema:
              type: object
              properties:
                completed:
                  type: boolean
                experience:
                  type: object
                  properties:
                    completion:
                      type: integer
                    extra:
                      type: integer
                  required:
                    - completion
                    - extra
                note:
                  type: string
                payout:
                  type: object
                  properties:
                    bugs:
                      type: number
                    completion:
                      type: number
                    extra:
                      type: number
                    refund:
                      type: number
                  required:
                    - completion
                    - bugs
                    - refund
                    - extra
              required:
                - payout
                - experience
                - note
                - completed
              x-examples:
                Example 1:
                  completed: true
                  experience:
                    completion: 10
                    extra: 10
                  note: string
                  payout:
                    bugs: 10
                    completion: 10
                    extra: 10
                    refund: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed:
                    type: boolean
                  experience:
                    type: object
                    properties:
                      completion:
                        type: integer
                      extra:
                        type: integer
                    required:
                      - completion
                      - extra
                  note:
                    type: string
                  payout:
                    type: object
                    properties:
                      bugs:
                        type: number
                      completion:
                        type: number
                      extra:
                        type: number
                      refund:
                        type: number
                    required:
                      - completion
                      - bugs
                      - refund
                      - extra
                required:
                  - payout
                  - experience
                  - note
                  - completed
                x-examples:
                  Example 1:
                    completed: true
                    experience:
                      completion: 0
                      extra: 0
                    note: string
                    payout:
                      bugs: 0.2
                      completion: 0.2
                      extra: 0.2
                      refund: 0.2
      security:
        - JWT: []
  '/campaigns/{campaign}/stats':
    get:
      operationId: get-campaigns-campaign-stats
      summary: Get stats for a specific campaign
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  selected:
                    type: integer
                required:
                  - selected
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
  '/campaigns/{campaign}/tasks':
    get:
      operationId: get-campaigns-campaign-tasks
      summary: Get all Tasks in a Campaign
      description: |
        Get all UseCases linked to a Campaign
      responses:
        '200':
          description: A list of UseCase linked with the Campaign
          content:
            application/json:
              examples:
                example:
                  value:
                    - allow_media: true
                      campaign_id: 42
                      content: <b>During</b> the trip ask the car for the weather
                      group: 4
                      id: 2
                      name: Ask news to Model-3
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Task'
                    - properties:
                        id:
                          type: integer
                      type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
    parameters:
      - $ref: '#/components/parameters/campaign'
    post:
      operationId: post-campaigns-campaign-tasks
      summary: Create a new Task in a Campaign
      description: |
        Create a new UseCase and link it to a Campaign
      requestBody:
        description: The data of the new UseCase to link to the Campaign
        content:
          application/json:
            examples:
              example:
                value:
                  allow_media: true
                  campaign_id: 42
                  content: <b>During</b> the trip ask the car for the weather
                  group: 4
                  id: 2
                  name: Ask news to Model-3
            schema:
              $ref: '#/components/schemas/TaskOptional'
      responses:
        '201':
          description: Created
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
  '/campaigns/{campaign}/tasks/{task}':
    get:
      operationId: get-campaigns-campaign-tasks-task
      summary: Get a specific Task in a Campaign
      description: Get the data of a UseCase in a Campaign
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              examples:
                example:
                  value:
                    allow_media: true
                    campaign_id: 42
                    content: <b>During</b> the trip ask the car for the weather
                    group: 4
                    name: Ask news to Model-3
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
    parameters:
      - $ref: '#/components/parameters/campaign'
      - $ref: '#/components/parameters/task'
    put:
      operationId: put-campaigns-campaign-tasks-task
      summary: Edit a Task
      description: Edit a UseCase in a Campaign
      requestBody:
        description: The data to edit in the UseCase linked to the Campaign
        content:
          application/json:
            examples:
              example:
                value:
                  allow_media: true
                  campaign_id: 42
                  content: <b>During</b> the trip ask the car for the weather
                  group: 4
                  name: Ask news to Model-3
            schema:
              $ref: '#/components/schemas/TaskOptional'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example:
                  value:
                    allow_media: true
                    campaign_id: 42
                    content: <b>During</b> the trip ask the car for the weather
                    group: 4
                    name: Ask news to Model-3
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
  '/campaigns/{campaign}/ux':
    get:
      operationId: get-campaigns-campaign-ux
      summary: Get all data for  a specific ux-campaign
      description: Get the data of a UseCase in a Campaign
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  goal:
                    type: string
                  methodology:
                    type: object
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      type:
                        type: string
                        enum:
                          - qualitative
                          - quantitative
                          - quali-quantitative
                    required:
                      - name
                      - type
                      - description
                  questions:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                  sentiments:
                    type: array
                    items:
                      properties:
                        cluster:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                            - id
                            - name
                        comment:
                          type: string
                        id:
                          type: integer
                        value:
                          type: integer
                      required:
                        - id
                        - value
                        - comment
                        - cluster
                      type: object
                  usersNumber:
                    type: integer
                  visible:
                    type: integer
                    maximum: 1
                    minimum: 0
                required:
                  - goal
                  - usersNumber
                  - sentiments
                  - methodology
                  - questions
                  - visible
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Campaign
        - Task
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    patch:
      operationId: patch-campaigns-campaign-ux
      summary: PATCH ux-campaign-dashboard
      description: ''
      requestBody:
        description: ''
        content:
          application/json:
            examples:
              add-new-insight-and-new-videopart:
                value:
                  goal: this is the goal
                  methodology:
                    description: Methodology Description
                    type: qualitative
                  questions:
                    - id: 1
                      name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - name: who?
                  sentiments:
                    - clusterId: 0
                      comment: comment
                      value: 4
                    - clusterId: 0
                      comment: comment
                      id: 1
                      value: 5
                  usersNumber: 5
              edit-insight-and-videopart:
                value:
                  goal: this is the goal
                  methodology:
                    description: Methodology Description
                    type: quantitative
                  questions:
                    - name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - id: 5
                      name: who?
                  sentiments:
                    - clusterId: 0
                      comment: comment
                      value: 4
                    - clusterId: 0
                      comment: comment
                      id: 1
                      value: 5
                  usersNumber: 5
            schema:
              type: object
              properties:
                goal:
                  type: string
                methodology:
                  type: object
                  properties:
                    description:
                      type: string
                    type:
                      type: string
                  required:
                    - description
                    - type
                questions:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - name
                    type: object
                sentiments:
                  type: array
                  items:
                    properties:
                      clusterId:
                        type: integer
                      comment:
                        type: string
                      id:
                        type: integer
                      value:
                        type: integer
                    required:
                      - clusterId
                      - value
                      - comment
                    type: object
                usersNumber:
                  type: integer
                visible:
                  type: integer
                  maximum: 1
                  minimum: 0
              x-examples:
                Example 1:
                  goal: this is the goal
                  methodology:
                    description: Methodology Description
                    type: quantitative
                  questions:
                    - name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - id: 5
                      name: who?
                  sentiments:
                    - clusterId: 0
                      comment: comment
                      value: 4
                    - clusterId: 0
                      comment: comment
                      id: 1
                      value: 5
                  usersNumber: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                edit-insight-71:
                  value:
                    value:
                      goal: this is goal
                      insights:
                        - clusterIds:
                            - 1
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst.'
                          id: 70
                          order: 0
                          severityId: 1
                          title: Malfunzionamento form
                          videoParts:
                            - description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien'
                              end: 97
                              id: 250
                              mediaId: 73579
                              order: 0
                              start: 0
                            - description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                              end: 101
                              id: 251
                              mediaId: 73577
                              order: 1
                              start: 22
                            - description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                              end: 152
                              id: 252
                              mediaId: 73578
                              order: 2
                              start: 0
                        - clusterIds:
                            - 2
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. edited'
                          id: 71
                          order: 1
                          severityId: 1
                          title: Difficoltà di navigazione edited
                          videoParts:
                            - description: Lorem ipsum dolor sit amet
                              end: 60
                              id: 253
                              mediaId: 73580
                              order: 0
                              start: 0
                        - clusterIds:
                            - 1
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst. Etiam sodales nibh turpis, at condimentum arcu vehicula eget. Donec sollicitudin dapibus '
                          id: 72
                          order: 2
                          severityId: 2
                          title: Criticità Pagina Prodotto
                          videoParts:
                            - description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst. Etiam sodales nibh turpis,'
                              end: 106
                              id: 254
                              mediaId: 73589
                              order: 0
                              start: 0
                      methodology:
                        description: UX Challenge
                        name: UX Challenge
                        type: qualitative
                      questions:
                        - id: 1
                          name: question 1
                        - id: 2
                          name: question 2
                      sentiments: []
                      usersNumber: 10
              schema:
                type: object
                properties: {}
        '403':
          $ref: '#/components/responses/Authentication'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  /certifications:
    get:
      operationId: get-certifications
      summary: Retrive and filter all certifications
      description: Get all certificatio
      parameters:
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    area:
                      type: string
                    id:
                      type: integer
                    institute:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                    - area
                    - institute
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
    parameters: []
  '/countries/{code}/region':
    get:
      operationId: get-regions
      summary: Get regions
      parameters:
        - name: languageCode
          in: query
          schema:
            type: string
            default: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                    - name
                    - value
                  type: object
      security:
        - JWT: []
      tags: []
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
  /custom_user_fields:
    get:
      operationId: get-customUserFields
      summary: Get all custom user fields
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: array
                items:
                  properties:
                    fields:
                      type: array
                      items:
                        $ref: '#/components/schemas/CustomUserFieldsData'
                    group:
                      type: object
                      properties:
                        description:
                          $ref: '#/components/schemas/TranslatablePage'
                        id:
                          type: number
                        name:
                          $ref: '#/components/schemas/TranslatablePage'
                      required:
                        - id
                        - name
                  required:
                    - group
                  type: object
      security:
        - JWT: []
      tags: []
    parameters: []
  /customers:
    get:
      operationId: get-customers
      summary: Get Customers
      description: Get all the customers you have access to
      responses:
        '200':
          description: An array of Customer objects
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - customer_name: Elon71
                      id: 0
                      username: Elon71
                get-customers-success:
                  value:
                    - id: 1
                      name: Peronsipò
                    - id: 2
                      name: AppDefinitions
                    - id: 3
                      name: Gurguley
                    - id: 4
                      name: Surgiva
                    - id: 6
                      name: Sky Line
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: integer
                        name:
                          type: string
                  type: object
        '403':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Customer
    parameters: []
    post:
      operationId: post-customers
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
      security:
        - JWT: []
  '/customers/{customer}/projects':
    get:
      operationId: get-customers-customer-projects
      summary: Your GET endpoint
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                required:
                  - results
      security:
        - JWT: []
      tags: []
    parameters:
      - name: customer
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: post-customers-customer-projects
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                required:
                  - id
                  - name
      security:
        - JWT: []
  '/devices/{device_type}/models':
    get:
      operationId: get-devices-devices-type-model
      summary: Retrive manufacturers and models of devices
      description: Get all model of devices with theirs manufacturers
      parameters:
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    manufacturer:
                      type: string
                    models:
                      type: array
                      items:
                        properties:
                          id:
                            type: number
                          name:
                            type: string
                        type: object
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
    parameters:
      - name: device_type
        in: path
        required: true
        schema:
          type: string
  '/devices/{device_type}/operating_systems':
    get:
      operationId: get-devices-operating-systems
      summary: Retrive operating systems list of a device type
      description: Get all operating systems of a device type
      parameters:
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                  required:
                    - id
                    - name
                    - type
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
    parameters:
      - name: device_type
        in: path
        required: true
        schema:
          type: string
  '/devices/{device_type}/os_versions':
    get:
      operationId: get-devices-os-versions
      summary: Retrive versions list of an operating systems
      description: Get all versions of an operating systems
      parameters:
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
    parameters:
      - name: device_type
        in: path
        required: true
        schema:
          type: string
  /dossiers:
    parameters: []
    post:
      operationId: post-dossiers
      summary: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  autoApply: 0
                  browsers:
                    - 0
                  closeDate: '2019-08-24T14:15:22Z'
                  countries:
                    - st
                  csm: 0
                  description: string
                  deviceList:
                    - 0
                  deviceRequirements: string
                  duplicate:
                    campaign: 0
                    fields: 0
                    mailMerges: 0
                    pages: 0
                    testers: 0
                    useCases: 0
                  endDate: '2019-08-24T14:15:22Z'
                  goal: string
                  languages:
                    - string
                  notes: string
                  outOfScope: string
                  productLink: string
                  productType: 0
                  project: 0
                  roles:
                    - role: 0
                      user: 0
                  skipPagesAndTasks: 0
                  startDate: '2019-08-24T14:15:22Z'
                  target:
                    cap: 0
                    notes: string
                    size: 0
                  testType: 0
                  title:
                    customer: string
                    tester: string
            schema:
              allOf:
                - $ref: '#/components/schemas/DossierCreationData'
                - properties:
                    duplicate:
                      type: object
                      properties:
                        campaign:
                          type: integer
                        fields:
                          type: integer
                        mailMerges:
                          type: integer
                        pages:
                          type: integer
                        testers:
                          type: integer
                        useCases:
                          type: integer
                  type: object
                - properties:
                    autoApply:
                      type: integer
                      maximum: 1
                      minimum: 0
                    pageVersion:
                      type: string
                      enum:
                        - v1
                        - v2
                    skipPagesAndTasks:
                      type: integer
                      default: 0
                      maximum: 1
                      minimum: 0
                  type: object
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 1
                Example 2:
                  value:
                    id: 0
                    message: HOOK_FAILED
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  message:
                    type: string
                    enum:
                      - HOOK_FAILED
                required:
                  - id
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
      security:
        - JWT: []
  '/dossiers/{campaign}':
    get:
      operationId: get-dossiers-campaign
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    autoApply: 1
                    closeDate: '2019-08-24T14:15:22Z'
                    csm:
                      id: 1
                      name: Name Surname
                    customer:
                      id: 1
                      name: My Customer
                    deviceList:
                      - id: 1
                        name: Android
                    endDate: '2019-08-24T14:15:22Z'
                    id: 1
                    phase:
                      id: 1
                      name: name
                    project:
                      id: 1
                      name: My Project
                    roles:
                      - role:
                          id: 1
                          name: PM
                        user:
                          id: 1
                          name: Name
                          surname: Surname
                    startDate: '2019-08-24T14:15:22Z'
                    testType:
                      id: 1
                      name: Bughunting
                    title:
                      customer: Customer Title
                      tester: Tester Title
              schema:
                type: object
                properties:
                  autoApply:
                    type: integer
                    maximum: 1
                    minimum: 0
                  browsers:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                  closeDate:
                    type: string
                    format: date-time
                  countries:
                    type: array
                    items:
                      $ref: '#/components/schemas/CountryCode'
                    minItems: 1
                    uniqueItems: true
                  csm:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  customer:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  description:
                    type: string
                  deviceList:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                  deviceRequirements:
                    type: string
                  endDate:
                    type: string
                    format: date-time
                  goal:
                    type: string
                  id:
                    type: integer
                  languages:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                      required:
                        - name
                      type: object
                  notes:
                    type: string
                  outOfScope:
                    type: string
                  phase:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  productLink:
                    type: string
                  productType:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  project:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  roles:
                    type: array
                    items:
                      properties:
                        role:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                            - id
                            - name
                        user:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            surname:
                              type: string
                          required:
                            - id
                            - name
                            - surname
                      type: object
                  startDate:
                    type: string
                    format: date-time
                  target:
                    type: object
                    properties:
                      cap:
                        type: integer
                      genderQuote:
                        type: string
                      notes:
                        type: string
                      size:
                        type: integer
                  testType:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                  title:
                    type: object
                    properties:
                      customer:
                        type: string
                      tester:
                        type: string
                    required:
                      - customer
                      - tester
                  visibilityCriteria:
                    type: object
                    properties:
                      ageRanges:
                        type: array
                        items:
                          properties:
                            max:
                              type: integer
                            min:
                              type: integer
                          required:
                            - max
                            - min
                          type: object
                      cuf:
                        type: array
                        items:
                          properties:
                            cufId:
                              type: integer
                            cufValueIds:
                              type: array
                              items:
                                type: integer
                          required:
                            - cufId
                            - cufValueIds
                          type: object
                      gender:
                        type: array
                        items:
                          type: integer
                      province:
                        type: array
                        items:
                          type: string
                required:
                  - closeDate
                  - csm
                  - customer
                  - deviceList
                  - endDate
                  - id
                  - phase
                  - project
                  - startDate
                  - testType
                  - title
                  - autoApply
      security:
        - JWT: []
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    put:
      operationId: put-dossiers-campaign
      summary: ''
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DossierCreationData'
                - properties:
                    autoApply:
                      type: integer
                      maximum: 1
                      minimum: 0
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - JWT: []
  '/dossiers/{campaign}/availableTesters':
    get:
      operationId: get-dossiers-campaign-availableTesters
      summary: Get number of available testers for a target campaign
      description: '    '
      parameters:
        - name: refresh
          in: query
          schema:
            type: string
            enum:
              - '1'
              - '0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  lastUpdate:
                    type: string
                    format: date-time
                required:
                  - count
                  - lastUpdate
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
  '/dossiers/{campaign}/manual':
    parameters:
      - $ref: '#/components/parameters/campaign'
    post:
      operationId: post-dossiers-campaign-manual
      summary: Create the manual
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                importFrom:
                  type: integer
              required:
                - importFrom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - JWT: []
  '/dossiers/{campaign}/phases':
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    put:
      operationId: put-dossiers-campaign-phases
      summary: Your PUT endpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phase:
                  type: integer
              required:
                - phase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
      security:
        - JWT: []
      tags: []
  '/dossiers/{campaign}/preview':
    parameters:
      - $ref: '#/components/parameters/campaign'
    post:
      operationId: post-dossiers-campaign-preview
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                importFrom:
                  type: integer
              required:
                - importFrom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      security:
        - JWT: []
  '/dossiers/{campaign}/quotations':
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    post:
      operationId: post-dossiers-campaign-quotations
      summary: ''
      requestBody:
        description: ''
        content:
          application/json:
            examples:
              empty:
                value: {}
              notes-and-quotation:
                value:
                  notes: string
                  quote: '11000'
              only-notes:
                value:
                  notes: string
              only-quotaion:
                value:
                  quote: string
            schema:
              type: object
              properties:
                notes:
                  type: string
                quote:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 0
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '404':
          description: Not Found
      security:
        - JWT: []
  '/dossiers/{campaign}/quotations/{quote}':
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
      - name: quote
        in: path
        required: true
        schema:
          type: string
    patch:
      operationId: patch-dossiers-campaign-quotations-quote
      summary: ''
      description: ''
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            examples:
              Example 1:
                value:
                  amount: string
              Example 2:
                value: {}
            schema:
              type: object
              properties:
                amount:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  '/dossiers/{campaign}/quotesHistory':
    get:
      operationId: get-dossiers-campaign-quotes-history
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    items:
                      - campaign:
                          id: 0
                          phase_id: 2
                          phase_name: Closing
                          title: string
                        quote:
                          amount: string
                          id: 0
                          status: pending
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      properties:
                        campaign:
                          type: object
                          properties:
                            id:
                              type: integer
                            phase_id:
                              type: integer
                            phase_name:
                              type: string
                            title:
                              type: string
                          required:
                            - id
                            - title
                            - phase_id
                            - phase_name
                        quote:
                          type: object
                          properties:
                            amount:
                              type: string
                            id:
                              type: integer
                            status:
                              type: string
                              enum:
                                - pending
                                - proposed
                                - approved
                                - rejected
                          required:
                            - id
                            - amount
                            - status
                      required:
                        - campaign
                        - quote
                      type: object
                required:
                  - items
      security:
        - JWT: []
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
  /education:
    get:
      operationId: get-education
      summary: Get all education levels
      description: Get all education levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: array
                items:
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                      minLength: 1
                  required:
                    - id
                    - name
                  type: object
                minItems: 1
                uniqueItems: true
                x-examples:
                  example-1:
                    - id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
  /employments:
    get:
      operationId: get-employments
      summary: Get All Employements
      description: Get all employments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: array
                items:
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                      minLength: 1
                  required:
                    - id
                    - name
                  type: object
                minItems: 1
                uniqueItems: true
                x-examples:
                  example-1:
                    - id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
  /jotforms/forms:
    get:
      operationId: get-jotforms
      summary: Get Jotforms
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                3 forms:
                  value:
                    - createdAt: '2024-02-24 16:00:00'
                      id: '3'
                      name: Form new
                    - createdAt: '2024-02-25 16:00:00'
                      id: '2'
                      name: Form old
                    - createdAt: '2024-02-26 16:00:00'
                      id: '1'
                      name: Form oldest
                empty:
                  value: []
              schema:
                type: array
                items:
                  properties:
                    createdAt:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                    - createdAt
                  type: object
        '403':
          description: Forbidden
      security:
        - JWT: []
      tags: []
    parameters: []
  '/jotforms/forms/{formId}/questions':
    get:
      operationId: get-jotforms-forms-formId-questions
      summary: Get quesitions from a jotform
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                3 questions:
                  value:
                    - description: Inserisci il tuo tester ID nel formato T1234
                      id: '1'
                      name: testerId
                      title: Tester ID
                      type: control_textbox
                    - description: ''
                      id: '2'
                      name: email
                      title: Email
                      type: control_email
                    - id: '43'
                      name: input43
                      title: "<p>Ciao!<br />Stiamo cercando utenti con fatture insolute dei seguenti operatori:</p>\r\n<ul>\r\n<li>Wind3</li>\r\n<li>Fastweb</li>\r\n<li>Iliad</li>\r\n</ul>\r\n<p>\_</p>\r\n<p>Se rientri nel target, compila la survey, abbiamo un'opportunità di <strong>guadagno</strong> per te!</p>"
                      type: control_text
                empty:
                  value: []
              schema:
                type: array
                items:
                  properties:
                    description:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    title:
                      type: string
                    type:
                      type: string
                  required:
                    - id
                    - name
                    - title
                    - type
                  type: object
        '403':
          description: Forbidden
      security:
        - JWT: []
      tags: []
    parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
  '/jotforms/{campaign}':
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
    post:
      operationId: post-jotforms-campaignId
      summary: Import a jotform to a campaign
      description: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  formId: '123456'
                  testerIdColumn: ltstronggttryberIdltstronggt
            schema:
              type: object
              properties:
                formId:
                  type: string
                testerIdColumn:
                  type: string
              required:
                - formId
                - testerIdColumn
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
      security:
        - JWT: []
  /languages:
    get:
      operationId: get-languages
      summary: Get All Languages
      description: Get all languages
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                All languages:
                  value:
                    - id: 1
                      name: Afrikaans
                    - id: 2
                      name: Afrikaans (South Africa)
                    - id: 3
                      name: Arabic
                    - id: 4
                      name: Arabic (U.A.E.)
                    - id: 5
                      name: Arabic (Bahrain)
                    - id: 6
                      name: Arabic (Algeria)
                    - id: 7
                      name: Arabic (Egypt)
                    - id: 8
                      name: Arabic (Iraq)
                    - id: 9
                      name: Arabic (Jordan)
                    - id: 10
                      name: Arabic (Kuwait)
                    - id: 11
                      name: Arabic (Lebanon)
                    - id: 12
                      name: Arabic (Libya)
                    - id: 13
                      name: Arabic (Morocco)
                    - id: 14
                      name: Arabic (Oman)
                    - id: 15
                      name: Arabic (Qatar)
                    - id: 16
                      name: Arabic (Saudi Arabia)
                    - id: 17
                      name: Arabic (Syria)
                    - id: 18
                      name: Arabic (Tunisia)
                    - id: 19
                      name: Arabic (Yemen)
                    - id: 20
                      name: Azeri (Latin)
                    - id: 21
                      name: Azeri (Azerbaijan)
                    - id: 23
                      name: Belarusian
                    - id: 24
                      name: Belarusian (Belarus)
                    - id: 25
                      name: Bulgarian
                    - id: 26
                      name: Bulgarian (Bulgaria)
                    - id: 27
                      name: Bosnian (Bosnia and Herzegovina)
                    - id: 28
                      name: Catalan
                    - id: 29
                      name: Catalan (Spain)
                    - id: 30
                      name: Czech
                    - id: 31
                      name: Czech (Czech Republic)
                    - id: 32
                      name: Welsh
                    - id: 33
                      name: Welsh (United Kingdom)
                    - id: 34
                      name: Danish
                    - id: 35
                      name: Danish (Denmark)
                    - id: 36
                      name: German
                    - id: 37
                      name: German (Austria)
                    - id: 38
                      name: German (Switzerland)
                    - id: 39
                      name: German (Germany)
                    - id: 40
                      name: German (Liechtenstein)
                    - id: 41
                      name: German (Luxembourg)
                    - id: 42
                      name: Divehi
                    - id: 43
                      name: Divehi (Maldives)
                    - id: 44
                      name: Greek
                    - id: 45
                      name: Greek (Greece)
                    - id: 46
                      name: English
                    - id: 47
                      name: English (Australia)
                    - id: 48
                      name: English (Belize)
                    - id: 49
                      name: English (Canada)
                    - id: 50
                      name: English (Caribbean)
                    - id: 51
                      name: English (United Kingdom)
                    - id: 52
                      name: English (Ireland)
                    - id: 53
                      name: English (Jamaica)
                    - id: 54
                      name: English (New Zealand)
                    - id: 55
                      name: English (Republic of the Philippines)
                    - id: 56
                      name: English (Trinidad and Tobago)
                    - id: 57
                      name: English (United States)
                    - id: 58
                      name: English (South Africa)
                    - id: 59
                      name: English (Zimbabwe)
                    - id: 60
                      name: Esperanto
                    - id: 61
                      name: Spanish
                    - id: 62
                      name: Spanish (Argentina)
                    - id: 63
                      name: Spanish (Bolivia)
                    - id: 64
                      name: Spanish (Chile)
                    - id: 65
                      name: Spanish (Colombia)
                    - id: 66
                      name: Spanish (Costa Rica)
                    - id: 67
                      name: Spanish (Dominican Republic)
                    - id: 68
                      name: Spanish (Ecuador)
                    - id: 70
                      name: Spanish (Spain)
                    - id: 71
                      name: Spanish (Guatemala)
                    - id: 72
                      name: Spanish (Honduras)
                    - id: 73
                      name: Spanish (Mexico)
                    - id: 74
                      name: Spanish (Nicaragua)
                    - id: 75
                      name: Spanish (Panama)
                    - id: 76
                      name: Spanish (Peru)
                    - id: 77
                      name: Spanish (Puerto Rico)
                    - id: 78
                      name: Spanish (Paraguay)
                    - id: 79
                      name: Spanish (El Salvador)
                    - id: 80
                      name: Spanish (Uruguay)
                    - id: 81
                      name: Spanish (Venezuela)
                    - id: 82
                      name: Estonian
                    - id: 83
                      name: Estonian (Estonia)
                    - id: 84
                      name: Basque
                    - id: 85
                      name: Basque (Spain)
                    - id: 86
                      name: Farsi
                    - id: 87
                      name: Farsi (Iran)
                    - id: 88
                      name: Finnish
                    - id: 89
                      name: Finnish (Finland)
                    - id: 90
                      name: Faroese
                    - id: 91
                      name: Faroese (Faroe Islands)
                    - id: 92
                      name: French
                    - id: 93
                      name: French (Belgium)
                    - id: 94
                      name: French (Canada)
                    - id: 95
                      name: French (Switzerland)
                    - id: 96
                      name: French (France)
                    - id: 97
                      name: French (Luxembourg)
                    - id: 98
                      name: French (Principality of Monaco)
                    - id: 99
                      name: Galician
                    - id: 100
                      name: Galician (Spain)
                    - id: 101
                      name: Gujarati
                    - id: 102
                      name: Gujarati (India)
                    - id: 103
                      name: Hebrew
                    - id: 104
                      name: Hebrew (Israel)
                    - id: 105
                      name: Hindi
                    - id: 106
                      name: Hindi (India)
                    - id: 107
                      name: Croatian
                    - id: 108
                      name: Croatian (Bosnia and Herzegovina)
                    - id: 109
                      name: Croatian (Croatia)
                    - id: 110
                      name: Hungarian
                    - id: 111
                      name: Hungarian (Hungary)
                    - id: 112
                      name: Armenian
                    - id: 113
                      name: Armenian (Armenia)
                    - id: 114
                      name: Indonesian
                    - id: 115
                      name: Indonesian (Indonesia)
                    - id: 116
                      name: Icelandic
                    - id: 117
                      name: Icelandic (Iceland)
                    - id: 118
                      name: Italiano
                    - id: 119
                      name: Italiano (Svizzera)
                    - id: 120
                      name: Italiano (Italia)
                    - id: 121
                      name: Japanese
                    - id: 122
                      name: Japanese (Japan)
                    - id: 123
                      name: Georgian
                    - id: 124
                      name: Georgian (Georgia)
                    - id: 125
                      name: Kazakh
                    - id: 126
                      name: Kazakh (Kazakhstan)
                    - id: 127
                      name: Kannada
                    - id: 128
                      name: Kannada (India)
                    - id: 129
                      name: Korean
                    - id: 130
                      name: Korean (Korea)
                    - id: 131
                      name: Konkani
                    - id: 132
                      name: Konkani (India)
                    - id: 133
                      name: Kyrgyz
                    - id: 134
                      name: Kyrgyz (Kyrgyzstan)
                    - id: 135
                      name: Lithuanian
                    - id: 136
                      name: Lithuanian (Lithuania)
                    - id: 137
                      name: Latvian
                    - id: 138
                      name: Latvian (Latvia)
                    - id: 139
                      name: Maori
                    - id: 140
                      name: Maori (New Zealand)
                    - id: 141
                      name: Macedonian
                    - id: 143
                      name: Mongolian
                    - id: 144
                      name: Mongolian (Mongolia)
                    - id: 145
                      name: Marathi
                    - id: 146
                      name: Marathi (India)
                    - id: 147
                      name: Malay
                    - id: 148
                      name: Malay (Brunei Darussalam)
                    - id: 149
                      name: Malay (Malaysia)
                    - id: 150
                      name: Maltese
                    - id: 151
                      name: Maltese (Malta)
                    - id: 152
                      name: Norwegian
                    - id: 153
                      name: Norwegian (Bokm?l) (Norway)
                    - id: 154
                      name: Dutch
                    - id: 155
                      name: Dutch (Belgium)
                    - id: 156
                      name: Dutch (Netherlands)
                    - id: 157
                      name: Norwegian (Nynorsk) (Norway)
                    - id: 158
                      name: Northern Sotho
                    - id: 159
                      name: Northern Sotho (South Africa)
                    - id: 160
                      name: Punjabi
                    - id: 161
                      name: Punjabi (India)
                    - id: 162
                      name: Polish
                    - id: 163
                      name: Polish (Poland)
                    - id: 164
                      name: Pashto
                    - id: 165
                      name: Pashto (Afghanistan)
                    - id: 166
                      name: Portuguese
                    - id: 167
                      name: Portuguese (Brazil)
                    - id: 168
                      name: Portuguese (Portugal)
                    - id: 169
                      name: Quechua
                    - id: 170
                      name: Quechua (Bolivia)
                    - id: 171
                      name: Quechua (Ecuador)
                    - id: 172
                      name: Quechua (Peru)
                    - id: 173
                      name: Romanian
                    - id: 174
                      name: Romanian (Romania)
                    - id: 175
                      name: Russian
                    - id: 176
                      name: Russian (Russia)
                    - id: 177
                      name: Sanskrit
                    - id: 178
                      name: Sanskrit (India)
                    - id: 179
                      name: Sami (Northern)
                    - id: 180
                      name: Sami (Finland)
                    - id: 183
                      name: Sami (Northern) (Norway)
                    - id: 186
                      name: Sami (Northern) (Sweden)
                    - id: 189
                      name: Slovak
                    - id: 190
                      name: Slovak (Slovakia)
                    - id: 191
                      name: Slovenian
                    - id: 192
                      name: Slovenian (Slovenia)
                    - id: 193
                      name: Albanian
                    - id: 194
                      name: Albanian (Albania)
                    - id: 195
                      name: Serbian (Bosnia and Herzegovina)
                    - id: 197
                      name: Serbian (Serbia and Montenegro)
                    - id: 199
                      name: Swedish
                    - id: 200
                      name: Swedish (Finland)
                    - id: 201
                      name: Swedish (Sweden)
                    - id: 202
                      name: Swahili
                    - id: 203
                      name: Swahili (Kenya)
                    - id: 204
                      name: Syriac
                    - id: 205
                      name: Syriac (Syria)
                    - id: 206
                      name: Tamil
                    - id: 207
                      name: Tamil (India)
                    - id: 208
                      name: Telugu
                    - id: 209
                      name: Telugu (India)
                    - id: 210
                      name: Thai
                    - id: 211
                      name: Thai (Thailand)
                    - id: 212
                      name: Tagalog
                    - id: 213
                      name: Tagalog (Philippines)
                    - id: 214
                      name: Tswana
                    - id: 215
                      name: Tswana (South Africa)
                    - id: 216
                      name: Turkish
                    - id: 217
                      name: Turkish (Turkey)
                    - id: 218
                      name: Tatar
                    - id: 219
                      name: Tatar (Russia)
                    - id: 220
                      name: Tsonga
                    - id: 221
                      name: Ukrainian
                    - id: 222
                      name: Ukrainian (Ukraine)
                    - id: 223
                      name: Urdu
                    - id: 224
                      name: Urdu (Islamic Republic of Pakistan)
                    - id: 225
                      name: Uzbek (Latin)
                    - id: 226
                      name: Uzbek (Uzbekistan)
                    - id: 228
                      name: Vietnamese
                    - id: 229
                      name: Vietnamese (Viet Nam)
                    - id: 230
                      name: Xhosa
                    - id: 231
                      name: Xhosa (South Africa)
                    - id: 232
                      name: Chinese
                    - id: 233
                      name: Chinese (S)
                    - id: 234
                      name: Chinese (Hong Kong)
                    - id: 235
                      name: Chinese (Macau)
                    - id: 236
                      name: Chinese (Singapore)
                    - id: 237
                      name: Chinese (T)
                    - id: 238
                      name: Zulu
                    - id: 239
                      name: Zulu (South Africa)
                    - id: 240
                      name: Filipino
                    - id: 241
                      name: Chinese Mandarin
                    - id: 242
                      name: Malayalam
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                  required:
                    - id
                    - name
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
  /levels:
    get:
      operationId: get-levels
      summary: Retrive levels definitions
      description: Get all levels
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LevelDefinition'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
    parameters: []
  /media:
    delete:
      operationId: delete-media
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
              required:
                - url
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
    parameters: []
    post:
      operationId: post-media
      summary: ''
      description: 'Send a media for my bug to AppQuality Bucket. '
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  oneOf:
                    - format: binary
                      properties: {}
                      type: string
                    - items:
                        format: binary
                        type: string
                      type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      properties:
                        errorCode:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - errorCode
                      type: object
                  files:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                      required:
                        - name
                        - path
                      type: object
                required:
                  - files
                x-examples:
                  example-1:
                    failed:
                      - name: string
                    files:
                      - name: string
                        path: string
      security:
        - JWT: []
  /payments:
    get:
      operationId: get-payments
      summary: Get all payments
      parameters:
        - name: status
          in: query
          description: The status of the payment
          schema:
            type: string
            enum:
              - pending
              - failed
        - $ref: '#/components/parameters/order'
        - name: orderBy
          in: query
          description: The value to order by
          schema:
            type: string
            enum:
              - created
              - updated
              - id
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              examples:
                example-1:
                  value:
                    items:
                      - amount:
                          currency: EUR
                          value: 100
                        created: '1645096692'
                        error: INSUFFICIENT_FUNDS
                        id: 123
                        tryber:
                          id: 1
                          name: John
                          surname: Doe
                        type: paypal
                        updated: '1645096692'
                      - amount:
                          currency: EUR
                          value: 100
                        created: '1645096692'
                        error: GENERIC_ERROR
                        id: 1
                        tryber:
                          id: 1
                          name: John
                          surname: Doe
                        type: paypal
                        updated: '1645096692'
                      - amount:
                          currency: EUR
                          value: 100
                        created: '1645096692'
                        error: RECEIVER_UNREGISTERED
                        id: 12
                        tryber:
                          id: 5
                          name: Pippo
                          surname: Franco
                        type: transferwise
                        updated: '1645096692'
                    limit: 3
                    size: 3
                    start: 2
                    total: 100
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      properties:
                        amount:
                          type: object
                          properties:
                            currency:
                              type: string
                            value:
                              type: number
                          required:
                            - value
                            - currency
                        created:
                          description: The timestamp (GMT) of the request creation
                          type: string
                        error:
                          type: string
                        id:
                          type: number
                        tryber:
                          type: object
                          properties:
                            id:
                              type: number
                            name:
                              type: string
                            surname:
                              type: string
                          required:
                            - id
                            - name
                            - surname
                        type:
                          type: string
                          enum:
                            - paypal
                            - transferwise
                        updated:
                          description: The timestamp (GMT) of the request last update
                          type: string
                      required:
                        - created
                        - updated
                        - id
                        - amount
                        - type
                        - tryber
                      type: object
                  limit:
                    type: number
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - size
                  - start
                  - items
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags: []
    parameters: []
  '/payments/{paymentId}':
    delete:
      operationId: delete-payments-paymentId
      summary: Delete payment request from id
      description: delete a specific payment request
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
    parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: post-payments-paymentId
      summary: Pay a request
      description: ''
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  element:
                    type: string
                    enum:
                      - payments
                  id:
                    type: number
                  message:
                    anyOf:
                      - properties:
                          code:
                            type: string
                            enum:
                              - GENERIC_ERROR
                          data:
                            type: string
                        required:
                          - code
                          - data
                        type: object
                      - type: string
                required:
                  - element
                  - id
                  - message
                x-examples:
                  example-1:
                    element: payments
                    id: 0
                    message:
                      code: GENERIC_ERROR
                      data: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  element:
                    type: string
                    enum:
                      - payments
                  id:
                    type: number
                  message:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                          - GENERIC_ERROR
                          - NO_FUNDS
                          - DUPLICATE_PAYMENT
                          - IBAN_NOT_VALID
                          - INSUFFICIENT_FUNDS
                          - RECEIVER_UNREGISTERED
                      data:
                        type: string
                    required:
                      - code
                      - data
                required:
                  - element
                  - id
                  - message
      security:
        - JWT: []
  /phases:
    get:
      operationId: get-phases
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        type:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                            - id
                            - name
                      required:
                        - id
                        - name
                        - type
                      type: object
                required:
                  - results
      security:
        - JWT: []
      tags: []
  /popups:
    get:
      operationId: get-popups
      summary: Get all popups
      description: Retrieve all available popups for admin operations
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - content: string
                      id: 0
                      once: true
                      profiles:
                        - 0
              schema:
                description: ''
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: integer
                      type: object
                    - $ref: '#/components/schemas/Popup'
                x-examples:
                  example-1:
                    - content: string
                      id: string
                      once: true
                      profiles:
                        - 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Admin
    parameters: []
    post:
      operationId: post-popups
      summary: Create a new popup
      description: The new popup will be inserted as an available popup on admin areas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Popup'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    type: object
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - Admin
  '/popups/{popup}':
    get:
      operationId: get-popups-popup
      summary: Get a single popup
      description: Retrieve a signle popup for admin operations
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    type: object
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - Admin
    parameters:
      - name: popup
        in: path
        required: true
        schema:
          type: number
    patch:
      operationId: patch-popups-popup
      summary: Update popup
      description: Edit your popup with a new content or new rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Popup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    type: object
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - Admin
  /productTypes:
    get:
      operationId: get-productTypes
      summary: Your GET endpoint
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    results:
                      - id: 1
                        name: Website / Webapp
                      - id: 2
                        name: Mobile App
                      - id: 100
                        name: Other
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                required:
                  - results
      tags: []
    parameters: []
  /users:
    get:
      operationId: get-users
      summary: Get all users
      description: Get all users you have access to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - JWT: []
      tags:
        - User
    post:
      operationId: post-users
      summary: Create a new user
      description: Create a new user
      requestBody:
        description: ''
        content:
          application/json:
            examples:
              basic-user:
                value:
                  birthDate: '1971-06-28'
                  country: Italy
                  email: elon.musk@tesla.com
                  name: Elon
                  password: Elon78
                  surname: Musk
              basic-user-with-referral:
                value:
                  birthDate: '1971-06-28'
                  country: Italy
                  email: elon.musk@tesla.com
                  name: Elon
                  password: Elon78
                  referral: 11111-1234
                  surname: Musk
            schema:
              type: object
              properties:
                birthDate:
                  type: string
                  format: date
                country:
                  type: string
                email:
                  type: string
                  format: email
                name:
                  type: string
                password:
                  type: string
                referral:
                  description: A referral code (formatted as TESTER_ID-CAMPAIGN_ID)
                  type: string
                  example: 555-1234
                surname:
                  type: string
              required:
                - name
                - surname
                - email
                - password
                - country
                - birthDate
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 1111
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                  - id
        '412':
          description: Precondition Failed
          content:
            application/json:
              examples:
                email-already-exist:
                  value:
                    message: Email bob.alice@example.com already registered
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  Example 1:
                    message: Email bob.alice@example.com already registered
      tags:
        - User
  '/users/by-email/{email}':
    head:
      description: ''
      operationId: head-users-by-email-email
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: Check user by email
    parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
  '/users/by-role/{role}':
    get:
      operationId: get-users-by-role-role
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        surname:
                          type: string
                      required:
                        - id
                        - name
                        - surname
                      type: object
                required:
                  - results
      security:
        - JWT: []
      tags: []
    parameters:
      - name: role
        in: path
        required: true
        schema:
          type: string
          enum:
            - tester_lead
            - quality_leader
            - ux_researcher
            - assistants
  /users/me:
    delete:
      operationId: delete-users-me
      summary: Delete your user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
              required:
                - reason
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
    get:
      operationId: get-users-me
      summary: Get your user data
      description: Get your user data
      parameters:
        - name: fields
          in: query
          description: Comma separated string of specific fields requested
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    additional:
                      - field_id: 0
                        is_candidate: true
                        name: string
                        text: string
                        value: string
                    approved_bugs: 0
                    attended_cp: 0
                    birthDate: '2019-08-24'
                    booty:
                      gross:
                        currency: EUR
                        value: 13.5
                      net:
                        currency: EUR
                        value: 10
                    booty_threshold:
                      isOver: true
                      value: 0
                    certifications:
                      - achievement_date: '2019-08-24'
                        area: string
                        id: 0
                        institute: string
                        name: string
                    city: Cremona
                    completionPercent: 0
                    country: Italy
                    education:
                      id: 0
                      name: string
                    email: user@example.com
                    gender: male
                    id: 0
                    image: string
                    is_verified: true
                    languages:
                      - id: 46
                        name: English
                      - id: 61
                        name: Spanish
                      - id: 120
                        name: Italiano (Italia)
                    name: string
                    onboarding_completed: true
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 13.5
                      net:
                        currency: EUR
                        value: 10
                    phone: '11000000000'
                    profession:
                      id: 0
                      name: string
                    rank: string
                    role: string
                    surname: string
                    total_exp_pts: 0
                    username: string
                    wp_user_id: 0
                booty_gross:
                  value:
                    booty_threshold:
                      isOver: true
                      value: 0
                    id: 0
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 13.5
                    role: string
                booty_net:
                  value:
                    booty_threshold:
                      isOver: true
                      value: 0
                    id: 0
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 16
                      net:
                        currency: EUR
                        value: 13.5
                    role: string
                dashboard_fields_gross_only:
                  value:
                    approved_bugs: 38
                    attended_cp: 6
                    booty:
                      gross:
                        currency: EUR
                        value: 3.4
                    id: 10951
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 157.5
                    rank: '0'
                    role: administrator
                    total_exp_pts: 4165
                dashboard_fields_net:
                  value:
                    approved_bugs: 38
                    attended_cp: 6
                    booty:
                      gross:
                        currency: EUR
                        value: 3.4
                      net:
                        currency: EUR
                        value: 3
                    id: 10951
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 157.5
                      net:
                        currency: EUR
                        value: 126
                    rank: '0'
                    role: administrator
                    total_exp_pts: 4165
                role admin:
                  value:
                    additional:
                      - field_id: 0
                        is_candidate: true
                        name: string
                        text: string
                        value: string
                    approved_bugs: 0
                    attended_cp: 0
                    birthDate: '2019-08-24'
                    booty:
                      gross:
                        currency: string
                        value: 0
                      net:
                        currency: string
                        value: 0
                    booty_threshold:
                      isOver: true
                      value: 0
                    certifications:
                      - achievement_date: '2019-08-24'
                        area: string
                        id: 0
                        institute: string
                        name: string
                    city: string
                    completionPercent: 0
                    country: string
                    education:
                      id: 0
                      name: string
                    email: user@example.com
                    gender: male
                    id: 0
                    image: string
                    is_verified: true
                    languages:
                      - id: 0
                        name: string
                    name: string
                    onboarding_completed: true
                    pending_booty:
                      gross:
                        currency: string
                        value: 0
                      net:
                        currency: string
                        value: 0
                    phone: string
                    profession:
                      id: 0
                      name: string
                    rank: string
                    role: string
                    surname: string
                    total_exp_pts: 0
                    username: string
                    wp_user_id: 0
                user subscriber onboarding complete:
                  value:
                    email: name.surname@mail.com
                    id: 11110
                    image: 'https://secure.gravatar.com/avatar/087ada6e86cf8ec31a49217dd05b7151?s=132&d=https%3A%2F%2Feu.ui-avatars.com%2Fapi%2Fi%2Bl%2F132&r=x'
                    name: Name
                    onboarding_completed: true
                    role: subscriber
                    surname: Surname
                    wp_user_id: 11111
              schema:
                type: object
                properties:
                  additional:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalField'
                  approved_bugs:
                    type: number
                  attended_cp:
                    type: number
                  birthDate:
                    type: string
                    format: date
                  booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  booty_threshold:
                    type: object
                    properties:
                      isOver:
                        type: boolean
                      value:
                        type: number
                    required:
                      - value
                      - isOver
                  certifications:
                    oneOf:
                      - items:
                          $ref: '#/components/schemas/Certification'
                        type: array
                      - type: boolean
                  city:
                    type: string
                  completionPercent:
                    type: number
                  country:
                    type: string
                  education:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  email:
                    type: string
                    format: email
                    minLength: 1
                  gender:
                    $ref: '#/components/schemas/Gender'
                  id:
                    type: number
                  image:
                    type: string
                    minLength: 1
                  is_verified:
                    type: boolean
                  languages:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                      type: object
                  name:
                    type: string
                    minLength: 1
                  onboarding_completed:
                    type: boolean
                  pending_booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  phone:
                    type: string
                  profession:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  rank:
                    type: string
                  role:
                    type: string
                    minLength: 1
                  surname:
                    type: string
                    minLength: 1
                  total_exp_pts:
                    type: number
                  username:
                    type: string
                    minLength: 1
                  wp_user_id:
                    type: number
                required:
                  - id
                x-examples:
                  example-1:
                    email: user@example.com
                    id: 0
                    image: 'http://example.com'
                    is_verified: true
                    name: string
                    role: string
                    surname: string
                    username: string
                    wp_user_id: 0
      security:
        - JWT: []
      tags:
        - User
    patch:
      operationId: patch-users-me
      summary: Edit a field of your user
      description: Edit basic user fields
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  onboarding_completed: true
            schema:
              description: ''
              type: object
              properties:
                birthDate:
                  type: string
                city:
                  type: string
                country:
                  type: string
                education:
                  type: integer
                email:
                  type: string
                  format: email
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - not-specified
                    - other
                name:
                  type: string
                oldPassword:
                  type: string
                onboarding_completed:
                  type: boolean
                password:
                  type: string
                phone:
                  type: string
                profession:
                  type: integer
                surname:
                  type: string
              x-examples:
                example-1:
                  additional:
                    - {}
                  birthDate: '2019-08-24'
                  booty: 0
                  certifications:
                    - achievement_date: '2019-08-24'
                      area: string
                      institute: string
                      name: string
                  city: string
                  completionPercent: 0
                  country: string
                  education: string
                  email: string
                  gender: string
                  id: 0
                  image: string
                  is_verified: true
                  languages:
                    - string
                  name: string
                  onboarding_completed: true
                  pending_booty: 0
                  phone: string
                  profession: string
                  rank: string
                  role: string
                  surname: string
                  total_exp_pts: 0
                  username: string
                  wp_user_id: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    additional:
                      - field_id: 0
                        is_candidate: true
                        name: string
                        text: string
                        value: string
                    approved_bugs: 0
                    attended_cp: 0
                    birthDate: '2019-08-24'
                    booty:
                      gross:
                        currency: EUR
                        value: 13.5
                      net:
                        currency: EUR
                        value: 10
                    booty_threshold:
                      isOver: true
                      value: 0
                    certifications:
                      - achievement_date: '2019-08-24'
                        area: string
                        id: 0
                        institute: string
                        name: string
                    city: Cremona
                    completionPercent: 0
                    country: Italy
                    education:
                      id: 0
                      name: string
                    email: user@example.com
                    gender: male
                    id: 0
                    image: string
                    is_verified: true
                    languages:
                      - id: 46
                        name: English
                      - id: 61
                        name: Spanish
                      - id: 120
                        name: Italiano (Italia)
                    name: string
                    onboarding_completed: true
                    pending_booty:
                      gross:
                        currency: EUR
                        value: 13.5
                      net:
                        currency: EUR
                        value: 10
                    phone: '11000000000'
                    profession:
                      id: 0
                      name: string
                    rank: string
                    role: string
                    surname: string
                    total_exp_pts: 0
                    username: string
                    wp_user_id: 0
              schema:
                type: object
                properties:
                  additional:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalField'
                  approved_bugs:
                    type: number
                  attended_cp:
                    type: number
                  birthDate:
                    type: string
                    format: date
                  booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  certifications:
                    oneOf:
                      - items:
                          $ref: '#/components/schemas/Certification'
                        type: array
                      - type: boolean
                  city:
                    type: string
                  completionPercent:
                    type: number
                  country:
                    type: string
                  education:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  email:
                    type: string
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                      - not-specified
                      - other
                  id:
                    type: number
                  image:
                    type: string
                  is_verified:
                    type: boolean
                  languages:
                    type: array
                    items:
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                      type: object
                  name:
                    type: string
                  onboarding_completed:
                    type: boolean
                  pending_booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  phone:
                    type: string
                  profession:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  rank:
                    type: string
                  role:
                    type: string
                  surname:
                    type: string
                  total_exp_pts:
                    type: number
                  username:
                    type: string
                  wp_user_id:
                    type: number
                required:
                  - id
                x-examples:
                  example-1:
                    additional:
                      - field_id: 0
                        is_candidate: true
                        name: string
                        text: string
                        value: string
                    approved_bugs: 0
                    attended_cp: 0
                    birthDate: '2019-08-24'
                    booty: 0
                    certifications:
                      - achievement_date: '2019-08-24'
                        area: string
                        id: 0
                        institute: string
                        name: string
                    city: string
                    completionPercent: 0
                    country: string
                    education:
                      id: 0
                      name: string
                    email: string
                    gender: male
                    id: 0
                    image: string
                    is_verified: true
                    languages:
                      - id: 0
                        name: string
                    name: string
                    onboarding_completed: true
                    pending_booty: 0
                    phone: string
                    profession:
                      id: 0
                      name: string
                    rank: string
                    role: string
                    surname: string
                    total_exp_pts: 0
                    username: string
                    wp_user_id: 0
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
    put:
      operationId: put-users-me
      summary: Edit your user data
      description: Edit your user data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
                surname:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - JWT: []
      tags:
        - User
  '/users/me/additionals/{fieldId}':
    parameters:
      - name: fieldId
        in: path
        description: The id of the field to edit
        required: true
        schema:
          type: integer
    put:
      operationId: put-users-me-additionals-fieldId
      summary: Edit your custom user fields
      description: The field data will be replaced with your new data
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - items:
                    properties:
                      is_candidate:
                        type: boolean
                      value:
                        type: string
                    required:
                      - value
                    type: object
                  type: array
                - properties:
                    is_candidate:
                      type: boolean
                    value:
                      type: string
                  required:
                    - value
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                oneOf:
                  - items:
                      $ref: '#/components/schemas/AdditionalField'
                    type: array
                  - $ref: '#/components/schemas/AdditionalField'
                x-examples:
                  example-1:
                    - field_id: 23
                      name: Linkedin Profile
                      value: 'https://www.linkedin.com/in/gianpaolosinatra/'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
  /users/me/bugs:
    get:
      operationId: get-users-me-bugs
      summary: Get your uploaded bugs
      description: 'Get all the bugs that you uploaded to AppQuality. '
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
        - name: orderBy
          in: query
          description: The field for item order
          schema:
            type: string
            enum:
              - title
              - campaign
              - status
              - id
              - severity
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                minimal-example:
                  value:
                    limit: 5
                    results:
                      - campaign:
                          id: 1
                          name: UX test for a selfdrive service
                        id: 1
                        severity:
                          id: 1
                          name: LOW
                        status:
                          id: 1
                          name: Refused
                        title: Self drive system crashing
                    size: 1
                    start: 10
                    total: 100
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: integer
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/Bug'
                  size:
                    type: integer
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - results
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    parameters: []
  /users/me/campaigns:
    get:
      operationId: get-users-me-campaigns
      summary: GET user campaign
      description: |-
        get available, and selected campaigns for a single user.
        filterBy[accepted] = 1 retrieve accepted campaign only, otherwise retrieve available campaign.
        filterBy[completed] = 1 get completed campaigns only (end date in the past)
        filterBy[completed] = 0 get not completed campaigns only (end date today or in the future)
        filterBy[statusID] = 1 get open campaigns
        filterBy[statusID] = 2 get closed campaigns
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/order'
        - name: orderBy
          in: query
          description: The field for item order
          schema:
            type: string
            enum:
              - name
              - start_date
              - end_date
              - close_date
              - visibility
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: integer
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/Campaign'
                  size:
                    type: integer
                  start:
                    type: integer
                  total:
                    type: integer
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - JWT: []
      tags:
        - User
  '/users/me/campaigns/{campaignId}':
    get:
      operationId: get-users-me-campaigns-campaignId
      summary: Get the data for a campaign you are selected in
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                full:
                  value:
                    additionalFields:
                      - error: You have to select a browser
                        name: Browser Used
                        options:
                          - Chrome
                          - Safari
                        slug: browser-used
                        type: select
                      - error: Il codice cliente è obbligatorio nel formato AAA1234
                        name: Codice Cliente
                        regex: '[A-Z]{3}[0-9]{4}'
                        slug: codice-cliente
                        type: text
                    bugReplicability:
                      invalid:
                        - ONCE
                      valid:
                        - ALWAYS
                        - SOMETIMES
                    bugSeverity:
                      invalid:
                        - HIGH
                        - CRITICAL
                      valid:
                        - LOW
                        - MEDIUM
                    bugTypes:
                      invalid:
                        - PERFORMANCE
                      valid:
                        - CRASH
                        - TYPO
                    campaign_type:
                      icon: bug-report
                      id: 1
                      name: Bug Hunting
                    devices:
                      - device:
                          id: 123
                          manufacturer: Apple
                          model: iPhone X
                        id: 1
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 12
                        type: Smartphone
                      - device:
                          id: 123
                          manufacturer: Apple
                          model: iPhone 6
                        id: 2
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 10
                        type: Smartphone
                    end_date: 01-01-2026
                    goal: A beautiful goal
                    hasBugForm: true
                    id: 123
                    language:
                      code: IT
                      message: In questa campagna vanno caricati i bug in italiano
                    minimumMedia: 3
                    title: My campaign
                    titleRule: true
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                with-bugform-disabled:
                  value:
                    bugReplicability:
                      invalid: []
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                    bugSeverity:
                      invalid: []
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    bugTypes:
                      invalid: []
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                    campaign_type:
                      icon: bug-report
                      id: 1
                      name: Bug Hunting
                    devices: []
                    end_date: 01-01-2026
                    goal: A beautiful goal
                    hasBugForm: false
                    id: 123
                    minimumMedia: 3
                    title: My campaign
                    titleRule: true
                    useCases: []
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                with-only-one-device:
                  value:
                    bugReplicability:
                      invalid: []
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                    bugSeverity:
                      invalid: []
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    bugTypes:
                      invalid: []
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                    campaign_type:
                      icon: bug-report
                      id: 1
                      name: Bug Hunting
                    devices:
                      - device:
                          id: 123
                          manufacturer: Apple
                          model: iPhone X
                        id: 1
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 12
                        type: Smartphone
                    end_date: 01-01-2026
                    goal: A beautiful goal
                    hasBugForm: true
                    id: 123
                    minimumMedia: 3
                    title: My campaign
                    titleRule: true
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                without-device:
                  value:
                    bugReplicability:
                      invalid: []
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                    bugSeverity:
                      invalid: []
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    bugTypes:
                      invalid: []
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                    campaign_type:
                      icon: bug-report
                      id: 1
                      name: Bug Hunting
                    end_date: 01-01-2026
                    goal: A beautiful goal
                    hasBugForm: true
                    id: 123
                    minimumMedia: 3
                    title: My campaign
                    titleRule: true
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
              schema:
                type: object
                properties:
                  additionalFields:
                    type: array
                    items:
                      $ref: '#/components/schemas/CampaignAdditionalField'
                  bugReplicability:
                    type: object
                    properties:
                      invalid:
                        type: array
                        items:
                          type: string
                      valid:
                        type: array
                        items:
                          type: string
                    required:
                      - invalid
                      - valid
                  bugSeverity:
                    type: object
                    properties:
                      invalid:
                        type: array
                        items:
                          type: string
                      valid:
                        type: array
                        items:
                          type: string
                    required:
                      - invalid
                      - valid
                  bugTypes:
                    type: object
                    properties:
                      invalid:
                        type: array
                        items:
                          type: string
                      valid:
                        type: array
                        items:
                          type: string
                    required:
                      - invalid
                      - valid
                  campaign_type:
                    type: object
                    properties:
                      icon:
                        type: string
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                      - icon
                  devices:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: integer
                          required:
                            - id
                          type: object
                        - $ref: '#/components/schemas/UserDevice'
                  end_date:
                    type: string
                  goal:
                    type: string
                  hasBugForm:
                    type: boolean
                  id:
                    type: integer
                  language:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                    required:
                      - code
                      - message
                  minimumMedia:
                    type: integer
                  title:
                    type: string
                  titleRule:
                    type: boolean
                  useCases:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                      type: object
                  validFileExtensions:
                    type: array
                    items:
                      type: string
                required:
                  - bugReplicability
                  - bugSeverity
                  - bugTypes
                  - campaign_type
                  - end_date
                  - goal
                  - hasBugForm
                  - id
                  - minimumMedia
                  - title
                  - useCases
                  - validFileExtensions
      security:
        - JWT: []
        - User Token: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
  '/users/me/campaigns/{campaignId}/bugs':
    parameters:
      - name: campaignId
        in: path
        description: the campaign id
        required: true
        schema:
          type: string
    post:
      operationId: post-users-me-campaigns-campaign-bugs
      summary: POST a user bug on a specific campaign
      description: Send a user bug on a specific campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                additional:
                  type: array
                  items:
                    properties:
                      slug:
                        type: string
                      value:
                        type: string
                    required:
                      - slug
                      - value
                    type: object
                current:
                  type: string
                description:
                  type: string
                device:
                  type: integer
                expected:
                  type: string
                lastSeen:
                  type: string
                media:
                  type: array
                  items:
                    type: string
                notes:
                  type: string
                replicability:
                  type: string
                  enum:
                    - ONCE
                    - SOMETIMES
                    - ALWAYS
                severity:
                  type: string
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - CRITICAL
                title:
                  type: string
                type:
                  type: string
                usecase:
                  type: integer
              required:
                - title
                - description
                - expected
                - current
                - severity
                - replicability
                - type
                - notes
                - lastSeen
                - usecase
                - device
                - media
              x-examples:
                example-1:
                  additional:
                    - name: ''
                      value: ''
                  current: ''
                  description: ''
                  device: 1
                  expected: ''
                  media:
                    - ''
                    - ''
                  notes: ''
                  replicability: ONCE
                  severity: LOW
                  title: ''
                  type: TYPO
                  usecase: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  additional:
                    type: array
                    items:
                      properties:
                        slug:
                          type: string
                        value:
                          type: string
                      required:
                        - slug
                        - value
                      type: object
                  current:
                    type: string
                  description:
                    type: string
                  device:
                    $ref: '#/components/schemas/UserDevice'
                  expected:
                    type: string
                  id:
                    type: number
                  internalId:
                    type: string
                  media:
                    type: array
                    items:
                      type: string
                  notes:
                    type: string
                  replicability:
                    type: string
                    enum:
                      - ONCE
                      - SOMETIMES
                      - ALWAYS
                  severity:
                    type: string
                    enum:
                      - LOW
                      - MEDIUM
                      - HIGH
                      - CRITICAL
                  status:
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - REFUSED
                      - NEED-REVIEW
                  testerId:
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                  usecase:
                    type: string
                required:
                  - id
                  - testerId
                  - title
                  - description
                  - status
                  - expected
                  - current
                  - severity
                  - replicability
                  - type
                  - notes
                  - usecase
                  - device
                  - media
                x-examples:
                  example-1:
                    additional:
                      - name: ''
                        value: ''
                    current: ''
                    description: ''
                    device: {}
                    expected: ''
                    id: ''
                    media:
                      - ''
                      - ''
                    notes: ''
                    replicability: ''
                    severity: ''
                    status: ''
                    testerId: 1
                    title: ''
                    type: ''
                    usecase: ''
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
        - User Token: []
  '/users/me/campaigns/{campaignId}/devices':
    get:
      operationId: get-users-me-campaigns-campaignId-devices
      summary: Get the device available for this campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                multiple-devices:
                  value:
                    - device:
                        id: 5333
                        manufacturer: Airo Wireless
                        model: A25is
                      id: 28440
                      operating_system:
                        id: 729
                        platform: Windows Mobile Professional
                        version: Windows Mobile 6.5 (6.5)
                      type: Smartphone
                    - device:
                        pc_type: Desktop
                      id: 27723
                      operating_system:
                        id: 781
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.5)
                      type: PC
                    - device:
                        pc_type: Desktop
                      id: 28438
                      operating_system:
                        id: 792
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.6)
                      type: PC
                    - device:
                        pc_type: Notebook
                      id: 27721
                      operating_system:
                        id: 772
                        platform: Windows
                        version: Windows 10 November 2019 Update (18363.778)
                      type: PC
                    - device:
                        pc_type: Ultrabook
                      id: 27722
                      operating_system:
                        id: 771
                        platform: Windows
                        version: Windows 10 May 2019 Update (18362)
                      type: PC
                    - device:
                        id: 47400
                        manufacturer: Bang & Olufsen
                        model: BeoVision 11 40"
                      id: 28439
                      operating_system:
                        id: 822
                        platform: Fire TV
                        version: Fire OS 7 (7)
                      type: Smart-tv
                single-device:
                  value:
                    - device:
                        pc_type: Desktop
                      id: 1
                      operating_system:
                        id: 781
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.5)
                      type: PC
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
        - User Token: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
  '/users/me/campaigns/{campaignId}/forms':
    get:
      operationId: get-users-me-campaign-campaignId-forms
      summary: Get the preselection form for your campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - id: 1
                      question: Come si chiama il tuo cane?
                      type: text
                    - id: 2
                      options:
                        - Sì
                        - 'No'
                      question: Il tuo cane si chiama pippo?
                      type: radio
                    - id: 3
                      options:
                        - ALANO TIGRATO
                        - ALASKAN MALAMUTE
                        - ALPENLAENDISCHE DACHSBRACKE
                        - AMSTAFF
                      question: Di che razza è il tuo cane?
                      type: select
                    - id: 4
                      options:
                        - Cimurro
                        - Parvovirus
                        - Adenovirus
                      question: Che vaccinazioni ha fatto il tuo cane?
                      type: multiselect
                    - id: 5
                      options:
                        - 1
                        - 2
                        - 3
                        - 4
                      question: Con quali banche hai un conto?
                      type: cuf_22
                      value:
                        - 3
                        - 4
                    - id: 6
                      question: Scrivi il tuo username telegram
                      type: cuf_15
                      validation:
                        error: 'Inserire l''utente telegram in questo formato: @pippo'
                        regex: '^@[a-zA-Z]*$'
                      value: '@pippo'
                    - id: 7
                      question: Con che genere ti identifichi?
                      type: gender
                      value: male
                    - id: 8
                      question: Qual è il tuo numero di telefono
                      type: phone_number
                      validation:
                        regex: '^\+?[0-9]{12,14}$'
                      value: '+33123456789'
                    - id: 9
                      question: Dove abiti?
                      type: address
                      value:
                        city: Pesaro
                        country: Italy
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: number
                        question:
                          type: string
                        short_name:
                          type: string
                        validation:
                          type: object
                          properties:
                            error:
                              type: string
                            regex:
                              type: string
                          required:
                            - regex
                        value:
                          oneOf:
                            - type: integer
                            - properties:
                                city:
                                  type: string
                                country:
                                  type: string
                              type: object
                            - items:
                                type: integer
                              type: array
                            - type: string
                      required:
                        - question
                        - id
                    - oneOf:
                        - properties:
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionSimple'
                          required:
                            - type
                        - properties:
                            options:
                              type: array
                              items:
                                type: string
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionMultiple'
                          required:
                            - type
                            - options
                        - properties:
                            options:
                              type: array
                              items:
                                type: number
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionCuf'
                          required:
                            - type
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: post-users-me-campaigns-campaignId-forms
      summary: ''
      description: ''
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device:
                    - 123
                  form:
                    - question: 1
                      value:
                        serialized: Pippo
                    - question: 2
                      value:
                        serialized: Sì
                    - question: 3
                      value:
                        serialized: ALANO TIGRATO
                    - question: 4
                      value:
                        serialized:
                          - Cimurro
                          - Parvovirus
                    - question: 5
                      value:
                        id:
                          - 1
                          - 3
                        serialized:
                          - Banca 1
                          - Banca 3
                    - question: 6
                      value:
                        serialized: '@franco'
                    - question: 7
                      value:
                        serialized: female
                    - question: 8
                      value:
                        serialized: '+33233456789'
                    - question: 9
                      value:
                        serialized:
                          city: Roma
                          country: Italy
            schema:
              type: object
              properties:
                device:
                  type: array
                  items:
                    type: integer
                form:
                  type: array
                  items:
                    properties:
                      question:
                        type: number
                      value:
                        type: object
                        properties:
                          id:
                            oneOf:
                              - type: integer
                              - items:
                                  type: integer
                                type: array
                          serialized:
                            oneOf:
                              - type: string
                              - items:
                                  type: string
                                type: array
                              - properties:
                                  city:
                                    type: string
                                  country:
                                    type: string
                                required:
                                  - city
                                  - country
                                type: object
                    required:
                      - value
                      - question
                    type: object
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
  '/users/me/campaigns/{campaignId}/media':
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: post-users-me-campaigns-campaignId-media
      summary: Upload media for a bug
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  oneOf:
                    - properties: {}
                      type: string
                    - items:
                        type: string
                      type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      properties:
                        errorCode:
                          type: string
                          enum:
                            - FILE_TOO_BIG
                            - INVALID_FILE_EXTENSION
                            - GENERIC_ERROR
                        name:
                          type: string
                      required:
                        - name
                        - errorCode
                      type: object
                  files:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                      required:
                        - name
                        - path
                      type: object
      security:
        - JWT: []
        - User Token: []
  '/users/me/campaigns/{campaignId}/payout_data':
    get:
      operationId: get-users-me-campaigns-cid-payout-data
      summary: Get the payout data form campaign
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    campaign_complete_bonus_eur: 1.4
                    campaign_pts: 2.4
                    critical_bug_payout: 3.4
                    high_bug_payout: 4.4
                    low_bug_payout: 5.4
                    medium_bug_payout: 6.4
                    minimum_bugs: 6.4
                    payout_limit: 7.4
                    percent_usecases: 80
                    point_multiplier_critical: 9.4
                    point_multiplier_high: 10.4
                    point_multiplier_low: 11.4
                    point_multiplier_medium: 12.4
                    point_multiplier_perfect: 13.4
                    point_multiplier_refused: 14.4
                    top_tester_bonus: 15.4
              schema:
                type: object
                properties:
                  campaign_complete_bonus_eur:
                    type: number
                  campaign_pts:
                    type: number
                  critical_bug_payout:
                    type: number
                  high_bug_payout:
                    type: number
                  low_bug_payout:
                    type: number
                  medium_bug_payout:
                    type: number
                  minimum_bugs:
                    type: number
                  payout_limit:
                    type: number
                  percent_usecases:
                    type: number
                    maximum: 100
                    minimum: 0
                  point_multiplier_critical:
                    type: number
                  point_multiplier_high:
                    type: number
                  point_multiplier_low:
                    type: number
                  point_multiplier_medium:
                    type: number
                  point_multiplier_perfect:
                    type: number
                  point_multiplier_refused:
                    type: number
                  top_tester_bonus:
                    type: number
                required:
                  - campaign_complete_bonus_eur
                  - campaign_pts
                  - critical_bug_payout
                  - high_bug_payout
                  - low_bug_payout
                  - medium_bug_payout
                  - minimum_bugs
                  - payout_limit
                  - percent_usecases
                  - point_multiplier_critical
                  - point_multiplier_high
                  - point_multiplier_low
                  - point_multiplier_medium
                  - point_multiplier_perfect
                  - point_multiplier_refused
                  - top_tester_bonus
                x-examples:
                  Example 1:
                    campaign_complete_bonus_eur: 10.4
                    campaign_pts: 10.4
                    critical_bug_payout: 10.4
                    high_bug_payout: 10.4
                    low_bug_payout: 10.4
                    medium_bug_payout: 10.4
                    minimum_bugs: 10.4
                    payout_limit: 10.4
                    percent_usecases: 10.4
                    point_multiplier_critical: 10.4
                    point_multiplier_high: 10.4
                    point_multiplier_low: 10.4
                    point_multiplier_medium: 10.4
                    point_multiplier_perfect: 10.4
                    point_multiplier_refused: 10.4
                    top_tester_bonus: 10.4
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
  '/users/me/campaigns/{campaignId}/preview':
    get:
      operationId: get-users-me-campaigns-cid-preview
      summary: Get the preview data form for your v2-campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                preview-with-tl:
                  value:
                    acceptedDevices:
                      pc:
                        - name: Windows
                      smartphone: all
                    campaignType: string
                    content: string
                    endDate: string
                    selectionStatus: starting
                    startDate: string
                    status: selected
                    title: title
                    type:
                      icon: bug-icon
                      name: bug-hunting
                    tl:
                      email: string
                      name: string
                preview-without-tl:
                  value:
                    acceptedDevices:
                      pc:
                        - name: Windows
                      smartphone: all
                    campaignType: string
                    content: string
                    title: title
                    endDate: string
                    type:
                      icon: bug-icon
                      name: bug-hunting
                    selectionStatus: starting
                    startDate: string
                    status: selected
              schema:
                type: object
                properties:
                  acceptedDevices:
                    type: object
                    properties:
                      console:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                      pc:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                      smartTv:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                      smartphone:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                      smartwatch:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                      tablet:
                        oneOf:
                          - items:
                              $ref: '#/components/schemas/AvailableDevice'
                            type: array
                          - enum:
                              - all
                  cap:
                    type: object
                    properties:
                      free:
                        type: integer
                      value:
                        type: integer
                    required:
                      - free
                      - value
                  content:
                    type: string
                  endDate:
                    type: string
                  selectionStatus:
                    type: string
                    enum:
                      - starting
                      - excluded
                      - ready
                      - complete
                  startDate:
                    type: string
                  status:
                    type: string
                    enum:
                      - available
                      - applied
                      - excluded
                      - selected
                  title:
                    type: string
                  tl:
                    type: object
                    properties:
                      email:
                        type: string
                      name:
                        type: string
                    required:
                      - email
                      - name
                  type:
                    type: object
                    properties:
                      icon:
                        type: string
                      name:
                        type: string
                    required:
                      - name
                      - icon
                required:
                  - acceptedDevices
                  - type
                  - content
                  - endDate
                  - startDate
                  - status
                  - title
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
  '/users/me/campaigns/{campaignId}/tasks':
    get:
      operationId: get-users-me-campaign-campaignId-tasks
      summary: Get the Usecases for your campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    - content: string
                      id: 0
                      is_required: 0
                      name: string
                      status: completed
              schema:
                type: array
                items:
                  properties:
                    content:
                      type: string
                    id:
                      type: integer
                    is_required:
                      type: integer
                      maximum: 1
                      minimum: 0
                    name:
                      type: string
                    status:
                      type: string
                      enum:
                        - completed
                        - pending
                  required:
                    - content
                    - id
                    - is_required
                    - name
                    - status
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: string
  '/users/me/campaigns/{campaignId}/tasks/{taskId}':
    parameters:
      - name: campaignId
        in: path
        description: the campaign id
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: post-users-me-campaigns-campaign-tasks-task
      summary: Set a task completed by user
      description: ''
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  status: completed
            schema:
              type: object
              properties:
                status:
                  enum:
                    - completed
              required:
                - status
              x-examples:
                example-1:
                  additional:
                    - name: ''
                      value: ''
                  current: ''
                  description: ''
                  device: 1
                  expected: ''
                  media:
                    - ''
                    - ''
                  notes: ''
                  replicability: ONCE
                  severity: LOW
                  title: ''
                  type: TYPO
                  usecase: 1
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
  '/users/me/campaigns/{campaign}/compatible_devices':
    get:
      operationId: get-users-me-campaigns-campaignId-compatible-devices
      summary: Get the user devices for a campaign you are selected in
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value: []
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: campaign
        in: path
        description: A campaign id
        required: true
        schema:
          type: string
  /users/me/certifications:
    post:
      operationId: post-users-me-certifications
      summary: Add one certification to your profile
      description: Add one certification to your profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - properties:
                    certifications:
                      type: boolean
                  required:
                    - certifications
                - properties:
                    achievement_date:
                      type: string
                      format: date
                    certification_id:
                      type: integer
                  required:
                    - certification_id
                    - achievement_date
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples: {}
              schema:
                description: ''
                oneOf:
                  - $ref: '#/components/schemas/Certification'
                  - properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
                x-examples:
                  example-1:
                    achievement_date: '2019-08-24'
                    area: string
                    institute: string
                    name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
  '/users/me/certifications/{certificationId}':
    delete:
      operationId: delete-users-me-certifications-certificationId
      summary: Remove a certification from your profile
      description: The certification will be removed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    parameters:
      - name: certificationId
        in: path
        description: The id of the certification
        required: true
        schema:
          type: integer
  /users/me/devices:
    get:
      operationId: get-users-me-devices
      summary: Get all your devices
      description: Get all your device data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: number
                      type: object
                    - $ref: '#/components/schemas/UserDevice'
                    - type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    post:
      operationId: post-users-me-devices
      summary: Add a new device to your user
      description: Add a new device to your user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  oneOf:
                    - properties: {}
                      type: integer
                    - enum:
                        - Notebook
                        - Desktop
                        - Ultrabook
                        - Gaming PC
                        - Tablet PC / Hybrid
                      properties: {}
                      type: string
                operating_system:
                  type: integer
              required:
                - device
                - operating_system
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: number
                    type: object
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
        - Devices
  '/users/me/devices/{deviceId}':
    delete:
      operationId: delete-users-me-devices-deviceId
      summary: Remove one of your devices
      description: The device will be disabled and won't be available for selections and bugs submission. You can't remove a device currently involved in a campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
        - User
    get:
      operationId: get-users-me-devices-deviceId
      summary: Get one of your devices
      description: Retrieve a single device
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: number
                    type: object
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: number
    patch:
      operationId: patch-users-me-devices-deviceId
      summary: Edit one of your devices
      description: You can change only operating system version
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operating_system:
                  type: integer
              required:
                - operating_system
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: number
                    type: object
                  - $ref: '#/components/schemas/UserDevice'
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: number
                    type: object
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
        - User
  /users/me/experience:
    get:
      operationId: get-users-me-experience
      summary: Get your experience points
      description: 'Get all the experience points earned in AppQuality. '
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/searchBy'
        - $ref: '#/components/parameters/search'
        - name: orderBy
          in: query
          description: The field for item order
          schema:
            type: string
            enum:
              - amount
              - campaign
              - date
              - note
              - activity
              - id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  limit:
                    type: number
                  results:
                    type: array
                    items:
                      properties:
                        activity:
                          type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                        amount:
                          type: integer
                        campaign:
                          type: object
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                          required:
                            - id
                        date:
                          type: string
                          format: date
                        id:
                          type: number
                        note:
                          type: string
                      required:
                        - id
                        - activity
                        - campaign
                        - date
                        - amount
                      type: object
                    minItems: 1
                    uniqueItems: true
                  size:
                    type: number
                  start:
                    type: number
                  sum:
                    description: The total sum of experience
                    type: number
                  total:
                    description: The total number of experience entries
                    type: number
                required:
                  - results
                  - sum
                x-examples:
                  example-1:
                    limit: 5
                    results:
                      - campaign:
                          id: 1
                          name: UX test for a selfdrive service
                        id: 1
                        severity:
                          id: 1
                          name: LOW
                        status:
                          id: 1
                          name: Refused
                        title: Self drive system crashing
                    size: 1
                    start: 10
                    total: 100
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
  /users/me/fiscal:
    get:
      operationId: get-users-me-fiscal
      summary: Get Fiscal Data
      description: Get your fiscal profile data
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                company:
                  value:
                    address:
                      city: Arbil
                      cityCode: '61122'
                      country: IQ
                      province: Erbil
                      street: Via Zara
                      streetNumber: '18'
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                    type: company
                internal:
                  value:
                    address:
                      city: Arbil
                      cityCode: '61122'
                      country: IQ
                      province: Erbil
                      street: Via Zara
                      streetNumber: '18'
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                    type: internal
                non_italian:
                  value:
                    address:
                      city: Arbil
                      cityCode: '61122'
                      country: IQ
                      province: Erbil
                      street: Via Zara
                      streetNumber: '18'
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                    type: non-italian
                vat:
                  value:
                    address:
                      city: Arbil
                      cityCode: '61122'
                      country: IQ
                      province: Erbil
                      street: Via Zara
                      streetNumber: '18'
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                    type: vat
                witholding-extra:
                  value:
                    address:
                      city: Arbil
                      cityCode: '61122'
                      country: IQ
                      province: Erbil
                      street: Via Zara
                      streetNumber: '18'
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                    type: witholding-extra
              schema:
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      city:
                        type: string
                      cityCode:
                        type: string
                      country:
                        type: string
                      province:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                  type:
                    oneOf:
                      - $ref: '#/components/schemas/FiscalType'
                      - enum:
                          - internal
                        type: string
                required:
                  - address
                  - type
                  - birthPlace
                  - fiscalId
                  - fiscalStatus
                  - gender
                x-examples:
                  example-1:
                    address:
                      city: string
                      cityCode: string
                      country: string
                      province: string
                      street: string
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: OK
                    gender: string
                    type: withholding
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    post:
      operationId: post-users-me-fiscal
      summary: Create a new fiscal profile
      description: Create a new fiscal data entry from empty state
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              description: ''
              type: object
              properties:
                address:
                  type: object
                  properties:
                    city:
                      type: string
                    cityCode:
                      type: string
                    country:
                      type: string
                    province:
                      type: string
                    street:
                      type: string
                    streetNumber:
                      type: string
                  required:
                    - country
                    - province
                    - city
                    - street
                    - streetNumber
                    - cityCode
                birthPlace:
                  $ref: '#/components/schemas/FiscalBirthCity'
                fiscalId:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
                type:
                  $ref: '#/components/schemas/FiscalType'
              required:
                - address
                - type
                - fiscalId
                - gender
              x-examples:
                example-1:
                  address:
                    city: string
                    cityCode: string
                    country: string
                    province: string
                    street: string
                  birthCity: string
                  fiscalId: string
                  fiscalStatus: Verified
                  gender: Male
                  type: withholding
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                example-1:
                  value:
                    address:
                      city: string
                      cityCode: string
                      country: string
                      province: string
                      street: string
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: male
                    type: withholding
              schema:
                description: ''
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      city:
                        type: string
                      cityCode:
                        type: string
                      country:
                        type: string
                      province:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                  type:
                    $ref: '#/components/schemas/FiscalType'
                required:
                  - address
                  - type
                  - fiscalId
                  - fiscalStatus
                  - gender
                x-examples:
                  example-1:
                    address:
                      city: string
                      cityCode: string
                      country: string
                      province: string
                      street: string
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: Male
                    type: withholding
        '401':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
    put:
      operationId: put-users-me-fiscal
      summary: Edit your fiscal profile
      description: Update your fiscal data
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                address:
                  type: object
                  properties:
                    city:
                      type: string
                    cityCode:
                      type: string
                    country:
                      type: string
                    province:
                      type: string
                    street:
                      type: string
                    streetNumber:
                      type: string
                  required:
                    - country
                    - province
                    - city
                    - street
                    - streetNumber
                    - cityCode
                birthPlace:
                  $ref: '#/components/schemas/FiscalBirthCity'
                fiscalId:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
                type:
                  $ref: '#/components/schemas/FiscalType'
              required:
                - address
                - type
                - fiscalId
                - gender
              x-examples:
                example-1:
                  address:
                    city: string
                    cityCode: string
                    country: string
                    province: string
                    street: string
                  birthCity: string
                  fiscalId: string
                  fiscalStatus: Verified
                  gender: Male
                  type: withholding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      city:
                        type: string
                      cityCode:
                        type: string
                      country:
                        type: string
                      province:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                  type:
                    $ref: '#/components/schemas/FiscalType'
                required:
                  - address
                  - type
                  - fiscalId
                  - fiscalStatus
                  - gender
                x-examples:
                  example-1:
                    address:
                      city: string
                      cityCode: string
                      country: string
                      province: string
                      street: string
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: Male
                    type: withholding
        '401':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
  /users/me/languages:
    post:
      operationId: post-users-me-languages
      summary: Add one language to your profile
      description: Add one of the languages to your profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language_name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  name:
                    type: string
                required:
                  - name
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
    put:
      operationId: put-users-me-languages
      summary: Update your languages
      description: Edit your spoken languages
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  - '46'
                  - '61'
                  - '120'
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                  type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags:
        - User
  '/users/me/languages/{languageId}':
    delete:
      operationId: delete-users-me-languages-languageId
      summary: Remove one of your languages
      description: The language will be removed from your profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
    parameters:
      - name: languageId
        in: path
        description: The id of the language
        required: true
        schema:
          type: integer
  /users/me/payments:
    get:
      operationId: get-users-me-payments
      summary: Get all your payments
      description: Return all payment requests
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - name: orderBy
          in: query
          description: The field for item order
          schema:
            type: string
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                multiple-pages:
                  value:
                    limit: 10
                    results:
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 2
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '-'
                        receipt: 'http://example.com'
                        status: processing
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 1
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 3
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 4
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 5
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 6
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 7
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 8
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 9
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 10
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                    size: 10
                    start: 0
                    total: 20
                multiple-pages-all-paid:
                  value:
                    limit: 10
                    results:
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 1
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 3
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 4
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 5
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 6
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 7
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 8
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 9
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 10
                        method:
                          note: Iban ********************8020
                          type: iban
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                    size: 10
                    start: 0
                    total: 20
                paid-and-processing:
                  value:
                    limit: 10
                    results:
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 2
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '-'
                        receipt: 'http://example.com'
                        status: processing
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 1
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                    size: 2
                    start: 0
                    total: 2
                single-paid-payment:
                  value:
                    limit: 10
                    results:
                      - amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        id: 1
                        method:
                          note: me@example.com
                          type: paypal
                        paidDate: '2019-08-24'
                        receipt: 'http://example.com'
                        status: paid
                    size: 1
                    start: 0
                    total: 1
              schema:
                type: object
                properties:
                  limit:
                    type: number
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            amount:
                              type: object
                              properties:
                                gross:
                                  $ref: '#/components/schemas/Currency'
                                net:
                                  $ref: '#/components/schemas/Currency'
                              required:
                                - net
                                - gross
                            method:
                              type: object
                              properties:
                                note:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                    - paypal
                                    - iban
                              required:
                                - type
                                - note
                            paidDate:
                              type: string
                              oneOf:
                                - format: date
                                - enum:
                                    - '-'
                            receipt:
                              type: string
                              format: uri-reference
                            status:
                              type: string
                              enum:
                                - paid
                                - processing
                          required:
                            - status
                            - amount
                            - paidDate
                            - method
                      type: object
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - size
                  - start
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters: []
    post:
      operationId: post-users-me-payments
      summary: Request your booty
      requestBody:
        content:
          application/json:
            examples:
              iban:
                value:
                  method:
                    accountHolderName: Pippo Franco
                    iban: IT42E0300203280581481468634
                    type: iban
              paypal:
                value:
                  method:
                    email: pippo@example.com
                    type: paypal
            schema:
              type: object
              properties:
                method:
                  type: object
                  oneOf:
                    - properties:
                        email:
                          type: string
                        type:
                          type: string
                          enum:
                            - paypal
                      required:
                        - type
                        - email
                    - properties:
                        accountHolderName:
                          type: string
                          pattern: '^[A-Za-zÀ-ÖØ-öø-ÿ''-ū\.]+ [''A-Za-zÀ-Ö Ø-öø-ÿ-ū\.]+$'
                        iban:
                          type: string
                          pattern: '^([A-Z]{2}[ \-]?[0-9]{2})(?=(?:[ \-]?[A-Z0-9]){9,30}$)((?:[ \-]?[A-Z0-9]{3,5}){2,7})([ \-]?[A-Z0-9]{1,3})?$'
                        type:
                          type: string
                          enum:
                            - iban
                      required:
                        - type
                        - accountHolderName
                        - iban
              required:
                - method
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                success:
                  value:
                    amount: 10.5
                    id: 1
              schema:
                type: object
                properties:
                  amount:
                    type: number
                  id:
                    type: number
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
  '/users/me/payments/{payment}':
    get:
      operationId: get-users-me-payments-payment
      summary: Details of a single payment
      description: Return all attributions of a specific request
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/order'
        - name: orderBy
          in: query
          description: The value to order by
          schema:
            type: string
            enum:
              - type
              - date
              - activity
              - net
              - gross
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                multi-page:
                  value:
                    limit: 10
                    results:
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 1
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 2
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 3
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 4
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 5
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 6
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 12
                          name: My campaign 2
                        date: '2019-08-24'
                        id: 7
                        type: Community
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 8
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 9
                        type: Test
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                        campaign:
                          id: 12
                          name: My campaign 2
                        date: '2019-08-24'
                        id: 10
                        type: Community
                    size: 1
                    start: 0
                    total: 1
                simple:
                  value:
                    limit: 10
                    results:
                      - activity: Tryber Testing
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        campaign:
                          id: 123
                          name: My campaign
                        date: '2019-08-24'
                        id: 1
                        type: Test
                    size: 1
                    start: 0
                    total: 1
              schema:
                type: object
                properties:
                  limit:
                    type: number
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            activity:
                              type: string
                            amount:
                              type: object
                              properties:
                                gross:
                                  $ref: '#/components/schemas/Currency'
                                net:
                                  $ref: '#/components/schemas/Currency'
                              required:
                                - gross
                            date:
                              type: string
                              format: date
                            type:
                              type: string
                          required:
                            - type
                            - amount
                            - date
                            - activity
                      type: object
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - results
                  - size
                  - start
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters:
      - name: payment
        in: path
        required: true
        schema:
          type: string
  /users/me/pending_booty:
    get:
      operationId: get-users-me-pending-booty
      summary: Get all your payments
      description: Return all single attributions that dials the pending booty
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - name: orderBy
          in: query
          description: The field for item order
          schema:
            type: string
            enum:
              - id
              - attributionDate
              - activityName
              - net
              - gross
              - activity
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                multiple-attributions:
                  value:
                    limit: 10
                    results:
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 1
                        name: '[CP-1] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 2
                        name: '[CP-2] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 3
                        name: '[CP-3] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 4
                        name: '[CP-4] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 5
                        name: '[CP-5] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 6
                        name: '[CP-6] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 7
                        name: '[CP-7] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 8
                        name: '[CP-8] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 9
                        name: '[CP-9] Campagna test bug form'
                      - activity: Refund Tryber Test
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                        attributionDate: '2019-08-24'
                        id: 10
                        name: '[CP-10] Campagna test bug form'
                    size: 10
                    start: 0
                    total: 20
                single-attribution:
                  value:
                    limit: 10
                    results:
                      - activity: TEST API CON BUG
                        amount:
                          gross:
                            currency: EUR
                            value: 13.5
                          net:
                            currency: EUR
                            value: 10
                        attributionDate: '2019-08-24'
                        id: 1
                        name: '[CP-3882] test release'
                    size: 1
                    start: 0
                    total: 1
              schema:
                type: object
                properties:
                  limit:
                    type: number
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            activity:
                              type: string
                            amount:
                              type: object
                              properties:
                                gross:
                                  $ref: '#/components/schemas/Currency'
                                net:
                                  $ref: '#/components/schemas/Currency'
                              required:
                                - gross
                            attributionDate:
                              type: string
                              format: date
                            name:
                              type: string
                          required:
                            - name
                            - amount
                            - attributionDate
                            - activity
                      type: object
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - size
                  - start
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
    parameters: []
  /users/me/permissions:
    get:
      operationId: get-users-me-permissions
      summary: Get all your permissions
      description: Return all user permissions
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    appq_bug:
                      - 1
                      - 2
                    appq_campaign:
                      - 1
                      - 2
                    appq_prospect: false
                    appq_tester_selection: true
                appq_campaign_full_access:
                  value:
                    appq_campaign: true
                appq_campaign_not_enough_permissions:
                  value: {}
              schema:
                type: object
                properties:
                  appq_bug:
                    $ref: '#/components/schemas/Olp'
                  appq_campaign:
                    $ref: '#/components/schemas/Olp'
                  appq_message_center:
                    $ref: '#/components/schemas/Olp'
                  appq_prospect:
                    $ref: '#/components/schemas/Olp'
                  appq_tester_selection:
                    $ref: '#/components/schemas/Olp'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      tags: []
    parameters: []
  /users/me/popups:
    get:
      operationId: get-users-me-popups
      summary: Get your popups
      description: Get all popup defined for your user
      parameters:
        - name: showExpired
          in: query
          description: 'Show all popup history, expired popups included'
          schema:
            type: boolean
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              examples: {}
              schema:
                type: array
                items:
                  properties:
                    content:
                      type: string
                    id:
                      type: integer
                    once:
                      type: boolean
                    title:
                      type: string
                  type: object
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
  '/users/me/popups/{popup}':
    get:
      operationId: get-users-me-popups-popup
      summary: Retrieve and expire popup
      description: Get a single popup. Will set the retrieved popup as expired
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: integer
                    type: object
                  - $ref: '#/components/schemas/Popup'
      security:
        - JWT: []
      tags:
        - User
    parameters:
      - name: popup
        in: path
        required: true
        schema:
          type: integer
  /users/me/rank:
    get:
      operationId: get-users-me-rank
      summary: Details of tryber ranking
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                bronze-to-gold:
                  value:
                    level:
                      id: 20
                      name: Bronze
                    points: 100
                    previousLevel:
                      id: 10
                      name: Basic
                    prospect:
                      level:
                        id: 40
                        name: Gold
                      next:
                        level:
                          id: 50
                          name: Diamond
                        points: 10
                    rank: 3
                stay-gold:
                  value:
                    level:
                      id: 40
                      name: Gold
                    points: 100
                    previousLevel:
                      id: 10
                      name: Basic
                    prospect:
                      level:
                        id: 30
                        name: Silver
                      manteinance: 10
                    rank: 50
              schema:
                type: object
                properties:
                  level:
                    $ref: '#/components/schemas/MonthlyLevel'
                  points:
                    type: number
                  previousLevel:
                    $ref: '#/components/schemas/MonthlyLevel'
                  prospect:
                    type: object
                    properties:
                      level:
                        $ref: '#/components/schemas/MonthlyLevel'
                      maintenance:
                        type: number
                      next:
                        type: object
                        properties:
                          level:
                            $ref: '#/components/schemas/MonthlyLevel'
                          points:
                            type: number
                        required:
                          - points
                          - level
                    required:
                      - level
                  rank:
                    type: number
                required:
                  - level
                  - previousLevel
                  - rank
                  - points
                  - prospect
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      tags: []
    parameters: []
  /users/me/rank/list:
    get:
      operationId: get-users-me-rank-list
      summary: Get your ranking list
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    peers:
                      - id: 41
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 50
                        name: Peppe F.
                        position: 50
                      - id: 42
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 50
                        name: Rosario M.
                        position: 51
                      - id: 49
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 49
                        name: Giuseppe S.
                        position: 52
                      - id: 20
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 48
                        name: Maria D.
                        position: 53
                      - id: 40
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 49
                        name: Luca F.
                        position: 54
                      - id: 100
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 46
                        name: Maurizio C.
                        position: 55
                      - id: 123
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 45
                        name: Vittorio S.
                        position: 56
                      - id: 49
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 44
                        name: Fabrizio C.
                        position: 57
                      - id: 49
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 40
                        name: Antonio Z.
                        position: 58
                    tops:
                      - id: 1
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 100
                        name: Pippo F.
                        position: 1
                      - id: 2
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 90
                        name: Ciccio P.
                        position: 2
                      - id: 3
                        image: 'https://placekitten.com/200/200'
                        monthly_exp: 100
                        name: Ciccio I.
                        position: 3
              schema:
                type: object
                properties:
                  peers:
                    type: array
                    items:
                      $ref: '#/components/schemas/RankingItem'
                  tops:
                    type: array
                    items:
                      $ref: '#/components/schemas/RankingItem'
                required:
                  - tops
                  - peers
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags: []
components:
  parameters:
    campaign:
      description: A campaign id
      in: path
      name: campaign
      required: true
      schema:
        type: string
    customer:
      description: A customer id
      in: path
      name: customer
      required: true
      schema:
        type: string
    filterBy:
      description: Key-value Array for item filtering
      in: query
      name: filterBy
      required: false
      schema:
        type: object
    limit:
      description: Max items to retrieve
      in: query
      name: limit
      required: false
      schema:
        type: integer
    locale:
      description: How to localize values
      in: query
      name: locale
      required: false
      schema:
        type: string
        default: en
        enum:
          - en
          - it
    order:
      description: 'How to order values (ASC, DESC)'
      in: query
      name: order
      required: false
      schema:
        type: string
        default: DESC
        enum:
          - ASC
          - DESC
    project:
      description: A project id
      in: path
      name: project
      required: true
      schema:
        type: string
    search:
      description: The value to search for
      in: query
      name: search
      required: false
      schema:
        type: string
    searchBy:
      description: A comma separated list of fields which will be searched
      in: query
      name: searchBy
      schema:
        type: string
    start:
      description: Items to skip for pagination
      in: query
      name: start
      required: false
      schema:
        type: integer
    task:
      description: A task id
      in: path
      name: task
      required: true
      schema:
        type: string
    testerId:
      in: path
      name: testerId
      required: true
      schema:
        type: string
  schemas:
    AdditionalField:
      description: ''
      type: object
      properties:
        field_id:
          type: number
        is_candidate:
          type: boolean
        name:
          type: string
          minLength: 1
        text:
          type: string
        value:
          type: string
      required:
        - field_id
        - name
        - value
      x-examples:
        example-1:
          field_id: 12
          name: My field name
          value: My field value
    Agreement:
      type: object
      properties:
        expirationDate:
          type: string
          pattern: '^[0-9]{4}-(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1])$'
        isTokenBased:
          type: boolean
          default: false
        note:
          type: string
        startDate:
          type: string
          pattern: '^[0-9]{4}-(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1])$'
        title:
          type: string
          minLength: 1
        tokens:
          type: number
        unitPrice:
          type: number
      required:
        - title
        - tokens
        - unitPrice
        - startDate
        - expirationDate
      x-examples:
        Example 1:
          customer:
            company: Customer Company
            id: 1
          expirationDate: '2023-06-06 12:59:16'
          id: 1
          isTokenBased: true
          note: Agreement Notes
          startDate: '2023-06-06 12:59:16'
          title: Agreement Title
          tokens: 10.5
          unitPrice: 165
    AvailableDevice:
      type: object
      properties:
        name:
          type: string
      required:
        - name
      title: AvailableDevice
    Bug:
      type: object
      properties:
        campaign:
          allOf:
            - $ref: '#/components/schemas/CampaignOptional'
            - properties:
                id:
                  type: integer
              type: object
        severity:
          $ref: '#/components/schemas/BugSeverity'
        status:
          $ref: '#/components/schemas/BugStatus'
        title:
          type: string
      title: Bug
      x-examples: {}
    BugSeverity:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      title: BugSeverity
    BugStatus:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
      title: BugStatus
    BugTag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
      title: BugTag
    BugType:
      type: object
      properties:
        id:
          type: integer
      title: BugType
    Campaign:
      description: ''
      allOf:
        - $ref: '#/components/schemas/CampaignOptional'
        - $ref: '#/components/schemas/CampaignRequired'
      x-examples: {}
    CampaignAdditionalField:
      allOf:
        - properties:
            error:
              type: string
            name:
              type: string
            slug:
              type: string
          required:
            - name
            - slug
            - error
          type: object
        - oneOf:
            - properties:
                options:
                  type: array
                  items:
                    type: string
                type:
                  type: string
                  enum:
                    - select
              required:
                - type
                - options
              type: object
            - properties:
                regex:
                  type: string
                type:
                  type: string
                  enum:
                    - text
              required:
                - type
                - regex
              type: object
      title: CampaignAdditionalField
    CampaignField:
      type: object
      properties:
        id:
          type: integer
      title: CampaignField
    CampaignOptional:
      type: object
      properties:
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/CampaignField'
          minItems: 1
          uniqueItems: true
        allowed:
          type: object
          properties:
            bug_types:
              type: array
              items:
                $ref: '#/components/schemas/BugType'
              minItems: 1
              uniqueItems: true
            replicabilities:
              type: array
              items:
                $ref: '#/components/schemas/Replicability'
              minItems: 1
              uniqueItems: true
            severities:
              type: array
              items:
                $ref: '#/components/schemas/BugSeverity'
              minItems: 1
              uniqueItems: true
        applied:
          description: True if you applied on this Campaign
          type: boolean
        bugform_link:
          description: If bugform is deactivated is a boolean else contains URLs to bugforms for each languages
          oneOf:
            - description: Exists only when the campaign bugform is deactivated. It is FALSE
              type: boolean
            - $ref: '#/components/schemas/TranslatablePage'
        csm_effort:
          type: number
          default: 0
        customerCanViewReviewing:
          type: boolean
        customer_title:
          type: string
          minLength: 0
        dates:
          type: object
          properties:
            close:
              type: string
              minLength: 1
            end:
              type: string
              minLength: 1
            start:
              type: string
              minLength: 1
        devices:
          type: array
          items:
            properties:
              id:
                type: string
                minLength: 1
            type: object
          minItems: 1
          uniqueItems: true
        hasBugParade:
          type: boolean
        internal_id:
          type: string
          minLength: 1
        language:
          type: string
          minLength: 1
        manual_link:
          $ref: '#/components/schemas/TranslatablePage'
        minNumberOfMedia:
          type: number
        name:
          type: string
          minLength: 1
        preview_link:
          $ref: '#/components/schemas/TranslatablePage'
        projectManager:
          $ref: '#/components/schemas/User'
        public:
          type: boolean
        status:
          type: boolean
        titleRule:
          type: boolean
        tokens:
          type: number
          default: 0
        ux_effort:
          type: number
          default: 0
        visibility:
          type: object
          properties:
            freeSpots:
              type: integer
            totalSpots:
              type: integer
            type:
              type: string
              enum:
                - available
                - unavailable
                - candidate
      x-examples:
        example-1:
          value:
            additionalFields:
              - id: 0
            allowed:
              bug_types:
                - id: 0
              replicabilities:
                - id: string
              severities:
                - id: 0
                  name: string
            applied: true
            csm_effort: 0
            customerCanViewReviewing: true
            customer_title: string
            dates:
              close: string
              end: string
              start: string
            devices:
              - id: string
            hasBugParade: true
            internal_id: string
            language: string
            manual_link:
              en: string
              it: string
            minNumberOfMedia: 0
            name: string
            preview_link:
              en: string
              it: string
            projectManager:
              email: user@example.com
              id: 0
              image: 'http://example.com'
              is_verified: true
              name: string
              role: string
              surname: string
              username: string
              wp_user_id: 0
            public: true
            status: true
            titleRule: true
            tokens: 0
            ux_effort: 0
    CampaignRequired:
      description: ''
      type: object
      properties:
        campaign_type:
          $ref: '#/components/schemas/CampaignType'
        dates:
          type: object
          properties:
            close:
              type: string
              minLength: 1
            end:
              type: string
              minLength: 1
            start:
              type: string
              minLength: 1
          required:
            - start
            - end
            - close
        name:
          type: string
          minLength: 1
      required:
        - name
        - dates
        - campaign_type
    CampaignType:
      oneOf:
        - properties: {}
          type: string
        - properties: {}
          type: number
    Certification:
      description: ''
      type: object
      properties:
        achievement_date:
          type: string
          format: date
        area:
          type: string
        id:
          type: integer
        institute:
          type: string
        name:
          type: string
      required:
        - name
        - area
        - institute
        - achievement_date
      x-examples:
        example-1:
          achievement_date: '2019-08-24'
          area: Area
          institute: Institute
          name: Certification
    CountryCode:
      type: string
      title: CountryCode
      x-examples:
        Example 1: string
    Currency:
      type: object
      properties:
        currency:
          type: string
        value:
          type: number
      required:
        - value
        - currency
      title: Currency
    CustomUserFieldsData:
      type: object
      properties:
        allow_other:
          type: boolean
        format:
          type: string
        id:
          type: number
        name:
          $ref: '#/components/schemas/TranslatablePage'
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserFieldsDataOption'
        placeholder:
          $ref: '#/components/schemas/TranslatablePage'
        type:
          $ref: '#/components/schemas/CustomUserFieldsType'
      required:
        - id
        - type
        - name
      title: CustomUserFieldsData
    CustomUserFieldsDataOption:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
      title: CustomUserFieldsDataOption
    CustomUserFieldsType:
      type: string
      enum:
        - text
        - select
        - multiselect
      title: CustomUserFieldsType
    DossierCreationData:
      type: object
      properties:
        additionals:
          type: array
          items:
            allOf:
              - properties:
                  showInStats:
                    type: boolean
                type: object
              - $ref: '#/components/schemas/CampaignAdditionalField'
        browsers:
          type: array
          items:
            type: integer
        bugTypes:
          type: array
          items:
            type: number
        closeDate:
          type: string
          format: date-time
        countries:
          type: array
          items:
            $ref: '#/components/schemas/CountryCode'
        csm:
          type: integer
        description:
          type: string
        deviceList:
          type: array
          items:
            type: integer
        deviceRequirements:
          type: string
        endDate:
          type: string
          format: date-time
        goal:
          type: string
        languages:
          type: array
          items:
            type: string
        notes:
          type: string
        outOfScope:
          type: string
        productLink:
          type: string
        productType:
          type: integer
        project:
          type: integer
        roles:
          type: array
          items:
            properties:
              role:
                type: integer
              user:
                type: integer
            required:
              - role
              - user
            type: object
        startDate:
          type: string
          format: date-time
        target:
          type: object
          properties:
            cap:
              type: integer
            genderQuote:
              type: string
            notes:
              type: string
            size:
              type: integer
        testType:
          type: integer
        title:
          type: object
          properties:
            customer:
              type: string
            tester:
              type: string
          required:
            - customer
        visibilityCriteria:
          type: object
          properties:
            ageRanges:
              type: array
              items:
                properties:
                  max:
                    type: integer
                  min:
                    type: integer
                required:
                  - max
                  - min
                type: object
            cuf:
              type: array
              items:
                properties:
                  cufId:
                    type: integer
                  cufValueIds:
                    type: array
                    items:
                      type: integer
                required:
                  - cufId
                  - cufValueIds
                type: object
            gender:
              type: array
              items:
                type: integer
            provinces:
              type: array
              items:
                type: string
      required:
        - deviceList
        - project
        - startDate
        - testType
        - title
      title: ''
      x-examples:
        Example 1:
          autoApply: false
          browsers:
            - 0
          closeDate: '2019-08-24T14:15:22Z'
          countries:
            - st
          csm: 0
          description: string
          deviceList:
            - 0
          deviceRequirements: string
          endDate: '2019-08-24T14:15:22Z'
          goal: string
          languages:
            - string
          notes: string
          outOfScope: string
          productLink: string
          productType: 0
          project: 0
          roles:
            - role: 0
              user: 0
          startDate: '2019-08-24T14:15:22Z'
          target:
            cap: 0
            notes: string
            size: 0
          testType: 0
          title:
            customer: string
            tester: string
    FiscalBirthCity:
      type: object
      oneOf:
        - properties:
            city:
              type: string
            province:
              type: string
          required:
            - city
            - province
        - properties:
            placeId:
              description: A google maps place id
              type: string
          required:
            - placeId
      title: FiscalBirthCity
    FiscalType:
      type: string
      enum:
        - withholding
        - witholding-extra
        - non-italian
        - vat
        - company
      title: FiscalType
    Gender:
      type: string
      enum:
        - male
        - female
        - not-specified
        - other
      title: Gender
    LevelDefinition:
      description: ''
      type: object
      properties:
        hold:
          type: number
        id:
          type: number
        name:
          type: string
        reach:
          type: number
      required:
        - id
        - name
      title: LevelDefinition
    MonthlyLevel:
      description: ''
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
      title: MonthlyLevel
      x-examples: {}
      x-internal: false
    Olp:
      oneOf:
        - items:
            type: integer
          type: array
        - type: boolean
      x-examples: {}
    PaginationData:
      type: object
      properties:
        limit:
          type: integer
        size:
          type: integer
        start:
          type: integer
        total:
          type: integer
      required:
        - start
        - size
      title: PaginationData
    Popup:
      description: ''
      type: object
      properties:
        content:
          minLength: 1
          type: string
        once:
          type: boolean
        profiles:
          oneOf:
            - items:
                type: integer
              type: array
            - enum:
                - all
                - italian
                - non-italian
                - logged-in-year
                - not-logged-in-year
              example: all
              type: string
        title:
          type: string
      x-examples: {}
    PreselectionFormQuestion:
      type: object
      allOf:
        - properties:
            question:
              type: string
            short_name:
              type: string
          required:
            - question
        - oneOf:
            - properties:
                type:
                  $ref: '#/components/schemas/PreselectionQuestionSimple'
              required:
                - type
            - properties:
                options:
                  type: array
                  items:
                    properties:
                      isInvalid:
                        type: boolean
                      value:
                        type: string
                    required:
                      - value
                    type: object
                type:
                  $ref: '#/components/schemas/PreselectionQuestionMultiple'
              required:
                - type
            - properties:
                options:
                  type: array
                  items:
                    properties:
                      isInvalid:
                        type: boolean
                      value:
                        type: number
                    required:
                      - value
                    type: object
                type:
                  $ref: '#/components/schemas/PreselectionQuestionCuf'
              required:
                - type
      title: PreselectionFormQuestion
      x-examples:
        Example 1:
          question: string
          short_name: string
          type: gender
    PreselectionQuestionCuf:
      type: string
      pattern: '^cuf_[0-9]*$'
      title: PreselectionQuestionCuf
    PreselectionQuestionMultiple:
      type: string
      enum:
        - multiselect
        - select
        - radio
      title: PreselectionQuestionMultiple
    PreselectionQuestionSimple:
      type: string
      enum:
        - gender
        - text
        - phone_number
        - address
      title: PreselectionQuestionSimple
    Project:
      type: object
      properties:
        name:
          type: string
      title: Project
      x-examples:
        example-1:
          campaigns:
            - additionalFields:
                - id: string
              allowed:
                bug_types:
                  - id: string
                replicabilities:
                  - id: string
                severities:
                  - id: string
              customerCanViewReviewing: true
              customer_title: string
              dates:
                close: string
                end: string
                start: string
              devices:
                - id: string
              hasBugParade: true
              id: 0
              internal_id: string
              language: string
              minNumberOfMedia: 0
              name: string
              projectManager:
                id: 0
                name: string
              public: true
              status: true
              titleRule: true
          name: string
    ProspectStatus:
      type: string
      enum:
        - draft
        - confirmed
        - done
      title: ProspectStatus
    RankingItem:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        monthly_exp:
          type: integer
        name:
          type: string
        position:
          type: integer
      required:
        - position
        - image
        - id
        - name
        - monthly_exp
    Replicability:
      type: object
      properties:
        id:
          type: string
      title: Replicability
    Task:
      allOf:
        - $ref: '#/components/schemas/TaskOptional'
        - $ref: '#/components/schemas/TaskRequired'
      title: Task
    TaskOptional:
      description: ''
      type: object
      properties:
        allow_media:
          type: boolean
        campaign_id:
          type: number
        content:
          minLength: 1
          type: string
        group:
          type: number
          maximum: 4
          minimum: 0
        name:
          type: string
          minLength: 1
    TaskRequired:
      description: ''
      type: object
      properties:
        campaign_id:
          type: number
        content:
          minLength: 1
          type: string
        name:
          type: string
          minLength: 1
      required:
        - name
        - content
        - campaign_id
      x-examples:
        example-1:
          allow_media: true
          campaign_id: 0
          content: string
          group: 0
          name: string
    TranslatablePage:
      type: object
      properties:
        en:
          type: string
        es:
          type: string
        it:
          type: string
      title: TranslatablePage
    User:
      description: ''
      type: object
      properties:
        email:
          type: string
          format: email
        id:
          type: integer
        image:
          type: string
          format: uri
        is_verified:
          type: boolean
        name:
          type: string
        role:
          type: string
        surname:
          type: string
        username:
          type: string
        wp_user_id:
          type: integer
      title: User
      x-examples:
        example-1:
          value:
            email: user@example.com
            id: 0
            image: 'http://example.com'
            is_verified: true
            name: string
            role: string
            surname: string
            username: string
            wp_user_id: 0
    UserDevice:
      type: object
      properties:
        device:
          type: object
          oneOf:
            - properties:
                id:
                  type: number
                manufacturer:
                  type: string
                model:
                  type: string
              required:
                - manufacturer
                - model
            - properties:
                pc_type:
                  type: string
              required:
                - pc_type
        id:
          type: number
        operating_system:
          type: object
          properties:
            id:
              type: number
            platform:
              type: string
            version:
              type: string
          required:
            - id
            - platform
            - version
        type:
          type: string
      required:
        - type
        - id
        - device
        - operating_system
      title: UserDevice
  examples: {}
  requestBodies: {}
  responses:
    Authentication:
      description: Authentication data. The token can be used to authenticate the protected requests
      content:
        application/json:
          examples:
            example:
              value:
                firstName: Elon
                id: 42
                lastName: Musk
                token: my-jwt-token
                username: Elon71
          schema:
            type: object
            properties:
              exp:
                type: number
              firstName:
                type: string
              iat:
                type: number
              id:
                type: number
              lastName:
                type: string
              token:
                type: string
              username:
                type: string
    MissingParameters:
      description: An error due to missing required parameters
      content:
        application/json:
          examples:
            example:
              value:
                message: Missing parameters
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    NotAuthorized:
      description: An error due to insufficient authorization to access the resource
      content:
        application/json:
          examples:
            unauthorized:
              value:
                message: Not Authorized.
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
    NotFound:
      description: An error due to the resource not existing
      content:
        application/json:
          examples:
            not-found:
              value:
                element: campaign
                id: 1
                message: No campaign with id 1
          schema:
            type: object
            properties:
              code:
                type: string
              element:
                type: string
              id:
                type: integer
              message:
                type: string
            required:
              - element
              - id
              - message
    SingleCampaign:
      description: A single Campaigns with the Campaign id and Project data
      content:
        application/json:
          examples:
            full-example:
              value:
                additionalFields:
                  - id: 2
                allowed:
                  bug_types:
                    - id: 2
                  replicabilities:
                    - id: '1'
                  severities:
                    - id: 3
                campaign_type: 1
                customerCanViewReviewing: true
                customer_title: Tesla Model 3 selfdrive UX
                dates:
                  close: 17/09/2021
                  end: 17/08/2021
                  start: 17/02/2021
                devices:
                  - id: '2'
                hasBugParade: true
                id: 1
                internal_id: TSL3
                language: English (England)
                minNumberOfMedia: 0
                name: UX test for a selfdrive service
                project:
                  id: 42
                  name: Tesla
                projectManager:
                  username: Elon Musk
                public: true
                status: true
                titleRule: true
            minimal-example:
              value:
                campaign_type: 1
                customer_title: Tesla Model 3 selfdrive UX
                dates:
                  close: 17/09/2021
                  end: 17/08/2021
                  start: 17/02/2021
                devices:
                  - id: '2'
                id: 1
                internal_id: TSL3
                name: UX test for a selfdrive service
                project:
                  id: 42
                  name: Tesla
                projectManager:
                  username: Elon Musk
            tester-example:
              value:
                additionalFields:
                  - id: 2
                allowed:
                  bug_types:
                    - id: 3
                  replicabilities:
                    - id: '1'
                  severities:
                    - id: 3
                campaign_type: 1
                dates:
                  close: 17/09/2021
                  end: 17/08/2021
                  start: 17/02/2021
                devices:
                  - id: '2'
                id: 1
                internal_id: TSL3
                language: English (England)
                minNumberOfMedia: 0
                name: UX test for a selfdrive service
                projectManager:
                  username: Elon Musk
                status: true
                titleRule: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Campaign'
              - properties:
                  id:
                    type: integer
                required:
                  - id
                type: object
              - properties:
                  project:
                    allOf:
                      - $ref: '#/components/schemas/Project'
                      - properties:
                          id:
                            type: integer
                        type: object
                type: object
    UserData:
      description: A user
      content:
        application/json:
          examples:
            example:
              value:
                username: Elon71
          schema:
            $ref: '#/components/schemas/User'
  securitySchemes:
    JWT:
      description: ''
      scheme: bearer
      type: http
    User Token:
      in: header
      name: apikey
      type: apiKey
tags:
  - name: Authentication
  - name: Campaign
  - name: Customer
  - name: Projects
  - name: Task
  - name: User
  - name: Admin
  - name: Devices
