openapi: 3.0.0
info:
  title: AppQualityApi
  version: '1.0'
  description: An API to get all data for your bugfinding and ux research needs!
  contact:
    name: Developers
    email: it@app-quality.com
servers:
  - url: 'https://api.app-quality.com'
paths:
  /:
    get:
      summary: Get API description
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
      operationId: get-root
      description: Get all routes available for this apis
    parameters: []
  /agreements:
    parameters: []
    get:
      summary: GET Agreements
      operationId: get-agreements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          allOf:
                            - type: object
                              properties:
                                id:
                                  type: integer
                              required:
                                - id
                            - $ref: '#/components/schemas/Agreement'
                            - type: object
                              properties:
                                customer:
                                  type: object
                                  required:
                                    - id
                                    - company
                                  properties:
                                    id:
                                      type: integer
                                    company:
                                      type: string
                              required:
                                - customer
                    required:
                      - items
                  - $ref: '#/components/schemas/PaginationData'
              examples:
                Example 1:
                  value:
                    items:
                      - id: 1
                        title: Agreement Title
                        tokens: 10.5
                        unitPrice: 165
                        expirationDate: '2023-06-06'
                        startDate: '2023-06-06'
                        note: Agreement Notes
                        customer:
                          id: 1
                          company: Customer Company
                        isTokenBased: true
                    start: 0
                    limit: 0
                    size: 0
                    total: 0
                agreement-empty:
                  value:
                    items: []
                    start: 0
                    size: 0
                agreement-filterBy-customer1:
                  value:
                    items:
                      - id: 70
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                        startDate: '2023-11-20'
                        expirationDate: '2023-03-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                      - id: 69
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                    start: 0
                    size: 2
                'agreement-filterBy[customer]=1,3&start=1':
                  value:
                    items:
                      - id: 69
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                      - id: 42
                        title: Epic Token
                        tokens: 103
                        unitPrice: 166.6
                        startDate: '2020-10-20'
                        expirationDate: '2020-01-01'
                        customer:
                          id: 3
                          company: Epical s.p.a.
                        note: Test con dati veri
                        isTokenBased: true
                    start: 1
                    total: 3
                    limit: 10
                    size: 2
                'filterBy[customer]=1,3&limit=1':
                  value:
                    items:
                      - id: 70
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                        startDate: '2023-11-20'
                        expirationDate: '2023-03-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                    start: 0
                    total: 3
                    limit: 1
                    size: 1
                'response-items-filterBy[customer]=1,3&start=1&limit=1':
                  value:
                    items:
                      - id: 69
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                    start: 0
                    total: 3
                    limit: 3
                    size: 1
                items-no-filtered-limit=1:
                  value:
                    items:
                      - id: 241
                        title: AffidabilData Token
                        tokens: 100
                        unitPrice: 165.6
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 2
                          company: AffidabilData s.p.a.
                        note: Test con dati veri
                        isTokenBased: true
                    start: 0
                    total: 4
                    limit: 1
                    size: 1
                items-no-filtered-limite=1&start=1:
                  value:
                    items:
                      - id: 70
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                        startDate: '2023-11-20'
                        expirationDate: '2023-03-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                    start: 1
                    total: 4
                    limit: 1
                    size: 1
                items-no-filtered:
                  value:
                    items:
                      - id: 241
                        title: AffidabilData Token
                        tokens: 100
                        unitPrice: 165.6
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 2
                          company: AffidabilData s.p.a.
                        note: Test con dati veri
                        isTokenBased: true
                      - id: 70
                        title: Rocco Iteration 2
                        tokens: 39
                        unitPrice: 6.9
                        startDate: '2023-11-20'
                        expirationDate: '2023-03-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                      - id: 69
                        title: Rocco Token
                        tokens: 169
                        unitPrice: 6.9
                        startDate: '2023-10-20'
                        expirationDate: '2023-01-01'
                        customer:
                          id: 1
                          company: Rocco & Friends
                        note: Test con dati veri
                        isTokenBased: false
                      - id: 42
                        title: Epic Token
                        tokens: 103
                        unitPrice: 166.6
                        startDate: '2020-10-20'
                        expirationDate: '2020-01-01'
                        customer:
                          id: 3
                          company: Epical s.p.a.
                        note: Test con dati veri
                        isTokenBased: true
                    start: 0
                    size: 4
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      description: Retrive all agreements
      parameters:
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
    post:
      summary: POST Agreement
      operationId: post-agreements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agreementId:
                    type: integer
                required:
                  - agreementId
              examples:
                success-creation:
                  value:
                    agreementId: 11111
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      description: Create a new Agreement
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    customerId:
                      type: integer
                  required:
                    - customerId
                - $ref: '#/components/schemas/Agreement'
            examples:
              Example 1:
                value:
                  customerId: 1
                  id: 1
                  title: string
                  tokens: 0
                  unitPrice: 0
                  startDate: '2023-07-03'
                  expirationDate: '2023-07-03'
                  note: string
                  isTokenBased: true
      security:
        - JWT: []
  '/agreements/{agreementId}':
    parameters:
      - schema:
          type: string
        name: agreementId
        in: path
        required: true
    put:
      summary: ''
      operationId: put-agreements-agreement-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
                  - $ref: '#/components/schemas/Agreement'
                  - type: object
                    properties:
                      customer:
                        type: object
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: integer
                          company:
                            type: string
                    required:
                      - customer
              examples:
                Example 1:
                  value:
                    id: 0
                    title: string
                    tokens: 0
                    unitPrice: 0
                    startDate: '2023-07-03'
                    expirationDate: '2023-07-03'
                    note: string
                    isTokenBased: false
                    customer:
                      id: 0
                      company: string
                request-correct:
                  value:
                    id: 1
                    customerId: 1
                    expirationDate: '2020-01-01'
                    startDate: '2020-01-01'
                    title: Agreement Title
                    tokens: 10
                    unitPrice: 1
                    note: Agreement notes
                    isTokenBased: true
                    customer:
                      id: 0
                      company: string
                success:
                  value:
                    id: 11111
                    customerId: 1
                    expirationDate: '2020-01-01'
                    startDate: '2020-01-01'
                    title: Agreement Title
                    tokens: 10
                    unitPrice: 1
                    note: Agreement notes
                    isTokenBased: true
                    customer:
                      id: 0
                      company: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      description: Put a specific Agreement
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Agreement'
                - type: object
                  properties:
                    customerId:
                      type: integer
                  required:
                    - customerId
            examples:
              Example 1:
                value:
                  id: 1
                  title: string
                  tokens: 165
                  unitPrice: 165
                  startDate: '2023-07-03'
                  expirationDate: '2023-07-03'
                  note: string
                  isTokenBased: true
                  customerId: 0
        description: ''
      security:
        - JWT: []
    delete:
      summary: ''
      operationId: delete-agreements-agreement-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                deletion-success:
                  value: {}
        '403':
          $ref: '#/components/responses/NotFound'
        '500':
          description: Internal Server Error
      security:
        - JWT: []
      description: Delete a specific Agreement
    get:
      summary: ''
      operationId: get-agreements-agreement-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
                  - $ref: '#/components/schemas/Agreement'
                  - type: object
                    properties:
                      customer:
                        type: object
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: integer
                          company:
                            type: string
                    required:
                      - customer
              examples:
                Example 1:
                  value:
                    customer:
                      id: 1
                      company: string
                    id: 1
                    title: string
                    tokens: 1
                    unitPrice: 165
                    startDate: '2023-07-03'
                    expirationDate: '2023-07-03'
                    note: string
                    isTokenBased: false
                success-found:
                  value:
                    id: 69
                    customer:
                      id: 1
                      company: string
                    title: Sunset Crowdtesting (Bug Hunting) 2022-2023
                    tokens: 666
                    unitPrice: 100
                    startDate: '2022-02-03'
                    expirationDate: '2023-10-31'
                    note: Agreement improved by Sunset
                    isTokenBased: false
        '403':
          $ref: '#/components/responses/Authentication'
        '500':
          description: Internal Server Error
      description: Get a specific Agreement
      security:
        - JWT: []
  /authenticate:
    post:
      description: A request to login with your username and password
      summary: ''
      operationId: post-authenticate
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    message: Error 401
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              example:
                value:
                  username: Elon71
                  password: my-strong-password
        description: A JSON containing username and password
      parameters: []
  /browsers:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                required:
                  - results
              examples:
                Example 1:
                  value:
                    results:
                      - id: 1
                        name: Chrome
                      - id: 2
                        name: Firefox
                      - id: 3
                        name: Safari
                      - id: 4
                        name: Edge
                      - id: 100
                        name: Other
      operationId: get-browsers
  '/bugs/{bugId}/status':
    parameters:
      - schema:
          type: string
        name: bugId
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-bugs-bugId-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status_id:
                  type: integer
              required:
                - status_id
      security:
        - JWT: []
  /campaigns:
    post:
      summary: Create a new Campaign
      operationId: post-campaigns
      responses:
        '201':
          $ref: '#/components/responses/SingleCampaign'
        '400':
          $ref: '#/components/responses/MissingParameters'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Campaign'
                - type: object
                  properties:
                    project_id:
                      type: integer
            examples:
              example:
                value:
                  name: Tesla-Model-3-selfdrive-UX
                  campaign_type: 1
                  customer_title: Tesla Inc.
                  internal_id: T4242
                  dates:
                    start: 17/02/2021
                    end: 17/08/2021
                    close: 17/09/2021
                  status: true
                  language: English (England)
                  public: true
                  hasBugParade: true
                  devices:
                    - id: '2'
                  minNumberOfMedia: 0
                  titleRule: true
                  allowed:
                    severities:
                      - id: 3
                    bug_types:
                      - id: 3
                    replicabilities:
                      - id: '1'
                  projectManager:
                    username: Elon Musk
                  customerCanViewReviewing: true
                  additionalFields:
                    - id: 2
                  project_id: 42
        description: 'The Campaign data to set on the newly created Campaign, including the id of the Project to link the Campaign to'
      description: Create a new Campaign if you have access to the creation
      tags:
        - Campaign
    get:
      summary: Get all available Campaigns
      operationId: get-campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            customerTitle:
                              type: string
                            startDate:
                              type: string
                            endDate:
                              type: string
                            status:
                              type: string
                              enum:
                                - running
                                - closed
                                - incoming
                            visibility:
                              type: string
                              enum:
                                - admin
                                - smallgroup
                                - logged
                                - public
                                - target
                            resultType:
                              type: string
                              enum:
                                - bug
                                - bugparade
                                - 'no'
                            csm:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                surname:
                                  type: string
                              required:
                                - id
                                - name
                                - surname
                            customer:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - name
                            type:
                              type: object
                              properties:
                                name:
                                  type: string
                                area:
                                  type: string
                                  enum:
                                    - quality
                                    - experience
                              required:
                                - name
                                - area
                            project:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - name
                            phase:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                                - id
                                - name
                            roles:
                              type: array
                              items:
                                type: object
                                properties:
                                  role:
                                    type: object
                                    required:
                                      - id
                                      - name
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                  user:
                                    type: object
                                    required:
                                      - id
                                      - name
                                      - surname
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      surname:
                                        type: string
                                required:
                                  - role
                                  - user
                            quote:
                              type: object
                              properties:
                                id:
                                  type: integer
                                price:
                                  type: string
                                status:
                                  type: string
                              required:
                                - id
                                - price
                                - status
                  - $ref: '#/components/schemas/PaginationData'
              examples:
                Example 1:
                  value:
                    items:
                      - id: 0
                        name: string
                        customerTitle: string
                        startDate: string
                        endDate: string
                        status: running
                        visibility: admin
                        resultType: bug
                        csm:
                          id: 0
                          name: string
                          surname: string
                        customer:
                          id: 0
                          name: string
                        type:
                          name: string
                          area: quality
                        project:
                          id: 0
                          name: string
                        phase:
                          id: 0
                          name: string
                        roles:
                          - role:
                              id: 0
                              name: string
                            user:
                              id: 0
                              name: string
                              surname: string
                        quote:
                          id: 0
                          price: string
                          status: string
                    start: 0
                    limit: 0
                    size: 0
                    total: 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      description: Get all the Campaigns you have access to
      tags:
        - Campaign
      parameters:
        - schema:
            type: string
          in: query
          name: fields
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - schema:
            type: string
            enum:
              - 'true'
          in: query
          name: mine
          description: Return only your campaign?
          allowEmptyValue: true
        - schema:
            type: string
          in: query
          name: search
          description: A value to search in id or title
        - $ref: '#/components/parameters/order'
        - schema:
            type: string
            enum:
              - id
              - startDate
              - endDate
          in: query
          name: orderBy
          description: The parameter to order by
        - schema: {}
          in: query
          name: filterBy
  '/campaigns/{campaign}':
    parameters:
      - $ref: '#/components/parameters/campaign'
    get:
      summary: Get a Campaign
      tags:
        - Campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                  typeDescription:
                    type: string
                  preselectionFormId:
                    type: integer
                  plan:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                      - id
                      - name
                required:
                  - id
                  - title
                  - type
                  - typeDescription
              examples:
                Example 1:
                  value:
                    id: 1
                    title: Campaign Title
                    type: Campaign Type
                    typeDescription: Campaign DescriptionType
                Example 2:
                  value:
                    id: 1
                    title: Campaign Title
                    type: Campaign Type
                    typeDescription: Campaign DescriptionType
                    preselectionFormId: 69
                campaign_with_plan:
                  value:
                    id: 0
                    title: string
                    type: string
                    typeDescription: string
                    preselectionFormId: 0
                    plan:
                      id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          description: Not Found
      operationId: get-campaigns-campaign
      description: 'Get the data of a Campaign if you have access to it '
      security:
        - JWT: []
    put:
      summary: Edit a Campaign
      operationId: put-campaigns-campaign
      responses:
        '200':
          $ref: '#/components/responses/SingleCampaign'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: 'Edit the data of a Campaign if you have access to it '
      tags:
        - Campaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignOptional'
            examples:
              full-example:
                value:
                  name: Tesla-Model-3-selfdrive-UX
                  customer_title: Tesla Inc.
                  internal_id: T4242
                  dates:
                    start: 17/02/2021
                    end: 17/08/2021
                    close: 17/09/2021
                  status: true
                  language: English (England)
                  public: true
                  hasBugParade: true
                  devices:
                    - id: '2'
                  minNumberOfMedia: 0
                  titleRule: true
                  allowed:
                    severities:
                      - id: 3
                    bug_types:
                      - id: 3
                    replicabilities:
                      - id: '1'
                  projectManager:
                    username: Elon Musk
                  customerCanViewReviewing: true
                  additionalFields:
                    - id: 2
              change-name-example:
                value:
                  name: Tesla-Model-3-selfdrive-UX new name
              update-campaign-token-usage:
                value:
                  tokens: 12
        description: The Campaign data to edit
      security:
        - JWT: []
  '/campaigns/{campaign}/bugs':
    parameters:
      - $ref: '#/components/parameters/campaign'
    get:
      summary: Get all Campaign Bugs
      tags:
        - Campaign
      operationId: get-campaigns-cid-bugs
      description: 'Get all bugs of a Campaign if you have access to it '
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                            internalId:
                              type: string
                            status:
                              type: object
                              required:
                                - id
                                - name
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            type:
                              type: object
                              required:
                                - id
                                - name
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            severity:
                              type: object
                              required:
                                - id
                                - name
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            tester:
                              type: object
                              required:
                                - id
                              properties:
                                id:
                                  type: integer
                            tags:
                              type: array
                              items:
                                $ref: '#/components/schemas/BugTag'
                            duplication:
                              type: string
                              enum:
                                - father
                                - unique
                                - duplicated
                            isFavourite:
                              type: boolean
                            created:
                              type: string
                            updated:
                              type: string
                          required:
                            - id
                            - title
                            - internalId
                            - status
                            - type
                            - severity
                            - tester
                            - duplication
                            - isFavourite
                            - created
                            - updated
                    required:
                      - items
                  - $ref: '#/components/schemas/PaginationData'
              examples:
                Example 1:
                  value:
                    items:
                      - id: 0
                        title: string
                        internalId: string
                        status:
                          id: 0
                          name: string
                        type:
                          id: 0
                          name: string
                        severity:
                          id: 0
                          name: string
                        tester:
                          id: 0
                        tags:
                          - id: 0
                            name: string
                        duplication: father
                        isFavourite: true
                        created: string
                        updated: string
                    start: 0
                    limit: 0
                    size: 0
                    total: 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/order'
        - schema:
            type: string
            enum:
              - severity
              - testerId
              - status
              - type
              - id
          in: query
          name: orderBy
          description: 'Order values by STATUS, TESTERID, SEVERITY, TYPE, ID'
        - $ref: '#/components/parameters/filterBy'
  '/campaigns/{campaign}/bugs/{bugId}':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
      - schema:
          type: string
        name: bugId
        in: path
        required: true
    get:
      summary: Get a specific Campaign Bug
      tags:
        - Campaign
      operationId: get-campaigns-single-bug
      description: 'Get single bug of a Campaign if you have access to it '
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  actual_result:
                    type: string
                  expected_result:
                    type: string
                  severity:
                    $ref: '#/components/schemas/BugSeverity'
                  replicability:
                    required:
                      - id
                      - name
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  type:
                    required:
                      - id
                      - name
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  status:
                    $ref: '#/components/schemas/BugStatus'
                  reason:
                    type: string
                  note:
                    type: string
                  usecase:
                    type: object
                    required:
                      - id
                      - title
                      - description
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
                  media:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                      required:
                        - id
                required:
                  - id
                  - title
                  - description
                  - actual_result
                  - expected_result
                  - severity
                  - replicability
                  - type
                  - status
                  - reason
                  - note
                  - usecase
                  - media
              examples: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters: []
  '/campaigns/{campaign}/candidates':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    post:
      summary: ''
      operationId: post-campaigns-campaign-candidates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        tester_id:
                          type: number
                        device:
                          oneOf:
                            - type: string
                              properties: {}
                              enum:
                                - any
                            - type: number
                              properties: {}
                        campaignId:
                          type: number
                      required:
                        - tester_id
                required:
                  - results
        '207':
          description: Multi-Status (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        tester_id:
                          type: number
                        device:
                          oneOf:
                            - type: string
                              enum:
                                - any
                            - type: number
                        campaignId:
                          type: number
                      required:
                        - tester_id
                  invalidTesters:
                    type: array
                    items:
                      type: number
                required:
                  - results
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: The Tryber will be inserted as a candidate Tryber on a specific Campaign
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    type: object
                    properties:
                      tester_id:
                        type: number
                      device:
                        oneOf:
                          - type: number
                            properties: {}
                          - type: string
                            properties: {}
                            enum:
                              - random
                    required:
                      - tester_id
                - type: object
                  properties:
                    tester_id:
                      type: number
                    device:
                      oneOf:
                        - type: number
                          properties: {}
                        - type: string
                          properties: {}
                          enum:
                            - random
                  required:
                    - tester_id
      parameters: []
    get:
      summary: Get all candidates for a campaign
      operationId: get-campaigns-campaign-candidates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            surname:
                              type: string
                            gender:
                              $ref: '#/components/schemas/Gender'
                            age:
                              type: number
                            experience:
                              type: number
                            businessCps:
                              type: integer
                            businessCpsLastMonth:
                              type: integer
                            levels:
                              type: object
                              required:
                                - bugHunting
                                - metal
                              properties:
                                bugHunting:
                                  type: string
                                metal:
                                  type: string
                            devices:
                              type: array
                              items:
                                type: object
                                properties:
                                  manufacturer:
                                    type: string
                                  model:
                                    type: string
                                  os:
                                    type: string
                                  osVersion:
                                    type: string
                                  id:
                                    type: number
                                required:
                                  - os
                                  - osVersion
                                  - id
                            questions:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  title:
                                    type: string
                                  value:
                                    type: string
                            status:
                              type: string
                              enum:
                                - candidate
                                - excluded
                                - selected
                          required:
                            - id
                            - name
                            - surname
                            - gender
                            - age
                            - experience
                            - businessCps
                            - businessCpsLastMonth
                            - levels
                            - devices
                  - $ref: '#/components/schemas/PaginationData'
              examples:
                example-2:
                  value:
                    results:
                      - id: 1234
                        name: Giulia
                        surname: Baldini
                        age: 20
                        experience: 100
                        gender: female
                        levels:
                          bugHunting: Newbie
                          metal: Bronze
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 0
                            os: Windows
                            osVersion: Windows 10 May 2021 Update (19043)
                          - manufacturer: Samsung
                            model: Galaxy M31
                            id: 1
                            os: Android
                            osVersion: 12 (12)
                          - manufacturer: Apple
                            model: iPad
                            id: 2
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - manufacturer: Apple
                            model: iPhone SE (2020)
                            id: 3
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 4
                            os: Windows
                            osVersion: Windows 11
                          - manufacturer: Google
                            model: Pixel 6
                            id: 5
                            os: Android
                            osVersion: 13(beta) (13(beta))
                      - id: 1235
                        name: Cesare
                        surname: Alagna
                        experience: 100
                        age: 21
                        levels:
                          bugHunting: No level
                          metal: No level
                        gender: male
                        businessCps: 10
                        businessCpsLastMonth: 5
                        devices:
                          - id: 6
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Xiaomi
                            model: Redmi 8
                            id: 7
                            os: Android
                            osVersion: 11 (11)
                      - id: 12346
                        name: Carlo
                        surname: Paolini
                        experience: 100
                        age: 22
                        gender: not-specified
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 69
                        businessCpsLastMonth: 9
                        devices:
                          - manufacturer: Huawei
                            model: Mate 20 Pro
                            id: 8
                            os: Android
                            osVersion: 10 (10.0)
                      - id: 1239
                        name: Chiara
                        surname: Mancini
                        experience: 100
                        age: 23
                        levels:
                          bugHunting: Rookie
                          metal: Silver
                        gender: other
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 9
                            os: MacOS
                            osVersion: Mac OS X 12 (Monterey) (12.1)
                          - manufacturer: Xiaomi
                            model: Mi 11 Lite
                            id: 10
                            os: Android
                            osVersion: 12 (12)
                      - id: 1236
                        name: Rosa
                        surname: Contralto
                        experience: 100
                        age: 25
                        gender: female
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 31
                        businessCpsLastMonth: 1
                        devices:
                          - id: 11
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Samsung
                            model: Galaxy S20 FE
                            id: 12
                            os: Android
                            osVersion: 12 (12)
                      - id: 12356
                        name: Beppe
                        surname: Gianduiotto
                        experience: 100
                        age: 26
                        gender: male
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 50
                        businessCpsLastMonth: 10
                        devices:
                          - manufacturer: Apple
                            model: iPad Pro 12.9
                            id: 13
                            os: iOS
                            osVersion: iOS 15.7 (15.7)
                          - manufacturer: Samsung
                            model: Galaxy A20e
                            id: 14
                            os: Android
                            osVersion: 11 (11)
                      - id: 12369
                        name: Monica
                        surname: Lorenzini
                        experience: 100
                        age: 27
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        gender: female
                        businessCps: 22
                        businessCpsLastMonth: 2
                        devices:
                          - id: 15
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Asus
                            model: ZenFone 5 (ZE620KL)
                            id: 16
                            os: Android
                            osVersion: Pie (9.0)
                      - id: 12389
                        name: Tullio
                        surname: De Sica
                        experience: 100
                        age: 30
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        gender: male
                        businessCps: 21
                        businessCpsLastMonth: 1
                        devices:
                          - manufacturer: Apple
                            model: iPhone 14 Pro Max
                            id: 17
                            os: iOS
                            osVersion: iOS 16(beta) (16(beta))
                    start: 0
                    size: 8
                example-with-questions:
                  value:
                    results:
                      - id: 1234
                        name: Giulia
                        surname: Baldini
                        experience: 100
                        age: 20
                        gender: female
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 0
                            os: Windows
                            osVersion: Windows 10 May 2021 Update (19043)
                          - manufacturer: Samsung
                            model: Galaxy M31
                            id: 1
                            os: Android
                            osVersion: 12 (12)
                          - manufacturer: Apple
                            model: iPad
                            id: 2
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - manufacturer: Apple
                            model: iPhone SE (2020)
                            id: 3
                            os: iOS
                            osVersion: iOS 15.6 (15.6)
                          - id: 4
                            os: Windows
                            osVersion: Windows 11
                          - manufacturer: Google
                            model: Pixel 6
                            id: 5
                            os: Android
                            osVersion: 13(beta) (13(beta))
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                      - id: 1235
                        name: Cesare
                        surname: Alagna
                        experience: 100
                        age: 21
                        levels:
                          bugHunting: No level
                          metal: No level
                        gender: male
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - id: 6
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Xiaomi
                            model: Redmi 8
                            id: 7
                            os: Android
                            osVersion: 11 (11)
                      - id: 12346
                        name: Carlo
                        surname: Paolini
                        experience: 100
                        age: 22
                        gender: not-specified
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 10
                        businessCpsLastMonth: 5
                        devices:
                          - manufacturer: Huawei
                            model: Mate 20 Pro
                            id: 8
                            os: Android
                            osVersion: 10 (10.0)
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                      - id: 1239
                        name: Chiara
                        surname: Mancini
                        experience: 100
                        age: 23
                        levels:
                          bugHunting: Rookie
                          metal: No level
                        gender: other
                        businessCps: 70
                        businessCpsLastMonth: 13
                        devices:
                          - id: 9
                            os: MacOS
                            osVersion: Mac OS X 12 (Monterey) (12.1)
                          - manufacturer: Xiaomi
                            model: Mi 11 Lite
                            id: 10
                            os: Android
                            osVersion: 12 (12)
                        questions:
                          - id: 1
                            title: Cane
                            value: 'No'
                          - id: 2
                            title: Pagamento
                            value: 'No'
                      - id: 1236
                        name: Rosa
                        surname: Contralto
                        experience: 100
                        age: 25
                        gender: female
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 60
                        businessCpsLastMonth: 1
                        devices:
                          - id: 11
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Samsung
                            model: Galaxy S20 FE
                            id: 12
                            os: Android
                            osVersion: 12 (12)
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                      - id: 12356
                        name: Beppe
                        surname: Gianduiotto
                        experience: 100
                        age: 26
                        gender: male
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        businessCps: 69
                        businessCpsLastMonth: 9
                        devices:
                          - manufacturer: Apple
                            model: iPad Pro 12.9
                            id: 13
                            os: iOS
                            osVersion: iOS 15.7 (15.7)
                          - manufacturer: Samsung
                            model: Galaxy A20e
                            id: 14
                            os: Android
                            osVersion: 11 (11)
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                      - id: 12369
                        name: Monica
                        surname: Lorenzini
                        experience: 100
                        age: 27
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        gender: female
                        businessCps: 20
                        businessCpsLastMonth: 5
                        devices:
                          - id: 15
                            os: Windows
                            osVersion: Windows 10 May 2021 Update
                          - manufacturer: Asus
                            model: ZenFone 5 (ZE620KL)
                            id: 16
                            os: Android
                            osVersion: Pie (9.0)
                        questions:
                          - id: 1
                            title: Cane
                            value: 'No'
                          - id: 2
                            title: Pagamento
                            value: Sì
                      - id: 12389
                        name: Tullio
                        surname: De Sica
                        experience: 100
                        age: 30
                        levels:
                          bugHunting: Newbie
                          metal: No level
                        gender: male
                        businessCps: 0
                        businessCpsLastMonth: 0
                        devices:
                          - manufacturer: Apple
                            model: iPhone 14 Pro Max
                            id: 17
                            os: iOS
                            osVersion: iOS 16(beta) (16(beta))
                        questions:
                          - id: 1
                            title: Cane
                            value: Sì
                          - id: 2
                            title: Pagamento
                            value: 'No'
                    start: 0
                    size: 8
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: ''
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - schema:
            type: string
            example: 'question_1,question_2'
          in: query
          name: fields
          description: The fields to add to the results
        - schema: {}
          in: query
          name: filterByInclude
          description: Key-value Array for item filtering
        - schema: {}
          in: query
          name: filterByExclude
          description: Key-value Array for item filtering
        - schema: {}
          in: query
          name: filterByAge
          description: Array with min and max
        - schema:
            type: string
            enum:
              - onlyAccepted
              - onlyCandidates
              - all
              - candidatesAndExcluded
          in: query
          name: show
          description: Show accepted/candidates or both
  '/campaigns/{campaign}/clusters':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: Get use case clusters for a campaign
      tags:
        - Campaign
        - Task
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                required:
                  - items
              examples:
                4-items:
                  value:
                    items:
                      - id: 1
                        name: 'UC1: Cart'
                      - id: 2
                        name: 'UC2: Login'
                      - id: 3
                        name: 'UC3: Checkout'
                      - id: 4
                        name: 'UC4: Search'
                ux-campaign-get-clusters:
                  value:
                    items:
                      - id: 1
                        name: UC 1 - Carrello
                      - id: 2
                        name: UC 2 - Profilo
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-clusters
      description: Get all clusters for  a specific campaign
      security:
        - JWT: []
  '/campaigns/{campaign}/forms':
    parameters:
      - schema:
          type: string
        name: campaign
        in: path
        required: true
    get:
      summary: Get a preselection form by campaign id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    question:
                      type: string
                    shortName:
                      type: string
                  required:
                    - id
                    - question
              examples:
                example-1:
                  value:
                    - id: 1
                      question: My question 1
                      shortName: Q1
                    - id: 2
                      question: My question 2
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-forms
      description: ''
      security:
        - JWT: []
  '/campaigns/{campaign}/groups':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: Get all Campaign Groups
      tags:
        - Campaign
      operationId: get-campaigns-cid-groups
      description: 'Get all groups used in a Campaign if you have access to it '
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                  required:
                    - id
                    - name
              examples: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters: []
  '/campaigns/{campaign}/observations':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: Get observations for a campaign
      tags:
        - Campaign
        - Task
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - time
                        - tester
                        - cluster
                        - media
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        time:
                          type: number
                        tester:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        cluster:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        media:
                          type: object
                          required:
                            - id
                            - url
                            - streamUrl
                          properties:
                            id:
                              type: integer
                            url:
                              type: string
                            streamUrl:
                              type: string
              examples:
                3-observations:
                  value:
                    items:
                      - id: 1
                        name: Observation Name1
                        time: 59
                        tester:
                          id: 11111
                          name: Jhon Doe
                        cluster:
                          id: 1
                          name: Cluster Name1
                        media:
                          id: 1
                          url: www.example.com
                          streamUrl: www.example.com
                      - id: 2
                        name: Observation Name2
                        time: 39
                        tester:
                          id: 12345
                          name: Mary Blue
                        cluster:
                          id: 1
                          name: Cluster Name1
                        media:
                          id: 1
                          url: www.example.com
                          streamUrl: www.example.com
                      - id: 3
                        name: Observation Name3
                        time: 19
                        tester:
                          id: 11111
                          name: Jhon Doe
                        cluster:
                          id: 2
                          name: Cluster Name2
                        media:
                          id: 1
                          url: www.example.com
                          streamUrl: www.example.com
                ux-campaign-get-observations:
                  value:
                    items:
                      - id: 10678
                        name: ok
                        time: 0
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 11291
                          name: Aurora
                        media:
                          id: 73578
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T11291/91d3f36562a4d2be809c9b1217f591b317f928b4_1666108920.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T11291/91d3f36562a4d2be809c9b1217f591b317f928b4_1666108920-stream.m3u8'
                      - id: 10682
                        name: ''
                        time: 22
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 8208
                          name: Eliseo
                        media:
                          id: 73577
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262-stream.m3u8'
                      - id: 10683
                        name: t58918_xiaomi_mi10_usecase1-mp4
                        time: 0
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 58918
                          name: Claudio
                        media:
                          id: 73579
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033-stream.m3u8'
                      - id: 10684
                        name: t960_apple_iphone12_usecase0-mp4
                        time: 0
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 960
                          name: Domenico
                        media:
                          id: 73580
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T960/19ebc32b3d71e4a3f2858eea298761d44db5d83b_1666112983.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T960/19ebc32b3d71e4a3f2858eea298761d44db5d83b_1666112983-stream.m3u8'
                      - id: 10685
                        name: t17968_pc_desktop-_amd_usecase1-
                        time: 0
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 17968
                          name: Vittorio
                        media:
                          id: 73589
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T17968/0af496e75fb6ec367749d1c34a2f9a0dec0f2b4a_1666121805.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T17968/0af496e75fb6ec367749d1c34a2f9a0dec0f2b4a_1666121805-stream.m3u8'
                      - id: 10686
                        name: t29187_huaweihonor_usecase0-mp4
                        time: 0
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 29187
                          name: Giada
                        media:
                          id: 73590
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T29187/c40ae70fbc3e3ac3c77a07aefdddec014d099e30_1666125348.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T29187/c40ae70fbc3e3ac3c77a07aefdddec014d099e30_1666125348-stream.m3u8'
                      - id: 10687
                        name: interessante
                        time: 58
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 8208
                          name: Eliseo
                        media:
                          id: 73577
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T8208/bfc341707a8a3c247926aee8d4efe14f06f5165d_1666101262-stream.m3u8'
                      - id: 10688
                        name: giommiobs
                        time: 108
                        cluster:
                          id: 781
                          name: UC 1 - Carrello
                        tester:
                          id: 58918
                          name: Claudio
                        media:
                          id: 73579
                          url: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/appq.use-case-media/CP4845/UC19595/T58918/713c9be296e4fb76d0b074947bbe9a56b2807000_1666111033-stream.m3u8'
                      - id: 10690
                        name: ok T32
                        time: 4
                        cluster:
                          id: 782
                          name: UC 2 - Profilo
                        tester:
                          id: 32
                          name: Luca
                        media:
                          id: 74191
                          url: 'https://s3-eu-west-1.amazonaws.com/mediaconvert-encoder-staging-bucket/CP4845/UC19596/T32/ad4fc347f2579800a1920a8be6e181dda0f4b290_1692791543.mp4'
                          streamUrl: 'https://s3-eu-west-1.amazonaws.com/mediaconvert-encoder-staging-bucket/CP4845/UC19596/T32/ad4fc347f2579800a1920a8be6e181dda0f4b290_1692791543-stream.m3u8'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-observations
      description: Get observations for a campaign
      security:
        - JWT: []
      parameters:
        - schema: {}
          in: query
          name: filterBy
  '/campaigns/{campaign}/payouts':
    parameters:
      - $ref: '#/components/parameters/campaign'
    get:
      summary: Get payout data for a specific campaign
      operationId: get-campaigns-campaign-payouts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    maxBonusBug: 4.99
                properties:
                  maxBonusBug:
                    type: number
                  completionRule:
                    type: object
                    properties:
                      bugs:
                        type: number
                      usecases:
                        type: number
                  testSuccess:
                    type: object
                    required:
                      - payout
                      - points
                      - message
                    properties:
                      payout:
                        type: number
                      points:
                        type: number
                      message:
                        type: string
                  testFailure:
                    type: object
                    required:
                      - payout
                      - points
                      - message
                    properties:
                      payout:
                        type: number
                      points:
                        type: number
                      message:
                        type: string
                required:
                  - maxBonusBug
                  - completionRule
                  - testSuccess
                  - testFailure
              examples:
                Example 1:
                  value:
                    maxBonusBug: 5.99
                    completionRule:
                      bugs: 4
                      usecases: 53
                    testSuccess:
                      payout: 15
                      points: 100
                      message: message
                    testFailure:
                      payout: 0
                      points: -200
                      message: message
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: ''
      security:
        - JWT: []
      parameters: []
  '/campaigns/{campaign}/prospect':
    parameters:
      - schema:
          type: string
        name: campaign
        in: path
        required: true
    get:
      summary: Get a prospect by campaign id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    items:
                      - usecases:
                          completed: 0
                          required: 0
                        tester:
                          id: 0
                          name: string
                          surname: string
                        bugs:
                          critical: 0
                          high: 0
                          medium: 0
                          low: 0
                        payout:
                          completion: 0
                          bug: 0
                          refund: 0
                          extra: 0
                        experience:
                          completion: 0
                          extra: 0
                        note: string
                        status: pending
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        tester:
                          type: object
                          required:
                            - id
                            - name
                            - surname
                            - group
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            surname:
                              type: string
                            group:
                              type: number
                        usecases:
                          type: object
                          required:
                            - completed
                            - required
                          properties:
                            completed:
                              type: integer
                            required:
                              type: integer
                        bugs:
                          type: object
                          required:
                            - critical
                            - high
                            - medium
                            - low
                          properties:
                            critical:
                              type: integer
                            high:
                              type: integer
                            medium:
                              type: integer
                            low:
                              type: integer
                        payout:
                          type: object
                          required:
                            - completion
                            - bug
                            - refund
                            - extra
                          properties:
                            completion:
                              type: number
                            bug:
                              type: number
                            refund:
                              type: number
                            extra:
                              type: number
                        experience:
                          type: object
                          required:
                            - completion
                            - extra
                          properties:
                            completion:
                              type: integer
                            extra:
                              type: integer
                        note:
                          type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - done
                        weightedBugs:
                          type: number
                        isCompleted:
                          type: boolean
                        isTopTester:
                          type: boolean
                      required:
                        - tester
                        - usecases
                        - bugs
                        - payout
                        - experience
                        - note
                        - status
                        - weightedBugs
                        - isCompleted
                        - isTopTester
                  status:
                    $ref: '#/components/schemas/ProspectStatus'
                required:
                  - items
                  - status
              examples:
                Example 1:
                  value:
                    items:
                      - tester:
                          id: 0
                          name: string
                          surname: string
                          group: 0
                        usecases:
                          completed: 0
                          required: 0
                        bugs:
                          critical: 0
                          high: 0
                          medium: 0
                          low: 0
                        payout:
                          completion: 0
                          bug: 0
                          refund: 0
                          extra: 0
                        experience:
                          completion: 0
                          extra: 0
                        note: string
                        status: pending
                        weightedBugs: 0
                        isCompleted: true
                        isTopTester: true
                    status: draft
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          description: Precondition Failed
      operationId: get-campaigns-campaign-prospect
      description: ''
      security:
        - JWT: []
      parameters:
        - schema: {}
          in: query
          name: filterByInclude
          description: Key-value Array for item filtering
        - schema: {}
          in: query
          name: filterByExclude
          description: Key-value Array for item filtering
    put:
      summary: Edit a campaign prospect
      operationId: put-campaigns-campaign-prospect
      responses:
        '200':
          description: OK
          content: {}
        '304':
          description: Not Modified
        '501':
          description: Not Implemented
      security:
        - JWT: []
      description: 'Make campaign perspective status done, and change exp points and tester payouts.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ProspectStatus'
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      tester:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                      experience:
                        type: object
                        required:
                          - completion
                          - extra
                        properties:
                          completion:
                            type: integer
                          extra:
                            type: integer
                      payout:
                        type: object
                        required:
                          - completion
                          - bug
                          - extra
                          - refund
                        properties:
                          completion:
                            type: number
                          bug:
                            type: number
                          extra:
                            type: number
                          refund:
                            type: number
                      note:
                        type: string
                      completed:
                        type: boolean
                    required:
                      - tester
                      - experience
                      - payout
                      - completed
              required:
                - status
                - items
            examples:
              Example 1:
                value:
                  status: done
                  items:
                    - tester:
                        id: 0
                      experience:
                        completion: 0
                        extra: 0
                      payout:
                        completion: 0
                        bug: 0
                        extra: 0
                        refund: 0
                      note: string
                      completed: true
    patch:
      summary: ''
      operationId: patch-campaigns-campaign-prospect
      responses:
        '200':
          description: OK
        '304':
          description: Not Modified
        '403':
          description: Forbidden
        '501':
          description: Not Implemented
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ProspectStatus'
  '/campaigns/{campaign}/prospect/{testerId}':
    parameters:
      - $ref: '#/components/parameters/campaign'
      - $ref: '#/components/parameters/testerId'
    put:
      summary: ''
      operationId: put-campaigns-campaign-prospect-testerId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    payout:
                      completion: 0.2
                      bugs: 0.2
                      refund: 0.2
                      extra: 0.2
                    experience:
                      completion: 0
                      extra: 0
                    note: string
                    completed: true
                properties:
                  payout:
                    type: object
                    required:
                      - completion
                      - bugs
                      - refund
                      - extra
                    properties:
                      completion:
                        type: number
                      bugs:
                        type: number
                      refund:
                        type: number
                      extra:
                        type: number
                  experience:
                    type: object
                    required:
                      - completion
                      - extra
                    properties:
                      completion:
                        type: integer
                      extra:
                        type: integer
                  note:
                    type: string
                  completed:
                    type: boolean
                required:
                  - payout
                  - experience
                  - note
                  - completed
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payout:
                    completion: 10
                    bugs: 10
                    refund: 10
                    extra: 10
                  experience:
                    completion: 10
                    extra: 10
                  note: string
                  completed: true
              properties:
                payout:
                  type: object
                  required:
                    - completion
                    - bugs
                    - refund
                    - extra
                  properties:
                    completion:
                      type: number
                    bugs:
                      type: number
                    refund:
                      type: number
                    extra:
                      type: number
                experience:
                  type: object
                  required:
                    - completion
                    - extra
                  properties:
                    completion:
                      type: integer
                    extra:
                      type: integer
                note:
                  type: string
                completed:
                  type: boolean
              required:
                - payout
                - experience
                - note
                - completed
            examples:
              Example 1:
                value:
                  payout:
                    completion: 0
                    bugs: 0
                    refund: 0
                    extra: 0
                  experience:
                    completion: 0
                    extra: 0
                  note: string
                  completed: true
  '/campaigns/{campaign}/stats':
    parameters:
      - schema:
          type: string
        name: campaign
        in: path
        required: true
    get:
      summary: Get stats for a specific campaign
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  selected:
                    type: integer
                required:
                  - selected
              examples: {}
      operationId: get-campaigns-campaign-stats
      description: ''
      security:
        - JWT: []
  '/campaigns/{campaign}/tasks':
    parameters:
      - $ref: '#/components/parameters/campaign'
    get:
      summary: Get all Tasks in a Campaign
      tags:
        - Campaign
        - Task
      responses:
        '200':
          description: A list of UseCase linked with the Campaign
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Task'
                    - type: object
                      properties:
                        id:
                          type: integer
              examples:
                example:
                  value:
                    - name: Ask news to Model-3
                      content: <b>During</b> the trip ask the car for the weather
                      campaign_id: 42
                      group: 4
                      allow_media: true
                      id: 2
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-tasks
      description: |
        Get all UseCases linked to a Campaign
      security:
        - JWT: []
    post:
      summary: Create a new Task in a Campaign
      operationId: post-campaigns-campaign-tasks
      responses:
        '201':
          description: Created
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: |
        Create a new UseCase and link it to a Campaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskOptional'
            examples:
              example:
                value:
                  name: Ask news to Model-3
                  content: <b>During</b> the trip ask the car for the weather
                  campaign_id: 42
                  group: 4
                  allow_media: true
                  id: 2
        description: The data of the new UseCase to link to the Campaign
      tags:
        - Campaign
        - Task
      security:
        - JWT: []
  '/campaigns/{campaign}/tasks/{task}':
    parameters:
      - $ref: '#/components/parameters/campaign'
      - $ref: '#/components/parameters/task'
    get:
      summary: Get a specific Task in a Campaign
      tags:
        - Campaign
        - Task
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                example:
                  value:
                    name: Ask news to Model-3
                    content: <b>During</b> the trip ask the car for the weather
                    campaign_id: 42
                    group: 4
                    allow_media: true
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-tasks-task
      description: Get the data of a UseCase in a Campaign
      security:
        - JWT: []
    put:
      summary: Edit a Task
      operationId: put-campaigns-campaign-tasks-task
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                example:
                  value:
                    name: Ask news to Model-3
                    content: <b>During</b> the trip ask the car for the weather
                    campaign_id: 42
                    group: 4
                    allow_media: true
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Edit a UseCase in a Campaign
      tags:
        - Campaign
        - Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskOptional'
            examples:
              example:
                value:
                  name: Ask news to Model-3
                  content: <b>During</b> the trip ask the car for the weather
                  campaign_id: 42
                  group: 4
                  allow_media: true
        description: The data to edit in the UseCase linked to the Campaign
      security:
        - JWT: []
  '/campaigns/{campaign}/ux':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: Get all data for  a specific ux-campaign
      tags:
        - Campaign
        - Task
      responses:
        '200':
          description: A UseCase linked with the Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal:
                    type: string
                  usersNumber:
                    type: integer
                  sentiments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        value:
                          type: integer
                        comment:
                          type: string
                        cluster:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      required:
                        - id
                        - value
                        - comment
                        - cluster
                  methodology:
                    type: object
                    required:
                      - name
                      - type
                      - description
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        enum:
                          - qualitative
                          - quantitative
                          - quali-quantitative
                      description:
                        type: string
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                  visible:
                    type: integer
                    minimum: 0
                    maximum: 1
                required:
                  - goal
                  - usersNumber
                  - sentiments
                  - methodology
                  - questions
                  - visible
              examples: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-campaign-ux
      description: Get the data of a UseCase in a Campaign
      security:
        - JWT: []
    patch:
      summary: PATCH ux-campaign-dashboard
      operationId: patch-campaigns-campaign-ux
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                edit-insight-71:
                  value:
                    value:
                      goal: this is goal
                      questions:
                        - id: 1
                          name: question 1
                        - id: 2
                          name: question 2
                      methodology:
                        name: UX Challenge
                        description: UX Challenge
                        type: qualitative
                      usersNumber: 10
                      insights:
                        - id: 70
                          title: Malfunzionamento form
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst.'
                          order: 0
                          severityId: 1
                          clusterIds:
                            - 1
                          videoParts:
                            - id: 250
                              order: 0
                              start: 0
                              end: 97
                              mediaId: 73579
                              description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien'
                            - id: 251
                              order: 1
                              start: 22
                              end: 101
                              mediaId: 73577
                              description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                            - id: 252
                              order: 2
                              start: 0
                              end: 152
                              mediaId: 73578
                              description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                        - id: 71
                          title: Difficoltà di navigazione edited
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. edited'
                          order: 1
                          severityId: 1
                          clusterIds:
                            - 2
                          videoParts:
                            - id: 253
                              order: 0
                              start: 0
                              end: 60
                              mediaId: 73580
                              description: Lorem ipsum dolor sit amet
                        - id: 72
                          title: Criticità Pagina Prodotto
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst. Etiam sodales nibh turpis, at condimentum arcu vehicula eget. Donec sollicitudin dapibus '
                          order: 2
                          severityId: 2
                          clusterIds:
                            - 1
                          videoParts:
                            - id: 254
                              order: 0
                              start: 0
                              end: 106
                              mediaId: 73589
                              description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tellus lorem, maximus sit amet fermentum ac, venenatis eu sapien. In hac habitasse platea dictumst. Etiam sodales nibh turpis,'
                      sentiments: []
        '403':
          $ref: '#/components/responses/Authentication'
        '404':
          $ref: '#/components/responses/NotFound'
      description: ''
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  goal: this is the goal
                  usersNumber: 5
                  methodology:
                    description: Methodology Description
                    type: quantitative
                  sentiments:
                    - clusterId: 0
                      value: 4
                      comment: comment
                    - id: 1
                      clusterId: 0
                      value: 5
                      comment: comment
                  questions:
                    - name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - id: 5
                      name: who?
              properties:
                goal:
                  type: string
                usersNumber:
                  type: integer
                visible:
                  type: integer
                  minimum: 0
                  maximum: 1
                methodology:
                  type: object
                  properties:
                    description:
                      type: string
                    type:
                      type: string
                  required:
                    - description
                    - type
                sentiments:
                  type: array
                  items:
                    type: object
                    properties:
                      clusterId:
                        type: integer
                      value:
                        type: integer
                      comment:
                        type: string
                      id:
                        type: integer
                    required:
                      - clusterId
                      - value
                      - comment
                questions:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      id:
                        type: integer
                    required:
                      - name
            examples:
              edit-insight-and-videopart:
                value:
                  goal: this is the goal
                  usersNumber: 5
                  methodology:
                    description: Methodology Description
                    type: quantitative
                  sentiments:
                    - clusterId: 0
                      value: 4
                      comment: comment
                    - id: 1
                      clusterId: 0
                      value: 5
                      comment: comment
                  questions:
                    - name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - id: 5
                      name: who?
              add-new-insight-and-new-videopart:
                value:
                  goal: this is the goal
                  usersNumber: 5
                  methodology:
                    description: Methodology Description
                    type: qualitative
                  sentiments:
                    - clusterId: 0
                      value: 4
                      comment: comment
                    - id: 1
                      clusterId: 0
                      value: 5
                      comment: comment
                  questions:
                    - id: 1
                      name: why?
                    - id: 2
                      name: what?
                    - id: 3
                      name: when?
                    - id: 4
                      name: how?
                    - name: who?
        description: ''
  /campaigns/forms:
    post:
      summary: Create a new preselection form
      operationId: post-campaigns-forms
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  fields:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                required:
                  - id
                  - name
              examples:
                Example 1:
                  value:
                    id: 0
                    name: string
                    campaign:
                      id: 0
                      name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  name: My form
                  fields:
                    - question: 'What''s your [custom question]?'
                      type: text
                    - question: 'What''s your [custom selectable question]?'
                      type: select
                      options:
                        - Option1
                        - Option2
                    - question: 'What''s your [custom selectable question]?'
                      type: select
                      options:
                        - Option1
                        - Option2
                    - question: 'What''s your [cuf text question]?'
                      type: cuf_1
                    - question: 'What''s your [cuf text question]?'
                      type: cuf_12
                      options:
                        - 1
                        - 5
                        - 14
                    - question: 'What''s your [profile question]?'
                      type: gender
              properties:
                name:
                  type: string
                fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/PreselectionFormQuestion'
                campaign:
                  type: integer
                creationDate:
                  type: string
              required:
                - name
                - fields
            examples:
              Example 1:
                value:
                  name: string
                  fields:
                    - question: string
                      short_name: string
                      type: gender
                  campaign: 0
                  creationDate: string
      description: ''
    parameters: []
    get:
      summary: Get all forms
      operationId: get-campaigns-forms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    results:
                      - id: 3
                        name: Form Name
                    total: 2
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        campaign:
                          type: integer
                      required:
                        - id
                        - name
                  limit:
                    type: integer
                  start:
                    type: integer
                  size:
                    type: integer
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - size
              examples:
                Example 1:
                  value:
                    results:
                      - id: 0
                        name: string
                        campaign: 0
                    limit: 0
                    start: 0
                    size: 0
                    total: 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - $ref: '#/components/parameters/searchBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
      description: ''
      security:
        - JWT: []
  '/campaigns/forms/{formId}':
    parameters:
      - schema:
          type: string
        name: formId
        in: path
        required: true
    get:
      summary: Get a preselection form
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                    example: My form
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  fields:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: number
                          required:
                            - id
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                required:
                  - id
                  - name
                  - fields
              examples:
                Example 1:
                  value:
                    id: 0
                    name: My form
                    campaign:
                      id: 0
                      name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-campaigns-forms-formId
      description: ''
      security:
        - JWT: []
    put:
      summary: Edit a preselection form
      operationId: put-campaigns-forms-formId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: 15
                    name: My form
                    fields:
                      - id: 3
                        question: 'What''s your [custom question]?'
                        type: text
                      - id: 12
                        question: 'What''s your [custom selectable question]?'
                        type: select
                        options:
                          - Option1
                          - Option2
                      - id: 9
                        question: 'What''s your [custom selectable question]?'
                        type: select
                        options:
                          - Option1
                          - Option2
                      - id: 24
                        question: 'What''s your [cuf text question]?'
                        type: cuf_1
                      - id: 29
                        question: 'What''s your [cuf text question]?'
                        type: cuf_12
                        options:
                          - 1
                          - 5
                          - 14
                      - id: 89
                        question: 'What''s your [profile question]?'
                        type: gender
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  fields:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: number
                          required:
                            - id
                        - $ref: '#/components/schemas/PreselectionFormQuestion'
                  campaign:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                required:
                  - id
                  - name
                  - fields
              examples:
                Example 1:
                  value:
                    id: 0
                    name: string
                    fields:
                      - id: 0
                        question: string
                        short_name: string
                        type: gender
                    campaign:
                      id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  name: My form
                  campaign: 1
                  fields:
                    - id: 3
                      question: 'What''s your [custom question]?'
                      type: text
                    - id: 12
                      question: 'What''s your [custom selectable question]?'
                      type: select
                      options:
                        - Option1
                        - Option2
                    - id: 9
                      question: 'What''s your [custom selectable question]?'
                      type: select
                      options:
                        - Option1
                        - Option2
                    - id: 24
                      question: 'What''s your [cuf text question]?'
                      type: cuf_1
                    - id: 29
                      question: 'What''s your [cuf select question]?'
                      type: cuf_12
                      options:
                        - 1
                        - 5
                        - 7
                        - 14
                    - question: 'What''s your [profile question]?'
                      type: gender
              properties:
                name:
                  type: string
                campaign:
                  type: integer
                fields:
                  type: array
                  items:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: number
                      - $ref: '#/components/schemas/PreselectionFormQuestion'
              required:
                - name
                - fields
            examples:
              Example 1:
                value:
                  name: string
                  campaign: 0
                  fields:
                    - id: 0
                      question: string
                      short_name: string
                      type: gender
      description: ''
  /campaigns/owners:
    get:
      summary: Get owners of Campaigns
      operationId: get-campaigns-owners
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    surname:
                      type: string
                  required:
                    - id
                    - name
                    - surname
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      description: Get all the owners of campaigns you have access to
      tags:
        - Campaign
      parameters: []
    parameters: []
  /campaignTypes:
    parameters: []
    get:
      summary: Get Campaign Types
      tags: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    customRoles:
                      type: array
                      items:
                        type: object
                        properties:
                          roleId:
                            type: integer
                          userIds:
                            type: array
                            items:
                              type: integer
                        required:
                          - roleId
                          - userIds
                  required:
                    - id
                    - name
                    - customRoles
              examples:
                Example 1:
                  value:
                    - id: 0
                      name: string
                      customRoles:
                        - roleId: 0
                          userIds:
                            - 0
          description: ''
      operationId: get-campaign-types
      description: ''
      security:
        - JWT: []
  /certifications:
    get:
      summary: Retrive and filter all certifications
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    area:
                      type: string
                    institute:
                      type: string
                  required:
                    - id
                    - name
                    - area
                    - institute
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-certifications
      security:
        - JWT: []
      description: Get all certificatio
      parameters:
        - $ref: '#/components/parameters/filterBy'
    parameters: []
  '/countries/{code}/region':
    get:
      summary: Get regions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                    - name
                    - value
      operationId: get-regions
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
            default: en
          in: query
          name: languageCode
    parameters:
      - schema:
          type: string
        name: code
        in: path
        required: true
  /customers:
    get:
      summary: Get Customers
      tags:
        - Customer
      responses:
        '200':
          description: An array of Customer objects
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        id:
                          type: integer
                        name:
                          type: string
                  type: object
              examples:
                example-1:
                  value:
                    - username: Elon71
                      customer_name: Elon71
                      id: 0
                get-customers-success:
                  value:
                    - id: 1
                      name: Peronsipò
                    - id: 2
                      name: AppDefinitions
                    - id: 3
                      name: Gurguley
                    - id: 4
                      name: Surgiva
                    - id: 6
                      name: Sky Line
        '403':
          $ref: '#/components/responses/NotFound'
      operationId: get-customers
      description: Get all the customers you have access to
      security:
        - JWT: []
    parameters: []
    post:
      summary: ''
      operationId: post-customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  '/customers/{customer}/projects':
    parameters:
      - schema:
          type: string
        name: customer
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                required:
                  - results
      operationId: get-customers-customer-projects
      description: ''
      security:
        - JWT: []
    post:
      summary: ''
      operationId: post-customers-customer-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                required:
                  - id
                  - name
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  /custom_user_fields:
    get:
      summary: Get all custom user fields
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    group:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: number
                        name:
                          $ref: '#/components/schemas/TranslatablePage'
                        description:
                          $ref: '#/components/schemas/TranslatablePage'
                    fields:
                      type: array
                      items:
                        $ref: '#/components/schemas/CustomUserFieldsData'
                  required:
                    - group
              examples: {}
      operationId: get-customUserFields
      description: ''
      security:
        - JWT: []
    parameters: []
  '/devices/{device_type}/models':
    get:
      summary: Retrive manufacturers and models of devices
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    manufacturer:
                      type: string
                    models:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: number
                          name:
                            type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-devices-devices-type-model
      security:
        - JWT: []
      description: Get all model of devices with theirs manufacturers
      parameters:
        - $ref: '#/components/parameters/filterBy'
    parameters:
      - schema:
          type: string
        name: device_type
        in: path
        required: true
  '/devices/{device_type}/operating_systems':
    get:
      summary: Retrive operating systems list of a device type
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                  required:
                    - id
                    - name
                    - type
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-devices-operating-systems
      security:
        - JWT: []
      description: Get all operating systems of a device type
      parameters:
        - $ref: '#/components/parameters/filterBy'
    parameters:
      - schema:
          type: string
        name: device_type
        in: path
        required: true
  '/devices/{device_type}/os_versions':
    get:
      summary: Retrive versions list of an operating systems
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-devices-os-versions
      security:
        - JWT: []
      description: Get all versions of an operating systems
      parameters:
        - $ref: '#/components/parameters/filterBy'
    parameters:
      - schema:
          type: string
        name: device_type
        in: path
        required: true
  /dossiers:
    parameters: []
    post:
      summary: ''
      operationId: post-dossiers
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  message:
                    type: string
                    enum:
                      - HOOK_FAILED
                required:
                  - id
              examples:
                Example 1:
                  value:
                    id: 1
                Example 2:
                  value:
                    id: 0
                    message: HOOK_FAILED
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DossierCreationData'
                - type: object
                  properties:
                    duplicate:
                      type: object
                      properties:
                        fields:
                          type: integer
                        useCases:
                          type: integer
                        mailMerges:
                          type: integer
                        pages:
                          type: integer
                        testers:
                          type: integer
                        campaign:
                          type: integer
                - type: object
                  properties:
                    skipPagesAndTasks:
                      type: integer
                      minimum: 0
                      maximum: 1
                      default: 0
                - type: object
                  properties:
                    visibilityCriteria:
                      type: array
                      items:
                        type: object
                        properties:
                          cuf_id:
                            type: integer
                          cuf_value_id:
                            type: integer
                        required:
                          - cuf_id
                          - cuf_value_id
            examples:
              Example 1:
                value:
                  project: 0
                  testType: 0
                  title:
                    customer: string
                    tester: string
                  startDate: '2019-08-24T14:15:22Z'
                  endDate: '2019-08-24T14:15:22Z'
                  closeDate: '2019-08-24T14:15:22Z'
                  deviceList:
                    - 0
                  csm: 0
                  roles:
                    - role: 0
                      user: 0
                  description: string
                  productLink: string
                  goal: string
                  outOfScope: string
                  deviceRequirements: string
                  target:
                    notes: string
                    size: 0
                    cap: 0
                  countries:
                    - st
                  languages:
                    - string
                  browsers:
                    - 0
                  productType: 0
                  notes: string
                  duplicate:
                    fields: 0
                    useCases: 0
                    mailMerges: 0
                    pages: 0
                    testers: 0
                    campaign: 0
                  skipPagesAndTasks: 0
  '/dossiers/{campaign}':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    put:
      summary: ''
      operationId: put-dossiers-campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: ''
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DossierCreationData'
    get:
      summary: ''
      operationId: get-dossiers-campaign
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - title
                  - startDate
                  - endDate
                  - closeDate
                  - customer
                  - project
                  - testType
                  - deviceList
                  - csm
                  - phase
                properties:
                  id:
                    type: integer
                  title:
                    type: object
                    required:
                      - customer
                      - tester
                    properties:
                      customer:
                        type: string
                      tester:
                        type: string
                  startDate:
                    type: string
                    format: date-time
                  endDate:
                    type: string
                    format: date-time
                  closeDate:
                    type: string
                    format: date-time
                  customer:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  project:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  testType:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  deviceList:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  csm:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        user:
                          type: object
                          required:
                            - id
                            - name
                            - surname
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            surname:
                              type: string
                  description:
                    type: string
                  productLink:
                    type: string
                  goal:
                    type: string
                  outOfScope:
                    type: string
                  deviceRequirements:
                    type: string
                  target:
                    type: object
                    properties:
                      notes:
                        type: string
                      size:
                        type: integer
                      cap:
                        type: integer
                  countries:
                    type: array
                    minItems: 1
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/CountryCode'
                  languages:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                  browsers:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  productType:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                  phase:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  notes:
                    type: string
              examples:
                Example 1:
                  value:
                    id: 1
                    title:
                      customer: Customer Title
                      tester: Tester Title
                    startDate: '2019-08-24T14:15:22Z'
                    endDate: '2019-08-24T14:15:22Z'
                    closeDate: '2019-08-24T14:15:22Z'
                    customer:
                      id: 1
                      name: My Customer
                    project:
                      id: 1
                      name: My Project
                    testType:
                      id: 1
                      name: Bughunting
                    deviceList:
                      - id: 1
                        name: Android
                    csm:
                      id: 1
                      name: Name Surname
                    phase:
                      id: 1
                      name: name
                    roles:
                      - role:
                          id: 1
                          name: PM
                        user:
                          id: 1
                          name: Name
                          surname: Surname
      security:
        - JWT: []
  '/dossiers/{campaign}/phases':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    put:
      summary: Your PUT endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
      operationId: put-dossiers-campaign-phases
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phase:
                  type: integer
              required:
                - phase
      security:
        - JWT: []
  '/dossiers/{campaign}/quotations':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    post:
      summary: ''
      operationId: post-dossiers-campaign-quotations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              examples:
                Example 1:
                  value:
                    id: 0
        '404':
          description: Not Found
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quote:
                  type: string
                notes:
                  type: string
            examples:
              notes-and-quotation:
                value:
                  quote: '11000'
                  notes: string
              only-notes:
                value:
                  notes: string
              only-quotaion:
                value:
                  quote: string
              empty:
                value: {}
        description: ''
  '/dossiers/{campaign}/quotations/{quote}':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
      - schema:
          type: string
        name: quote
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-dossiers-campaign-quotations-quote
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters: []
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
            examples:
              Example 1:
                value:
                  amount: string
              Example 2:
                value: {}
        description: ''
      description: ''
  '/dossiers/{campaign}/quotesHistory':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: ''
      operationId: get-dossiers-campaign-quotes-history
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        campaign:
                          type: object
                          required:
                            - id
                            - title
                            - phase_id
                            - phase_name
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                            phase_id:
                              type: integer
                            phase_name:
                              type: string
                        quote:
                          type: object
                          required:
                            - id
                            - amount
                            - status
                          properties:
                            id:
                              type: integer
                            amount:
                              type: string
                            status:
                              type: string
                              enum:
                                - pending
                                - proposed
                                - approved
                                - rejected
                      required:
                        - campaign
                        - quote
                required:
                  - items
              examples:
                Example 1:
                  value:
                    items:
                      - campaign:
                          id: 0
                          title: string
                          phase_id: 2
                          phase_name: Closing
                        quote:
                          id: 0
                          amount: string
                          status: pending
      security:
        - JWT: []
  /education:
    get:
      summary: Get all education levels
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                      minLength: 1
                x-examples:
                  example-1:
                    - id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-education
      security:
        - JWT: []
      description: Get all education levels
  /employments:
    get:
      summary: Get All Employements
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                      minLength: 1
                x-examples:
                  example-1:
                    - id: 0
                      name: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-employments
      security:
        - JWT: []
      description: Get all employments
  '/jotforms/{campaign}':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    post:
      summary: Import a jotform to a campaign
      operationId: post-jotforms-campaignId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                formId:
                  type: string
                testerIdColumn:
                  type: string
              required:
                - formId
                - testerIdColumn
            examples:
              Example 1:
                value:
                  formId: '123456'
                  testerIdColumn: ltstronggttryberIdltstronggt
      description: ''
      security:
        - JWT: []
  /jotforms/forms:
    get:
      summary: Get Jotforms
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    createdAt:
                      type: string
                  required:
                    - id
                    - name
                    - createdAt
              examples:
                3 forms:
                  value:
                    - id: '3'
                      name: Form new
                      createdAt: '2024-02-24 16:00:00'
                    - id: '2'
                      name: Form old
                      createdAt: '2024-02-25 16:00:00'
                    - id: '1'
                      name: Form oldest
                      createdAt: '2024-02-26 16:00:00'
                empty:
                  value: []
        '403':
          description: Forbidden
      operationId: get-jotforms
      description: ''
      security:
        - JWT: []
    parameters: []
  '/jotforms/forms/{formId}/questions':
    parameters:
      - schema:
          type: string
        name: formId
        in: path
        required: true
    get:
      summary: Get quesitions from a jotform
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    type:
                      type: string
                  required:
                    - id
                    - name
                    - title
                    - type
              examples:
                3 questions:
                  value:
                    - id: '1'
                      type: control_textbox
                      title: Tester ID
                      description: Inserisci il tuo tester ID nel formato T1234
                      name: testerId
                    - id: '2'
                      type: control_email
                      title: Email
                      description: ''
                      name: email
                    - id: '43'
                      type: control_text
                      title: "<p>Ciao!<br />Stiamo cercando utenti con fatture insolute dei seguenti operatori:</p>\r\n<ul>\r\n<li>Wind3</li>\r\n<li>Fastweb</li>\r\n<li>Iliad</li>\r\n</ul>\r\n<p>\_</p>\r\n<p>Se rientri nel target, compila la survey, abbiamo un'opportunità di <strong>guadagno</strong> per te!</p>"
                      name: input43
                empty:
                  value: []
        '403':
          description: Forbidden
      operationId: get-jotforms-forms-formId-questions
      security:
        - JWT: []
  /languages:
    get:
      summary: Get All Languages
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                  required:
                    - id
                    - name
              examples:
                All languages:
                  value:
                    - name: Afrikaans
                      id: 1
                    - name: Afrikaans (South Africa)
                      id: 2
                    - name: Arabic
                      id: 3
                    - name: Arabic (U.A.E.)
                      id: 4
                    - name: Arabic (Bahrain)
                      id: 5
                    - name: Arabic (Algeria)
                      id: 6
                    - name: Arabic (Egypt)
                      id: 7
                    - name: Arabic (Iraq)
                      id: 8
                    - name: Arabic (Jordan)
                      id: 9
                    - name: Arabic (Kuwait)
                      id: 10
                    - name: Arabic (Lebanon)
                      id: 11
                    - name: Arabic (Libya)
                      id: 12
                    - name: Arabic (Morocco)
                      id: 13
                    - name: Arabic (Oman)
                      id: 14
                    - name: Arabic (Qatar)
                      id: 15
                    - name: Arabic (Saudi Arabia)
                      id: 16
                    - name: Arabic (Syria)
                      id: 17
                    - name: Arabic (Tunisia)
                      id: 18
                    - name: Arabic (Yemen)
                      id: 19
                    - name: Azeri (Latin)
                      id: 20
                    - name: Azeri (Azerbaijan)
                      id: 21
                    - name: Belarusian
                      id: 23
                    - name: Belarusian (Belarus)
                      id: 24
                    - name: Bulgarian
                      id: 25
                    - name: Bulgarian (Bulgaria)
                      id: 26
                    - name: Bosnian (Bosnia and Herzegovina)
                      id: 27
                    - name: Catalan
                      id: 28
                    - name: Catalan (Spain)
                      id: 29
                    - name: Czech
                      id: 30
                    - name: Czech (Czech Republic)
                      id: 31
                    - name: Welsh
                      id: 32
                    - name: Welsh (United Kingdom)
                      id: 33
                    - name: Danish
                      id: 34
                    - name: Danish (Denmark)
                      id: 35
                    - name: German
                      id: 36
                    - name: German (Austria)
                      id: 37
                    - name: German (Switzerland)
                      id: 38
                    - name: German (Germany)
                      id: 39
                    - name: German (Liechtenstein)
                      id: 40
                    - name: German (Luxembourg)
                      id: 41
                    - name: Divehi
                      id: 42
                    - name: Divehi (Maldives)
                      id: 43
                    - name: Greek
                      id: 44
                    - name: Greek (Greece)
                      id: 45
                    - name: English
                      id: 46
                    - name: English (Australia)
                      id: 47
                    - name: English (Belize)
                      id: 48
                    - name: English (Canada)
                      id: 49
                    - name: English (Caribbean)
                      id: 50
                    - name: English (United Kingdom)
                      id: 51
                    - name: English (Ireland)
                      id: 52
                    - name: English (Jamaica)
                      id: 53
                    - name: English (New Zealand)
                      id: 54
                    - name: English (Republic of the Philippines)
                      id: 55
                    - name: English (Trinidad and Tobago)
                      id: 56
                    - name: English (United States)
                      id: 57
                    - name: English (South Africa)
                      id: 58
                    - name: English (Zimbabwe)
                      id: 59
                    - name: Esperanto
                      id: 60
                    - name: Spanish
                      id: 61
                    - name: Spanish (Argentina)
                      id: 62
                    - name: Spanish (Bolivia)
                      id: 63
                    - name: Spanish (Chile)
                      id: 64
                    - name: Spanish (Colombia)
                      id: 65
                    - name: Spanish (Costa Rica)
                      id: 66
                    - name: Spanish (Dominican Republic)
                      id: 67
                    - name: Spanish (Ecuador)
                      id: 68
                    - name: Spanish (Spain)
                      id: 70
                    - name: Spanish (Guatemala)
                      id: 71
                    - name: Spanish (Honduras)
                      id: 72
                    - name: Spanish (Mexico)
                      id: 73
                    - name: Spanish (Nicaragua)
                      id: 74
                    - name: Spanish (Panama)
                      id: 75
                    - name: Spanish (Peru)
                      id: 76
                    - name: Spanish (Puerto Rico)
                      id: 77
                    - name: Spanish (Paraguay)
                      id: 78
                    - name: Spanish (El Salvador)
                      id: 79
                    - name: Spanish (Uruguay)
                      id: 80
                    - name: Spanish (Venezuela)
                      id: 81
                    - name: Estonian
                      id: 82
                    - name: Estonian (Estonia)
                      id: 83
                    - name: Basque
                      id: 84
                    - name: Basque (Spain)
                      id: 85
                    - name: Farsi
                      id: 86
                    - name: Farsi (Iran)
                      id: 87
                    - name: Finnish
                      id: 88
                    - name: Finnish (Finland)
                      id: 89
                    - name: Faroese
                      id: 90
                    - name: Faroese (Faroe Islands)
                      id: 91
                    - name: French
                      id: 92
                    - name: French (Belgium)
                      id: 93
                    - name: French (Canada)
                      id: 94
                    - name: French (Switzerland)
                      id: 95
                    - name: French (France)
                      id: 96
                    - name: French (Luxembourg)
                      id: 97
                    - name: French (Principality of Monaco)
                      id: 98
                    - name: Galician
                      id: 99
                    - name: Galician (Spain)
                      id: 100
                    - name: Gujarati
                      id: 101
                    - name: Gujarati (India)
                      id: 102
                    - name: Hebrew
                      id: 103
                    - name: Hebrew (Israel)
                      id: 104
                    - name: Hindi
                      id: 105
                    - name: Hindi (India)
                      id: 106
                    - name: Croatian
                      id: 107
                    - name: Croatian (Bosnia and Herzegovina)
                      id: 108
                    - name: Croatian (Croatia)
                      id: 109
                    - name: Hungarian
                      id: 110
                    - name: Hungarian (Hungary)
                      id: 111
                    - name: Armenian
                      id: 112
                    - name: Armenian (Armenia)
                      id: 113
                    - name: Indonesian
                      id: 114
                    - name: Indonesian (Indonesia)
                      id: 115
                    - name: Icelandic
                      id: 116
                    - name: Icelandic (Iceland)
                      id: 117
                    - name: Italiano
                      id: 118
                    - name: Italiano (Svizzera)
                      id: 119
                    - name: Italiano (Italia)
                      id: 120
                    - name: Japanese
                      id: 121
                    - name: Japanese (Japan)
                      id: 122
                    - name: Georgian
                      id: 123
                    - name: Georgian (Georgia)
                      id: 124
                    - name: Kazakh
                      id: 125
                    - name: Kazakh (Kazakhstan)
                      id: 126
                    - name: Kannada
                      id: 127
                    - name: Kannada (India)
                      id: 128
                    - name: Korean
                      id: 129
                    - name: Korean (Korea)
                      id: 130
                    - name: Konkani
                      id: 131
                    - name: Konkani (India)
                      id: 132
                    - name: Kyrgyz
                      id: 133
                    - name: Kyrgyz (Kyrgyzstan)
                      id: 134
                    - name: Lithuanian
                      id: 135
                    - name: Lithuanian (Lithuania)
                      id: 136
                    - name: Latvian
                      id: 137
                    - name: Latvian (Latvia)
                      id: 138
                    - name: Maori
                      id: 139
                    - name: Maori (New Zealand)
                      id: 140
                    - name: Macedonian
                      id: 141
                    - name: Mongolian
                      id: 143
                    - name: Mongolian (Mongolia)
                      id: 144
                    - name: Marathi
                      id: 145
                    - name: Marathi (India)
                      id: 146
                    - name: Malay
                      id: 147
                    - name: Malay (Brunei Darussalam)
                      id: 148
                    - name: Malay (Malaysia)
                      id: 149
                    - name: Maltese
                      id: 150
                    - name: Maltese (Malta)
                      id: 151
                    - name: Norwegian
                      id: 152
                    - name: Norwegian (Bokm?l) (Norway)
                      id: 153
                    - name: Dutch
                      id: 154
                    - name: Dutch (Belgium)
                      id: 155
                    - name: Dutch (Netherlands)
                      id: 156
                    - name: Norwegian (Nynorsk) (Norway)
                      id: 157
                    - name: Northern Sotho
                      id: 158
                    - name: Northern Sotho (South Africa)
                      id: 159
                    - name: Punjabi
                      id: 160
                    - name: Punjabi (India)
                      id: 161
                    - name: Polish
                      id: 162
                    - name: Polish (Poland)
                      id: 163
                    - name: Pashto
                      id: 164
                    - name: Pashto (Afghanistan)
                      id: 165
                    - name: Portuguese
                      id: 166
                    - name: Portuguese (Brazil)
                      id: 167
                    - name: Portuguese (Portugal)
                      id: 168
                    - name: Quechua
                      id: 169
                    - name: Quechua (Bolivia)
                      id: 170
                    - name: Quechua (Ecuador)
                      id: 171
                    - name: Quechua (Peru)
                      id: 172
                    - name: Romanian
                      id: 173
                    - name: Romanian (Romania)
                      id: 174
                    - name: Russian
                      id: 175
                    - name: Russian (Russia)
                      id: 176
                    - name: Sanskrit
                      id: 177
                    - name: Sanskrit (India)
                      id: 178
                    - name: Sami (Northern)
                      id: 179
                    - name: Sami (Finland)
                      id: 180
                    - name: Sami (Northern) (Norway)
                      id: 183
                    - name: Sami (Northern) (Sweden)
                      id: 186
                    - name: Slovak
                      id: 189
                    - name: Slovak (Slovakia)
                      id: 190
                    - name: Slovenian
                      id: 191
                    - name: Slovenian (Slovenia)
                      id: 192
                    - name: Albanian
                      id: 193
                    - name: Albanian (Albania)
                      id: 194
                    - name: Serbian (Bosnia and Herzegovina)
                      id: 195
                    - name: Serbian (Serbia and Montenegro)
                      id: 197
                    - name: Swedish
                      id: 199
                    - name: Swedish (Finland)
                      id: 200
                    - name: Swedish (Sweden)
                      id: 201
                    - name: Swahili
                      id: 202
                    - name: Swahili (Kenya)
                      id: 203
                    - name: Syriac
                      id: 204
                    - name: Syriac (Syria)
                      id: 205
                    - name: Tamil
                      id: 206
                    - name: Tamil (India)
                      id: 207
                    - name: Telugu
                      id: 208
                    - name: Telugu (India)
                      id: 209
                    - name: Thai
                      id: 210
                    - name: Thai (Thailand)
                      id: 211
                    - name: Tagalog
                      id: 212
                    - name: Tagalog (Philippines)
                      id: 213
                    - name: Tswana
                      id: 214
                    - name: Tswana (South Africa)
                      id: 215
                    - name: Turkish
                      id: 216
                    - name: Turkish (Turkey)
                      id: 217
                    - name: Tatar
                      id: 218
                    - name: Tatar (Russia)
                      id: 219
                    - name: Tsonga
                      id: 220
                    - name: Ukrainian
                      id: 221
                    - name: Ukrainian (Ukraine)
                      id: 222
                    - name: Urdu
                      id: 223
                    - name: Urdu (Islamic Republic of Pakistan)
                      id: 224
                    - name: Uzbek (Latin)
                      id: 225
                    - name: Uzbek (Uzbekistan)
                      id: 226
                    - name: Vietnamese
                      id: 228
                    - name: Vietnamese (Viet Nam)
                      id: 229
                    - name: Xhosa
                      id: 230
                    - name: Xhosa (South Africa)
                      id: 231
                    - name: Chinese
                      id: 232
                    - name: Chinese (S)
                      id: 233
                    - name: Chinese (Hong Kong)
                      id: 234
                    - name: Chinese (Macau)
                      id: 235
                    - name: Chinese (Singapore)
                      id: 236
                    - name: Chinese (T)
                      id: 237
                    - name: Zulu
                      id: 238
                    - name: Zulu (South Africa)
                      id: 239
                    - name: Filipino
                      id: 240
                    - name: Chinese Mandarin
                      id: 241
                    - name: Malayalam
                      id: 242
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-languages
      description: Get all languages
      parameters: []
      security:
        - JWT: []
  /levels:
    get:
      summary: Retrive levels definitions
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LevelDefinition'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-levels
      security:
        - JWT: []
      description: Get all levels
      parameters: []
    parameters: []
  /media:
    post:
      summary: ''
      operationId: post-media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    files:
                      - name: string
                        path: string
                    failed:
                      - name: string
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                      required:
                        - name
                        - path
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        errorCode:
                          type: string
                      required:
                        - name
                        - errorCode
                required:
                  - files
              examples: {}
      description: 'Send a media for my bug to AppQuality Bucket. '
      security:
        - JWT: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  oneOf:
                    - type: string
                      properties: {}
                      format: binary
                    - type: array
                      items:
                        type: string
                        format: binary
    parameters: []
    delete:
      summary: ''
      operationId: delete-media
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
              required:
                - url
  /payments:
    get:
      summary: Get all payments
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: number
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        created:
                          type: string
                          description: The timestamp (GMT) of the request creation
                        updated:
                          type: string
                          description: The timestamp (GMT) of the request last update
                        id:
                          type: number
                        amount:
                          type: object
                          required:
                            - value
                            - currency
                          properties:
                            value:
                              type: number
                            currency:
                              type: string
                        type:
                          type: string
                          enum:
                            - paypal
                            - transferwise
                        tryber:
                          type: object
                          required:
                            - id
                            - name
                            - surname
                          properties:
                            id:
                              type: number
                            name:
                              type: string
                            surname:
                              type: string
                        error:
                          type: string
                      required:
                        - created
                        - updated
                        - id
                        - amount
                        - type
                        - tryber
                required:
                  - size
                  - start
                  - items
              examples:
                example-1:
                  value:
                    limit: 3
                    size: 3
                    start: 2
                    total: 100
                    items:
                      - created: '1645096692'
                        updated: '1645096692'
                        id: 123
                        amount:
                          value: 100
                          currency: EUR
                        type: paypal
                        tryber:
                          id: 1
                          name: John
                          surname: Doe
                        error: INSUFFICIENT_FUNDS
                      - created: '1645096692'
                        updated: '1645096692'
                        id: 1
                        amount:
                          value: 100
                          currency: EUR
                        type: paypal
                        tryber:
                          id: 1
                          name: John
                          surname: Doe
                        error: GENERIC_ERROR
                      - created: '1645096692'
                        updated: '1645096692'
                        id: 12
                        amount:
                          value: 100
                          currency: EUR
                        type: transferwise
                        tryber:
                          id: 5
                          name: Pippo
                          surname: Franco
                        error: RECEIVER_UNREGISTERED
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: get-payments
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
            enum:
              - pending
              - failed
          in: query
          name: status
          description: The status of the payment
        - $ref: '#/components/parameters/order'
        - schema:
            type: string
            enum:
              - created
              - updated
              - id
          in: query
          name: orderBy
          description: The value to order by
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
    parameters: []
  '/payments/{paymentId}':
    parameters:
      - schema:
          type: string
        name: paymentId
        in: path
        required: true
    post:
      summary: Pay a request
      operationId: post-payments-paymentId
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    element: payments
                    id: 0
                    message:
                      code: GENERIC_ERROR
                      data: string
                properties:
                  element:
                    type: string
                    enum:
                      - payments
                  id:
                    type: number
                  message:
                    anyOf:
                      - type: object
                        properties:
                          code:
                            type: string
                            enum:
                              - GENERIC_ERROR
                          data:
                            type: string
                        required:
                          - code
                          - data
                      - type: string
                required:
                  - element
                  - id
                  - message
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  element:
                    type: string
                    enum:
                      - payments
                  id:
                    type: number
                  message:
                    type: object
                    required:
                      - code
                      - data
                    properties:
                      code:
                        type: string
                        enum:
                          - GENERIC_ERROR
                          - NO_FUNDS
                          - DUPLICATE_PAYMENT
                          - IBAN_NOT_VALID
                          - INSUFFICIENT_FUNDS
                          - RECEIVER_UNREGISTERED
                      data:
                        type: string
                required:
                  - element
                  - id
                  - message
              examples: {}
      description: ''
      security:
        - JWT: []
    delete:
      summary: Delete payment request from id
      operationId: delete-payments-paymentId
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: delete a specific payment request
      security:
        - JWT: []
  /phases:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        type:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                      required:
                        - id
                        - name
                        - type
                required:
                  - results
      operationId: get-phases
      security:
        - JWT: []
  /popups:
    get:
      summary: Get all popups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                x-examples:
                  example-1:
                    - id: string
                      profiles:
                        - 0
                      once: true
                      content: string
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: integer
                    - $ref: '#/components/schemas/Popup'
              examples:
                example-1:
                  value:
                    - id: 0
                      profiles:
                        - 0
                      once: true
                      content: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-popups
      security:
        - JWT: []
      tags:
        - Admin
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
      description: Retrieve all available popups for admin operations
    post:
      summary: Create a new popup
      operationId: post-popups
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Popup'
      tags:
        - Admin
      description: The new popup will be inserted as an available popup on admin areas
      security:
        - JWT: []
    parameters: []
  '/popups/{popup}':
    parameters:
      - schema:
          type: number
        name: popup
        in: path
        required: true
    get:
      summary: Get a single popup
      tags:
        - Admin
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: get-popups-popup
      security:
        - JWT: []
      description: Retrieve a signle popup for admin operations
    patch:
      summary: Update popup
      operationId: patch-popups-popup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                  - $ref: '#/components/schemas/Popup'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Popup'
      security:
        - JWT: []
      tags:
        - Admin
      description: Edit your popup with a new content or new rules
  /productTypes:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                required:
                  - results
              examples:
                Example 1:
                  value:
                    results:
                      - id: 1
                        name: Website / Webapp
                      - id: 2
                        name: Mobile App
                      - id: 100
                        name: Other
      operationId: get-productTypes
      description: ''
    parameters: []
  /users:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: get-users
      security:
        - JWT: []
      description: Get all users you have access to
    post:
      summary: Create a new user
      operationId: post-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                  - id
              examples:
                Example 1:
                  value:
                    id: 1111
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  Example 1:
                    message: Email bob.alice@example.com already registered
              examples:
                email-already-exist:
                  value:
                    message: Email bob.alice@example.com already registered
      description: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                country:
                  type: string
                birthDate:
                  type: string
                  format: date
                referral:
                  type: string
                  example: 555-1234
                  description: A referral code (formatted as TESTER_ID-CAMPAIGN_ID)
              required:
                - name
                - surname
                - email
                - password
                - country
                - birthDate
            examples:
              basic-user:
                value:
                  name: Elon
                  surname: Musk
                  email: elon.musk@tesla.com
                  password: Elon78
                  country: Italy
                  birthDate: '1971-06-28'
              basic-user-with-referral:
                value:
                  name: Elon
                  surname: Musk
                  email: elon.musk@tesla.com
                  password: Elon78
                  country: Italy
                  birthDate: '1971-06-28'
                  referral: 11111-1234
        description: ''
      tags:
        - User
  '/users/by-email/{email}':
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
    head:
      summary: Check user by email
      operationId: head-users-by-email-email
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: ''
  '/users/by-role/{role}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        surname:
                          type: string
                      required:
                        - id
                        - name
                        - surname
                required:
                  - results
      operationId: get-users-by-role-role
      security:
        - JWT: []
    parameters:
      - schema:
          type: string
          enum:
            - tester_lead
            - quality_leader
            - ux_researcher
            - assistants
        name: role
        in: path
        required: true
  /users/me:
    get:
      summary: Get your user data
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    username: string
                    name: string
                    surname: string
                    email: user@example.com
                    image: 'http://example.com'
                    id: 0
                    wp_user_id: 0
                    role: string
                    is_verified: true
                required:
                  - id
                properties:
                  username:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                  surname:
                    type: string
                    minLength: 1
                  email:
                    type: string
                    minLength: 1
                    format: email
                  image:
                    type: string
                    minLength: 1
                  id:
                    type: number
                  wp_user_id:
                    type: number
                  role:
                    type: string
                    minLength: 1
                  is_verified:
                    type: boolean
                  rank:
                    type: string
                  total_exp_pts:
                    type: number
                  booty:
                    type: object
                    required:
                      - gross
                    properties:
                      net:
                        $ref: '#/components/schemas/Currency'
                      gross:
                        $ref: '#/components/schemas/Currency'
                  pending_booty:
                    type: object
                    required:
                      - gross
                    properties:
                      net:
                        $ref: '#/components/schemas/Currency'
                      gross:
                        $ref: '#/components/schemas/Currency'
                  languages:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                  onboarding_completed:
                    type: boolean
                  additional:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalField'
                  gender:
                    $ref: '#/components/schemas/Gender'
                  birthDate:
                    type: string
                    format: date
                  phone:
                    type: string
                  education:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                  profession:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                  certifications:
                    oneOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/Certification'
                      - type: boolean
                  completionPercent:
                    type: number
                  country:
                    type: string
                  city:
                    type: string
                  attended_cp:
                    type: number
                  approved_bugs:
                    type: number
                  booty_threshold:
                    type: object
                    required:
                      - value
                      - isOver
                    properties:
                      value:
                        type: number
                      isOver:
                        type: boolean
              examples:
                booty_net:
                  value:
                    id: 0
                    role: string
                    pending_booty:
                      net:
                        value: 13.5
                        currency: EUR
                      gross:
                        value: 16
                        currency: EUR
                    booty_threshold:
                      value: 0
                      isOver: true
                dashboard_fields_net:
                  value:
                    id: 10951
                    total_exp_pts: 4165
                    pending_booty:
                      gross:
                        value: 157.5
                        currency: EUR
                      net:
                        value: 126
                        currency: EUR
                    booty:
                      gross:
                        value: 3.4
                        currency: EUR
                      net:
                        value: 3
                        currency: EUR
                    rank: '0'
                    approved_bugs: 38
                    attended_cp: 6
                    role: administrator
                dashboard_fields_gross_only:
                  value:
                    id: 10951
                    total_exp_pts: 4165
                    pending_booty:
                      gross:
                        value: 157.5
                        currency: EUR
                    booty:
                      gross:
                        value: 3.4
                        currency: EUR
                    rank: '0'
                    approved_bugs: 38
                    attended_cp: 6
                    role: administrator
                booty_gross:
                  value:
                    id: 0
                    role: string
                    pending_booty:
                      gross:
                        value: 13.5
                        currency: EUR
                    booty_threshold:
                      value: 0
                      isOver: true
                user subscriber onboarding complete:
                  value:
                    id: 11110
                    name: Name
                    surname: Surname
                    email: name.surname@mail.com
                    wp_user_id: 11111
                    onboarding_completed: true
                    image: 'https://secure.gravatar.com/avatar/087ada6e86cf8ec31a49217dd05b7151?s=132&d=https%3A%2F%2Feu.ui-avatars.com%2Fapi%2Fi%2Bl%2F132&r=x'
                    role: subscriber
                Example 1:
                  value:
                    username: string
                    name: string
                    surname: string
                    email: user@example.com
                    image: string
                    id: 0
                    wp_user_id: 0
                    role: string
                    is_verified: true
                    rank: string
                    total_exp_pts: 0
                    booty:
                      net:
                        value: 10
                        currency: EUR
                      gross:
                        value: 13.5
                        currency: EUR
                    pending_booty:
                      net:
                        value: 10
                        currency: EUR
                      gross:
                        value: 13.5
                        currency: EUR
                    languages:
                      - id: 46
                        name: English
                      - id: 61
                        name: Spanish
                      - id: 120
                        name: Italiano (Italia)
                    onboarding_completed: true
                    additional:
                      - field_id: 0
                        name: string
                        value: string
                        text: string
                        is_candidate: true
                    gender: male
                    birthDate: '2019-08-24'
                    phone: '11000000000'
                    education:
                      id: 0
                      name: string
                    profession:
                      id: 0
                      name: string
                    certifications:
                      - id: 0
                        name: string
                        area: string
                        institute: string
                        achievement_date: '2019-08-24'
                    completionPercent: 0
                    country: Italy
                    city: Cremona
                    attended_cp: 0
                    approved_bugs: 0
                    booty_threshold:
                      value: 0
                      isOver: true
                role admin:
                  value:
                    username: string
                    name: string
                    surname: string
                    email: user@example.com
                    image: string
                    id: 0
                    wp_user_id: 0
                    role: string
                    is_verified: true
                    rank: string
                    total_exp_pts: 0
                    booty:
                      net:
                        value: 0
                        currency: string
                      gross:
                        value: 0
                        currency: string
                    pending_booty:
                      net:
                        value: 0
                        currency: string
                      gross:
                        value: 0
                        currency: string
                    languages:
                      - id: 0
                        name: string
                    onboarding_completed: true
                    additional:
                      - field_id: 0
                        name: string
                        value: string
                        text: string
                        is_candidate: true
                    gender: male
                    birthDate: '2019-08-24'
                    phone: string
                    education:
                      id: 0
                      name: string
                    profession:
                      id: 0
                      name: string
                    certifications:
                      - id: 0
                        name: string
                        area: string
                        institute: string
                        achievement_date: '2019-08-24'
                    completionPercent: 0
                    country: string
                    city: string
                    attended_cp: 0
                    approved_bugs: 0
                    booty_threshold:
                      value: 0
                      isOver: true
      operationId: get-users-me
      description: Get your user data
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: fields
          description: Comma separated string of specific fields requested
    put:
      summary: Edit your user data
      operationId: put-users-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: Edit your user data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                password:
                  type: string
                email:
                  type: string
      security:
        - JWT: []
      tags:
        - User
    patch:
      summary: Edit a field of your user
      operationId: patch-users-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    username: string
                    name: string
                    surname: string
                    email: string
                    image: string
                    id: 0
                    wp_user_id: 0
                    role: string
                    is_verified: true
                    rank: string
                    total_exp_pts: 0
                    booty: 0
                    pending_booty: 0
                    languages:
                      - id: 0
                        name: string
                    onboarding_completed: true
                    additional:
                      - field_id: 0
                        name: string
                        value: string
                        text: string
                        is_candidate: true
                    gender: male
                    birthDate: '2019-08-24'
                    phone: string
                    education:
                      id: 0
                      name: string
                    profession:
                      id: 0
                      name: string
                    certifications:
                      - id: 0
                        name: string
                        area: string
                        institute: string
                        achievement_date: '2019-08-24'
                    completionPercent: 0
                    country: string
                    city: string
                    attended_cp: 0
                    approved_bugs: 0
                properties:
                  username:
                    type: string
                  name:
                    type: string
                  surname:
                    type: string
                  email:
                    type: string
                  image:
                    type: string
                  id:
                    type: number
                  wp_user_id:
                    type: number
                  role:
                    type: string
                  is_verified:
                    type: boolean
                  rank:
                    type: string
                  total_exp_pts:
                    type: number
                  booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  pending_booty:
                    type: object
                    properties:
                      gross:
                        $ref: '#/components/schemas/Currency'
                      net:
                        $ref: '#/components/schemas/Currency'
                    required:
                      - gross
                  languages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                  onboarding_completed:
                    type: boolean
                  additional:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalField'
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                      - not-specified
                      - other
                  birthDate:
                    type: string
                    format: date
                  phone:
                    type: string
                  education:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  profession:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                  certifications:
                    oneOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/Certification'
                      - type: boolean
                  completionPercent:
                    type: number
                  country:
                    type: string
                  city:
                    type: string
                  attended_cp:
                    type: number
                  approved_bugs:
                    type: number
                required:
                  - id
              examples:
                Example 1:
                  value:
                    username: string
                    name: string
                    surname: string
                    email: user@example.com
                    image: string
                    id: 0
                    wp_user_id: 0
                    role: string
                    is_verified: true
                    rank: string
                    total_exp_pts: 0
                    booty:
                      net:
                        value: 10
                        currency: EUR
                      gross:
                        value: 13.5
                        currency: EUR
                    pending_booty:
                      net:
                        value: 10
                        currency: EUR
                      gross:
                        value: 13.5
                        currency: EUR
                    languages:
                      - id: 46
                        name: English
                      - id: 61
                        name: Spanish
                      - id: 120
                        name: Italiano (Italia)
                    onboarding_completed: true
                    additional:
                      - field_id: 0
                        name: string
                        value: string
                        text: string
                        is_candidate: true
                    gender: male
                    birthDate: '2019-08-24'
                    phone: '11000000000'
                    education:
                      id: 0
                      name: string
                    profession:
                      id: 0
                      name: string
                    certifications:
                      - id: 0
                        name: string
                        area: string
                        institute: string
                        achievement_date: '2019-08-24'
                    completionPercent: 0
                    country: Italy
                    city: Cremona
                    attended_cp: 0
                    approved_bugs: 0
                    booty_threshold:
                      value: 0
                      isOver: true
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  username: string
                  name: string
                  surname: string
                  email: string
                  image: string
                  id: 0
                  wp_user_id: 0
                  role: string
                  onboarding_completed: true
                  is_verified: true
                  rank: string
                  total_exp_pts: 0
                  booty: 0
                  pending_booty: 0
                  languages:
                    - string
                  additional:
                    - {}
                  gender: string
                  birthDate: '2019-08-24'
                  phone: string
                  education: string
                  profession: string
                  certifications:
                    - name: string
                      area: string
                      institute: string
                      achievement_date: '2019-08-24'
                  completionPercent: 0
                  country: string
                  city: string
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                onboarding_completed:
                  type: boolean
                surname:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - not-specified
                    - other
                birthDate:
                  type: string
                phone:
                  type: string
                education:
                  type: integer
                profession:
                  type: integer
                country:
                  type: string
                city:
                  type: string
                password:
                  type: string
                oldPassword:
                  type: string
            examples:
              example-1:
                value:
                  onboarding_completed: true
      tags:
        - User
      description: Edit basic user fields
    delete:
      summary: Delete your user
      operationId: delete-users-me
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
              required:
                - reason
      security:
        - JWT: []
      tags:
        - User
  '/users/me/additionals/{fieldId}':
    parameters:
      - schema:
          type: integer
        name: fieldId
        in: path
        required: true
        description: The id of the field to edit
    put:
      summary: Edit your custom user fields
      operationId: put-users-me-additionals-fieldId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                x-examples:
                  example-1:
                    - field_id: 23
                      name: Linkedin Profile
                      value: 'https://www.linkedin.com/in/gianpaolosinatra/'
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/AdditionalField'
                  - $ref: '#/components/schemas/AdditionalField'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                      is_candidate:
                        type: boolean
                    required:
                      - value
                - type: object
                  properties:
                    value:
                      type: string
                    is_candidate:
                      type: boolean
                  required:
                    - value
      security:
        - JWT: []
      tags:
        - User
      description: The field data will be replaced with your new data
  /users/me/bugs:
    get:
      summary: Get your uploaded bugs
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                        - $ref: '#/components/schemas/Bug'
                  limit:
                    type: integer
                  size:
                    type: integer
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - results
              examples:
                minimal-example:
                  value:
                    results:
                      - id: 1
                        severity:
                          id: 1
                          name: LOW
                        status:
                          id: 1
                          name: Refused
                        campaign:
                          name: UX test for a selfdrive service
                          id: 1
                        title: Self drive system crashing
                    limit: 5
                    size: 1
                    start: 10
                    total: 100
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-bugs
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
        - schema:
            type: string
            enum:
              - title
              - campaign
              - status
              - id
              - severity
          in: query
          name: orderBy
          description: The field for item order
        - $ref: '#/components/parameters/order'
      description: 'Get all the bugs that you uploaded to AppQuality. '
    parameters: []
  /users/me/campaigns:
    get:
      summary: GET user campaign
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                        - $ref: '#/components/schemas/Campaign'
                  limit:
                    type: integer
                  size:
                    type: integer
                  start:
                    type: integer
                  total:
                    type: integer
              examples: {}
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-users-me-campaigns
      description: |-
        get available, and selected campaigns for a single user.
        filterBy[accepted] = 1 retrieve accepted campaign only, otherwise retrieve available campaign.
        filterBy[completed] = 1 get completed campaigns only (end date in the past)
        filterBy[completed] = 0 get not completed campaigns only (end date today or in the future)
        filterBy[statusID] = 1 get open campaigns
        filterBy[statusID] = 2 get closed campaigns
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/order'
        - schema:
            type: string
            enum:
              - name
              - start_date
              - end_date
              - close_date
              - visibility
          in: query
          name: orderBy
          description: The field for item order
  '/users/me/campaigns/{campaignId}':
    parameters:
      - schema:
          type: string
        name: campaignId
        in: path
        required: true
    get:
      summary: Get the data for a campaign you are selected in
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  language:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                    required:
                      - code
                      - message
                  titleRule:
                    type: boolean
                  minimumMedia:
                    type: integer
                  useCases:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                        - id
                        - name
                  additionalFields:
                    type: array
                    items:
                      $ref: '#/components/schemas/CampaignAdditionalField'
                  bugTypes:
                    type: object
                    required:
                      - valid
                      - invalid
                    properties:
                      valid:
                        type: array
                        items:
                          type: string
                      invalid:
                        type: array
                        items:
                          type: string
                  bugSeverity:
                    type: object
                    required:
                      - valid
                      - invalid
                    properties:
                      valid:
                        type: array
                        items:
                          type: string
                      invalid:
                        type: array
                        items:
                          type: string
                  bugReplicability:
                    type: object
                    required:
                      - valid
                      - invalid
                    properties:
                      valid:
                        type: array
                        items:
                          type: string
                      invalid:
                        type: array
                        items:
                          type: string
                  hasBugForm:
                    type: boolean
                  devices:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                        - $ref: '#/components/schemas/UserDevice'
                  validFileExtensions:
                    type: array
                    items:
                      type: string
                required:
                  - id
                  - title
                  - minimumMedia
                  - useCases
                  - bugTypes
                  - bugSeverity
                  - bugReplicability
                  - hasBugForm
                  - validFileExtensions
              examples:
                full:
                  value:
                    id: 123
                    title: My campaign
                    language:
                      code: IT
                      message: In questa campagna vanno caricati i bug in italiano
                    titleRule: true
                    minimumMedia: 3
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    additionalFields:
                      - name: Browser Used
                        slug: browser-used
                        type: select
                        options:
                          - Chrome
                          - Safari
                        error: You have to select a browser
                      - name: Codice Cliente
                        slug: codice-cliente
                        type: text
                        regex: '[A-Z]{3}[0-9]{4}'
                        error: Il codice cliente è obbligatorio nel formato AAA1234
                    bugTypes:
                      valid:
                        - CRASH
                        - TYPO
                      invalid:
                        - PERFORMANCE
                    bugSeverity:
                      valid:
                        - LOW
                        - MEDIUM
                      invalid:
                        - HIGH
                        - CRITICAL
                    bugReplicability:
                      valid:
                        - ALWAYS
                        - SOMETIMES
                      invalid:
                        - ONCE
                    hasBugForm: true
                    devices:
                      - id: 1
                        type: Smartphone
                        device:
                          manufacturer: Apple
                          model: iPhone X
                          id: 123
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 12
                      - id: 2
                        type: Smartphone
                        device:
                          manufacturer: Apple
                          model: iPhone 6
                          id: 123
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 10
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                with-bugform-disabled:
                  value:
                    id: 123
                    title: My campaign
                    titleRule: true
                    minimumMedia: 3
                    useCases: []
                    bugTypes:
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                      invalid: []
                    bugSeverity:
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                      invalid: []
                    bugReplicability:
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                      invalid: []
                    hasBugForm: false
                    devices: []
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                with-only-one-device:
                  value:
                    id: 123
                    title: My campaign
                    titleRule: true
                    minimumMedia: 3
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    bugTypes:
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                      invalid: []
                    bugSeverity:
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                      invalid: []
                    bugReplicability:
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                      invalid: []
                    hasBugForm: true
                    devices:
                      - id: 1
                        type: Smartphone
                        device:
                          manufacturer: Apple
                          model: iPhone X
                          id: 123
                        operating_system:
                          id: 234
                          platform: Apple
                          version: iOs 12
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
                without-device:
                  value:
                    id: 123
                    title: My campaign
                    titleRule: true
                    minimumMedia: 3
                    useCases:
                      - id: 0
                        name: Not a specific Use Case
                      - id: 4123
                        name: Use case 1 - Signup
                    bugTypes:
                      valid:
                        - CRASH
                        - TYPO
                        - PERFORMANCE
                      invalid: []
                    bugSeverity:
                      valid:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                      invalid: []
                    bugReplicability:
                      valid:
                        - ALWAYS
                        - SOMETIMES
                        - ONCE
                      invalid: []
                    hasBugForm: true
                    validFileExtensions:
                      - jpg
                      - png
                      - mov
                      - mp4
      operationId: get-users-me-campaigns-campaignId
      description: ''
      security:
        - JWT: []
        - User Token: []
  '/users/me/campaigns/{campaign}/compatible_devices':
    parameters:
      - name: campaign
        in: path
        required: true
        schema:
          type: string
        description: A campaign id
    get:
      summary: Get the user devices for a campaign you are selected in
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDevice'
              examples:
                example-1:
                  value: []
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-campaigns-campaignId-compatible-devices
      description: ''
      security:
        - JWT: []
  '/users/me/campaigns/{campaignId}/bugs':
    post:
      summary: POST a user bug on a specific campaign
      operationId: post-users-me-campaigns-campaign-bugs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: ''
                    testerId: 1
                    title: ''
                    status: ''
                    description: ''
                    expected: ''
                    current: ''
                    severity: ''
                    replicability: ''
                    type: ''
                    notes: ''
                    usecase: ''
                    device: {}
                    media:
                      - ''
                      - ''
                    additional:
                      - name: ''
                        value: ''
                properties:
                  id:
                    type: number
                  internalId:
                    type: string
                  testerId:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - REFUSED
                      - NEED-REVIEW
                  expected:
                    type: string
                  current:
                    type: string
                  severity:
                    type: string
                    enum:
                      - LOW
                      - MEDIUM
                      - HIGH
                      - CRITICAL
                  replicability:
                    type: string
                    enum:
                      - ONCE
                      - SOMETIMES
                      - ALWAYS
                  type:
                    type: string
                  notes:
                    type: string
                  usecase:
                    type: string
                  device:
                    $ref: '#/components/schemas/UserDevice'
                  media:
                    type: array
                    items:
                      type: string
                  additional:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                        value:
                          type: string
                      required:
                        - slug
                        - value
                required:
                  - id
                  - testerId
                  - title
                  - description
                  - status
                  - expected
                  - current
                  - severity
                  - replicability
                  - type
                  - notes
                  - usecase
                  - device
                  - media
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Send a user bug on a specific campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  title: ''
                  description: ''
                  expected: ''
                  current: ''
                  severity: LOW
                  replicability: ONCE
                  type: TYPO
                  notes: ''
                  usecase: 1
                  device: 1
                  media:
                    - ''
                    - ''
                  additional:
                    - name: ''
                      value: ''
              properties:
                title:
                  type: string
                description:
                  type: string
                expected:
                  type: string
                current:
                  type: string
                severity:
                  type: string
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - CRITICAL
                replicability:
                  type: string
                  enum:
                    - ONCE
                    - SOMETIMES
                    - ALWAYS
                type:
                  type: string
                notes:
                  type: string
                lastSeen:
                  type: string
                usecase:
                  type: integer
                device:
                  type: integer
                media:
                  type: array
                  items:
                    type: string
                additional:
                  type: array
                  items:
                    type: object
                    properties:
                      slug:
                        type: string
                      value:
                        type: string
                    required:
                      - slug
                      - value
              required:
                - title
                - description
                - expected
                - current
                - severity
                - replicability
                - type
                - notes
                - lastSeen
                - usecase
                - device
                - media
      security:
        - JWT: []
        - User Token: []
    parameters:
      - schema:
          type: string
        name: campaignId
        in: path
        required: true
        description: the campaign id
  '/users/me/campaigns/{campaignId}/devices':
    parameters:
      - schema:
          type: string
        name: campaignId
        in: path
        required: true
    get:
      summary: Get the device available for this campaign
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDevice'
              examples:
                single-device:
                  value:
                    - type: PC
                      id: 1
                      device:
                        pc_type: Desktop
                      operating_system:
                        id: 781
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.5)
                multiple-devices:
                  value:
                    - type: Smartphone
                      id: 28440
                      device:
                        manufacturer: Airo Wireless
                        model: A25is
                        id: 5333
                      operating_system:
                        id: 729
                        platform: Windows Mobile Professional
                        version: Windows Mobile 6.5 (6.5)
                    - type: PC
                      id: 27723
                      device:
                        pc_type: Desktop
                      operating_system:
                        id: 781
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.5)
                    - type: PC
                      id: 28438
                      device:
                        pc_type: Desktop
                      operating_system:
                        id: 792
                        platform: MacOS
                        version: Mac OS X 10.15 (Catalina) (10.15.6)
                    - type: PC
                      id: 27721
                      device:
                        pc_type: Notebook
                      operating_system:
                        id: 772
                        platform: Windows
                        version: Windows 10 November 2019 Update (18363.778)
                    - type: PC
                      id: 27722
                      device:
                        pc_type: Ultrabook
                      operating_system:
                        id: 771
                        platform: Windows
                        version: Windows 10 May 2019 Update (18362)
                    - type: Smart-tv
                      id: 28439
                      device:
                        manufacturer: Bang & Olufsen
                        model: BeoVision 11 40"
                        id: 47400
                      operating_system:
                        id: 822
                        platform: Fire TV
                        version: Fire OS 7 (7)
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-campaigns-campaignId-devices
      security:
        - JWT: []
        - User Token: []
  '/users/me/campaigns/{campaignId}/forms':
    parameters:
      - schema:
          type: string
        name: campaignId
        in: path
        required: true
    get:
      summary: Get the preselection form for your campaign
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - properties:
                        question:
                          type: string
                        short_name:
                          type: string
                        value:
                          oneOf:
                            - type: integer
                            - type: object
                              properties:
                                city:
                                  type: string
                                country:
                                  type: string
                            - type: array
                              items:
                                type: integer
                            - type: string
                        validation:
                          type: object
                          properties:
                            regex:
                              type: string
                            error:
                              type: string
                          required:
                            - regex
                        id:
                          type: number
                      required:
                        - question
                        - id
                    - x-stoplight:
                        id: 76ya1n62vrxoj
                      oneOf:
                        - properties:
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionSimple'
                          required:
                            - type
                        - x-stoplight:
                            id: age6qie67x6dt
                          properties:
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionMultiple'
                            options:
                              type: array
                              items:
                                type: string
                          required:
                            - type
                            - options
                        - x-stoplight:
                            id: v6nzvavd1bbnh
                          properties:
                            type:
                              $ref: '#/components/schemas/PreselectionQuestionCuf'
                            options:
                              type: array
                              items:
                                type: number
                          required:
                            - type
                  type: object
              examples:
                example-1:
                  value:
                    - id: 1
                      question: Come si chiama il tuo cane?
                      type: text
                    - id: 2
                      question: Il tuo cane si chiama pippo?
                      type: radio
                      options:
                        - Sì
                        - 'No'
                    - id: 3
                      question: Di che razza è il tuo cane?
                      type: select
                      options:
                        - ALANO TIGRATO
                        - ALASKAN MALAMUTE
                        - ALPENLAENDISCHE DACHSBRACKE
                        - AMSTAFF
                    - id: 4
                      question: Che vaccinazioni ha fatto il tuo cane?
                      type: multiselect
                      options:
                        - Cimurro
                        - Parvovirus
                        - Adenovirus
                    - id: 5
                      question: Con quali banche hai un conto?
                      type: cuf_22
                      options:
                        - 1
                        - 2
                        - 3
                        - 4
                      value:
                        - 3
                        - 4
                    - id: 6
                      question: Scrivi il tuo username telegram
                      type: cuf_15
                      value: '@pippo'
                      validation:
                        regex: '^@[a-zA-Z]*$'
                        error: 'Inserire l''utente telegram in questo formato: @pippo'
                    - id: 7
                      question: Con che genere ti identifichi?
                      type: gender
                      value: male
                    - id: 8
                      question: Qual è il tuo numero di telefono
                      type: phone_number
                      value: '+33123456789'
                      validation:
                        regex: '^\+?[0-9]{12,14}$'
                    - id: 9
                      question: Dove abiti?
                      type: address
                      value:
                        city: Pesaro
                        country: Italy
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-campaign-campaignId-forms
      security:
        - JWT: []
    post:
      summary: ''
      operationId: post-users-me-campaigns-campaignId-forms
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: object
                        properties:
                          id:
                            oneOf:
                              - type: integer
                              - type: array
                                items:
                                  type: integer
                          serialized:
                            oneOf:
                              - type: string
                              - type: array
                                items:
                                  type: string
                              - type: object
                                properties:
                                  city:
                                    type: string
                                  country:
                                    type: string
                                required:
                                  - city
                                  - country
                      question:
                        type: number
                    required:
                      - value
                      - question
                device:
                  type: array
                  items:
                    type: integer
            examples:
              example-1:
                value:
                  form:
                    - question: 1
                      value:
                        serialized: Pippo
                    - question: 2
                      value:
                        serialized: Sì
                    - question: 3
                      value:
                        serialized: ALANO TIGRATO
                    - question: 4
                      value:
                        serialized:
                          - Cimurro
                          - Parvovirus
                    - question: 5
                      value:
                        id:
                          - 1
                          - 3
                        serialized:
                          - Banca 1
                          - Banca 3
                    - question: 6
                      value:
                        serialized: '@franco'
                    - question: 7
                      value:
                        serialized: female
                    - question: 8
                      value:
                        serialized: '+33233456789'
                    - question: 9
                      value:
                        serialized:
                          city: Roma
                          country: Italy
                  device:
                    - 123
      security:
        - JWT: []
      description: ''
  '/users/me/campaigns/{campaignId}/media':
    parameters:
      - schema:
          type: string
        name: campaignId
        in: path
        required: true
    post:
      summary: Upload media for a bug
      operationId: post-users-me-campaigns-campaignId-media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                      required:
                        - name
                        - path
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        errorCode:
                          type: string
                          enum:
                            - FILE_TOO_BIG
                            - INVALID_FILE_EXTENSION
                            - GENERIC_ERROR
                      required:
                        - name
                        - errorCode
      security:
        - JWT: []
        - User Token: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  oneOf:
                    - type: string
                      properties: {}
                    - type: array
                      items:
                        type: string
  /users/me/certifications:
    post:
      summary: Add one certification to your profile
      operationId: post-users-me-certifications
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                x-examples:
                  example-1:
                    name: string
                    area: string
                    institute: string
                    achievement_date: '2019-08-24'
                oneOf:
                  - $ref: '#/components/schemas/Certification'
                  - type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
              examples: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    certifications:
                      type: boolean
                  required:
                    - certifications
                - properties:
                    certification_id:
                      type: integer
                    achievement_date:
                      type: string
                      format: date
                  required:
                    - certification_id
                    - achievement_date
              type: object
      tags:
        - User
      description: Add one certification to your profile
  '/users/me/certifications/{certificationId}':
    parameters:
      - schema:
          type: integer
        name: certificationId
        in: path
        required: true
        description: The id of the certification
    delete:
      summary: Remove a certification from your profile
      operationId: delete-users-me-certifications-certificationId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      description: The certification will be removed
      tags:
        - User
  /users/me/devices:
    get:
      summary: Get all your devices
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: number
                    - $ref: '#/components/schemas/UserDevice'
                    - type: object
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-devices
      security:
        - JWT: []
      description: Get all your device data
    post:
      summary: Add a new device to your user
      operationId: post-users-me-devices
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        type: number
                    type: object
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      description: Add a new device to your user
      tags:
        - User
        - Devices
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  oneOf:
                    - type: integer
                      properties: {}
                    - type: string
                      properties: {}
                      enum:
                        - Notebook
                        - Desktop
                        - Ultrabook
                        - Gaming PC
                        - Tablet PC / Hybrid
                operating_system:
                  type: integer
              required:
                - device
                - operating_system
        description: ''
  '/users/me/devices/{deviceId}':
    parameters:
      - schema:
          type: number
        name: deviceId
        in: path
        required: true
    get:
      summary: Get one of your devices
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: number
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-devices-deviceId
      security:
        - JWT: []
      description: Retrieve a single device
    patch:
      summary: Edit one of your devices
      operationId: patch-users-me-devices-deviceId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: number
                  - $ref: '#/components/schemas/UserDevice'
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: number
                  - $ref: '#/components/schemas/UserDevice'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operating_system:
                  type: integer
              required:
                - operating_system
      security:
        - JWT: []
      tags:
        - Devices
        - User
      description: You can change only operating system version
    delete:
      summary: Remove one of your devices
      operationId: delete-users-me-devices-deviceId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - Devices
        - User
      description: The device will be disabled and won't be available for selections and bugs submission. You can't remove a device currently involved in a campaign
  /users/me/experience:
    get:
      summary: Get your experience points
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    results:
                      - id: 1
                        severity:
                          id: 1
                          name: LOW
                        status:
                          id: 1
                          name: Refused
                        campaign:
                          name: UX test for a selfdrive service
                          id: 1
                        title: Self drive system crashing
                    limit: 5
                    size: 1
                    start: 10
                    total: 100
                properties:
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        activity:
                          type: object
                          required:
                            - id
                          properties:
                            id:
                              type: integer
                        campaign:
                          type: object
                          required:
                            - id
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                        date:
                          type: string
                          format: date
                        amount:
                          type: integer
                        note:
                          type: string
                      required:
                        - id
                        - activity
                        - campaign
                        - date
                        - amount
                  limit:
                    type: number
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                    description: The total number of experience entries
                  sum:
                    type: number
                    description: The total sum of experience
                required:
                  - results
                  - sum
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-experience
      description: 'Get all the experience points earned in AppQuality. '
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/filterBy'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/searchBy'
        - $ref: '#/components/parameters/search'
        - schema:
            type: string
            enum:
              - amount
              - campaign
              - date
              - note
              - activity
              - id
          in: query
          name: orderBy
          description: The field for item order
  /users/me/fiscal:
    get:
      summary: Get Fiscal Data
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    address:
                      country: string
                      province: string
                      city: string
                      street: string
                      cityCode: string
                    type: withholding
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: OK
                    gender: string
                properties:
                  address:
                    type: object
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                    properties:
                      country:
                        type: string
                      province:
                        type: string
                      city:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                      cityCode:
                        type: string
                  type:
                    oneOf:
                      - $ref: '#/components/schemas/FiscalType'
                      - enum:
                          - internal
                        type: string
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                required:
                  - address
                  - type
                  - birthPlace
                  - fiscalId
                  - fiscalStatus
                  - gender
              examples:
                non_italian:
                  value:
                    address:
                      country: IQ
                      province: Erbil
                      city: Arbil
                      street: Via Zara
                      streetNumber: '18'
                      cityCode: '61122'
                    type: non-italian
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                internal:
                  value:
                    address:
                      country: IQ
                      province: Erbil
                      city: Arbil
                      street: Via Zara
                      streetNumber: '18'
                      cityCode: '61122'
                    type: internal
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                company:
                  value:
                    address:
                      country: IQ
                      province: Erbil
                      city: Arbil
                      street: Via Zara
                      streetNumber: '18'
                      cityCode: '61122'
                    type: company
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                vat:
                  value:
                    address:
                      country: IQ
                      province: Erbil
                      city: Arbil
                      street: Via Zara
                      streetNumber: '18'
                      cityCode: '61122'
                    type: vat
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
                witholding-extra:
                  value:
                    address:
                      country: IQ
                      province: Erbil
                      city: Arbil
                      street: Via Zara
                      streetNumber: '18'
                      cityCode: '61122'
                    type: witholding-extra
                    birthPlace:
                      city: Pesaro
                      province: PU
                    fiscalId: GMMLSN96C21G479C
                    fiscalStatus: Verified
                    gender: male
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-fiscal
      security:
        - JWT: []
      description: Get your fiscal profile data
    post:
      summary: Create a new fiscal profile
      operationId: post-users-me-fiscal
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    address:
                      country: string
                      province: string
                      city: string
                      street: string
                      cityCode: string
                    type: withholding
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: Male
                properties:
                  address:
                    type: object
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                    properties:
                      country:
                        type: string
                      province:
                        type: string
                      city:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                      cityCode:
                        type: string
                  type:
                    $ref: '#/components/schemas/FiscalType'
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                required:
                  - address
                  - type
                  - fiscalId
                  - fiscalStatus
                  - gender
              examples:
                example-1:
                  value:
                    address:
                      country: string
                      province: string
                      city: string
                      street: string
                      cityCode: string
                    type: withholding
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: male
        '401':
          $ref: '#/components/responses/NotAuthorized'
      description: Create a new fiscal data entry from empty state
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  address:
                    country: string
                    province: string
                    city: string
                    street: string
                    cityCode: string
                  type: withholding
                  birthCity: string
                  fiscalId: string
                  fiscalStatus: Verified
                  gender: Male
              properties:
                address:
                  type: object
                  required:
                    - country
                    - province
                    - city
                    - street
                    - streetNumber
                    - cityCode
                  properties:
                    country:
                      type: string
                    province:
                      type: string
                    city:
                      type: string
                    street:
                      type: string
                    streetNumber:
                      type: string
                    cityCode:
                      type: string
                type:
                  $ref: '#/components/schemas/FiscalType'
                birthPlace:
                  $ref: '#/components/schemas/FiscalBirthCity'
                fiscalId:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
              required:
                - address
                - type
                - fiscalId
                - gender
            examples: {}
      tags:
        - User
    put:
      summary: Edit your fiscal profile
      operationId: put-users-me-fiscal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    address:
                      country: string
                      province: string
                      city: string
                      street: string
                      cityCode: string
                    type: withholding
                    birthCity: string
                    fiscalId: string
                    fiscalStatus: Verified
                    gender: Male
                properties:
                  address:
                    type: object
                    required:
                      - country
                      - province
                      - city
                      - street
                      - cityCode
                    properties:
                      country:
                        type: string
                      province:
                        type: string
                      city:
                        type: string
                      street:
                        type: string
                      streetNumber:
                        type: string
                      cityCode:
                        type: string
                  type:
                    $ref: '#/components/schemas/FiscalType'
                  birthPlace:
                    type: object
                    properties:
                      city:
                        type: string
                      province:
                        type: string
                  fiscalId:
                    type: string
                  fiscalStatus:
                    type: string
                    enum:
                      - Verified
                      - Unverified
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                required:
                  - address
                  - type
                  - fiscalId
                  - fiscalStatus
                  - gender
        '401':
          $ref: '#/components/responses/NotAuthorized'
      description: Update your fiscal data
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  address:
                    country: string
                    province: string
                    city: string
                    street: string
                    cityCode: string
                  type: withholding
                  birthCity: string
                  fiscalId: string
                  fiscalStatus: Verified
                  gender: Male
              properties:
                address:
                  type: object
                  required:
                    - country
                    - province
                    - city
                    - street
                    - streetNumber
                    - cityCode
                  properties:
                    country:
                      type: string
                    province:
                      type: string
                    city:
                      type: string
                    street:
                      type: string
                    streetNumber:
                      type: string
                    cityCode:
                      type: string
                type:
                  $ref: '#/components/schemas/FiscalType'
                birthPlace:
                  $ref: '#/components/schemas/FiscalBirthCity'
                fiscalId:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
              required:
                - address
                - type
                - fiscalId
                - gender
      tags:
        - User
  /users/me/languages:
    post:
      summary: Add one language to your profile
      operationId: post-users-me-languages
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
              examples: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language_name:
                  type: string
      tags:
        - User
      description: Add one of the languages to your profile
    put:
      summary: Update your languages
      operationId: put-users-me-languages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            examples:
              Example 1:
                value:
                  - '46'
                  - '61'
                  - '120'
      description: Edit your spoken languages
      security:
        - JWT: []
      tags:
        - User
  '/users/me/languages/{languageId}':
    parameters:
      - schema:
          type: integer
        name: languageId
        in: path
        required: true
        description: The id of the language
    delete:
      summary: Remove one of your languages
      operationId: delete-users-me-languages-languageId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - JWT: []
      tags:
        - User
      description: The language will be removed from your profile
  /users/me/payments:
    get:
      summary: Get all your payments
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            status:
                              type: string
                              enum:
                                - paid
                                - processing
                            amount:
                              type: object
                              required:
                                - net
                                - gross
                              properties:
                                net:
                                  $ref: '#/components/schemas/Currency'
                                gross:
                                  $ref: '#/components/schemas/Currency'
                            paidDate:
                              oneOf:
                                - format: date
                                - enum:
                                    - '-'
                              type: string
                            method:
                              type: object
                              required:
                                - type
                                - note
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - paypal
                                    - iban
                                note:
                                  type: string
                            receipt:
                              type: string
                              format: uri-reference
                          required:
                            - status
                            - amount
                            - paidDate
                            - method
                      type: object
                  limit:
                    type: number
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - size
                  - start
              examples:
                single-paid-payment:
                  value:
                    results:
                      - id: 1
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                    limit: 10
                    size: 1
                    start: 0
                    total: 1
                paid-and-processing:
                  value:
                    results:
                      - id: 2
                        status: processing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '-'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 1
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                    limit: 10
                    size: 2
                    start: 0
                    total: 2
                multiple-pages:
                  value:
                    results:
                      - id: 2
                        status: processing
                        paidDate: '-'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 1
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                      - id: 3
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                      - id: 4
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 5
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 6
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 7
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 8
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 9
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 10
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                    limit: 10
                    size: 10
                    start: 0
                    total: 20
                multiple-pages-all-paid:
                  value:
                    results:
                      - id: 1
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                      - id: 3
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                      - id: 4
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 5
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 6
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 7
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 8
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 9
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: paypal
                          note: me@example.com
                        receipt: 'http://example.com'
                      - id: 10
                        status: paid
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        paidDate: '2019-08-24'
                        method:
                          type: iban
                          note: Iban ********************8020
                        receipt: 'http://example.com'
                    limit: 10
                    size: 10
                    start: 0
                    total: 20
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-payments
      description: Return all payment requests
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - schema:
            type: string
          in: query
          description: The field for item order
          name: orderBy
        - $ref: '#/components/parameters/order'
    parameters: []
    post:
      summary: Request your booty
      operationId: post-users-me-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  amount:
                    type: number
              examples:
                success:
                  value:
                    id: 1
                    amount: 10.5
        '403':
          $ref: '#/components/responses/NotAuthorized'
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  oneOf:
                    - properties:
                        type:
                          type: string
                          enum:
                            - paypal
                        email:
                          type: string
                      required:
                        - type
                        - email
                    - properties:
                        type:
                          type: string
                          enum:
                            - iban
                        accountHolderName:
                          type: string
                          pattern: '^[A-Za-zÀ-ÖØ-öø-ÿ''-ū\.]+ [''A-Za-zÀ-Ö Ø-öø-ÿ-ū\.]+$'
                        iban:
                          type: string
                          pattern: '^([A-Z]{2}[ \-]?[0-9]{2})(?=(?:[ \-]?[A-Z0-9]){9,30}$)((?:[ \-]?[A-Z0-9]{3,5}){2,7})([ \-]?[A-Z0-9]{1,3})?$'
                      required:
                        - type
                        - accountHolderName
                        - iban
                  type: object
              required:
                - method
            examples:
              paypal:
                value:
                  method:
                    type: paypal
                    email: pippo@example.com
              iban:
                value:
                  method:
                    type: iban
                    accountHolderName: Pippo Franco
                    iban: IT42E0300203280581481468634
  '/users/me/payments/{payment}':
    parameters:
      - schema:
          type: string
        name: payment
        in: path
        required: true
    get:
      summary: Details of a single payment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            type:
                              type: string
                            amount:
                              type: object
                              required:
                                - gross
                              properties:
                                net:
                                  $ref: '#/components/schemas/Currency'
                                gross:
                                  $ref: '#/components/schemas/Currency'
                            date:
                              type: string
                              format: date
                            activity:
                              type: string
                          required:
                            - type
                            - amount
                            - date
                            - activity
                      type: object
                  limit:
                    type: number
                  size:
                    type: number
                  total:
                    type: number
                  start:
                    type: number
                required:
                  - results
                  - size
                  - start
              examples:
                simple:
                  value:
                    results:
                      - id: 1
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                    limit: 10
                    size: 1
                    total: 1
                    start: 0
                multi-page:
                  value:
                    results:
                      - id: 1
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 2
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 3
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 4
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 5
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 6
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 7
                        campaign:
                          id: 12
                          name: My campaign 2
                        type: Community
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 8
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 9
                        campaign:
                          id: 123
                          name: My campaign
                        type: Test
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                      - id: 10
                        campaign:
                          id: 12
                          name: My campaign 2
                        type: Community
                        date: '2019-08-24'
                        activity: Tryber Testing
                        amount:
                          gross:
                            value: 13.5
                            currency: EUR
                    limit: 10
                    size: 1
                    total: 1
                    start: 0
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-payments-payment
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/order'
        - schema:
            type: string
            enum:
              - type
              - date
              - activity
              - net
              - gross
          in: query
          name: orderBy
          description: The value to order by
      description: Return all attributions of a specific request
  /users/me/pending_booty:
    get:
      summary: Get all your payments
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - properties:
                            id:
                              type: number
                          required:
                            - id
                        - properties:
                            name:
                              type: string
                            amount:
                              type: object
                              required:
                                - gross
                              properties:
                                net:
                                  $ref: '#/components/schemas/Currency'
                                gross:
                                  $ref: '#/components/schemas/Currency'
                            attributionDate:
                              type: string
                              format: date
                            activity:
                              type: string
                          required:
                            - name
                            - amount
                            - attributionDate
                            - activity
                      type: object
                  limit:
                    type: number
                  size:
                    type: number
                  start:
                    type: number
                  total:
                    type: number
                required:
                  - size
                  - start
              examples:
                single-attribution:
                  value:
                    results:
                      - id: 1
                        name: '[CP-3882] test release'
                        activity: TEST API CON BUG
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                    limit: 10
                    size: 1
                    start: 0
                    total: 1
                multiple-attributions:
                  value:
                    results:
                      - id: 1
                        name: '[CP-1] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 2
                        name: '[CP-2] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 3
                        name: '[CP-3] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 4
                        name: '[CP-4] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 5
                        name: '[CP-5] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 6
                        name: '[CP-6] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 7
                        name: '[CP-7] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 8
                        name: '[CP-8] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 9
                        name: '[CP-9] Campagna test bug form'
                        amount:
                          net:
                            value: 10
                            currency: EUR
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                      - id: 10
                        name: '[CP-10] Campagna test bug form'
                        amount:
                          gross:
                            value: 13.5
                            currency: EUR
                        attributionDate: '2019-08-24'
                        activity: Refund Tryber Test
                    limit: 10
                    size: 10
                    start: 0
                    total: 20
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-pending-booty
      description: Return all single attributions that dials the pending booty
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - schema:
            type: string
            enum:
              - id
              - attributionDate
              - activityName
              - net
              - gross
              - activity
          in: query
          description: The field for item order
          name: orderBy
        - $ref: '#/components/parameters/order'
    parameters: []
  /users/me/permissions:
    get:
      summary: Get all your permissions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  appq_bug:
                    $ref: '#/components/schemas/Olp'
                  appq_campaign:
                    $ref: '#/components/schemas/Olp'
                  appq_message_center:
                    $ref: '#/components/schemas/Olp'
                  appq_prospect:
                    $ref: '#/components/schemas/Olp'
                  appq_tester_selection:
                    $ref: '#/components/schemas/Olp'
              examples:
                Example 1:
                  value:
                    appq_bug:
                      - 1
                      - 2
                    appq_campaign:
                      - 1
                      - 2
                    appq_prospect: false
                    appq_tester_selection: true
                appq_campaign_full_access:
                  value:
                    appq_campaign: true
                appq_campaign_not_enough_permissions:
                  value: {}
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '500':
          description: Internal Server Error
      operationId: get-users-me-permissions
      description: Return all user permissions
      security:
        - JWT: []
      parameters: []
    parameters: []
  /users/me/popups:
    get:
      summary: Get your popups
      tags:
        - User
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string
                    once:
                      type: boolean
              examples: {}
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-popups
      description: Get all popup defined for your user
      security:
        - JWT: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: showExpired
          description: 'Show all popup history, expired popups included'
        - $ref: '#/components/parameters/order'
  '/users/me/popups/{popup}':
    parameters:
      - schema:
          type: integer
        name: popup
        in: path
        required: true
    get:
      summary: Retrieve and expire popup
      tags:
        - User
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                  - $ref: '#/components/schemas/Popup'
      operationId: get-users-me-popups-popup
      security:
        - JWT: []
      description: Get a single popup. Will set the retrieved popup as expired
  /users/me/rank:
    parameters: []
    get:
      summary: Details of tryber ranking
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  level:
                    $ref: '#/components/schemas/MonthlyLevel'
                  previousLevel:
                    $ref: '#/components/schemas/MonthlyLevel'
                  rank:
                    type: number
                  points:
                    type: number
                  prospect:
                    type: object
                    required:
                      - level
                    properties:
                      level:
                        $ref: '#/components/schemas/MonthlyLevel'
                      maintenance:
                        type: number
                      next:
                        type: object
                        properties:
                          points:
                            type: number
                          level:
                            $ref: '#/components/schemas/MonthlyLevel'
                        required:
                          - points
                          - level
                required:
                  - level
                  - previousLevel
                  - rank
                  - points
                  - prospect
              examples:
                bronze-to-gold:
                  value:
                    level:
                      id: 20
                      name: Bronze
                    previousLevel:
                      id: 10
                      name: Basic
                    rank: 3
                    points: 100
                    prospect:
                      level:
                        id: 40
                        name: Gold
                      next:
                        points: 10
                        level:
                          id: 50
                          name: Diamond
                stay-gold:
                  value:
                    level:
                      id: 40
                      name: Gold
                    previousLevel:
                      id: 10
                      name: Basic
                    rank: 50
                    points: 100
                    prospect:
                      level:
                        id: 30
                        name: Silver
                      manteinance: 10
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: get-users-me-rank
      security:
        - JWT: []
      parameters: []
  /users/me/rank/list:
    get:
      summary: Get your ranking list
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tops:
                    type: array
                    items:
                      $ref: '#/components/schemas/RankingItem'
                  peers:
                    type: array
                    items:
                      $ref: '#/components/schemas/RankingItem'
                required:
                  - tops
                  - peers
              examples:
                example-1:
                  value:
                    tops:
                      - position: 1
                        image: 'https://placekitten.com/200/200'
                        id: 1
                        name: Pippo F.
                        monthly_exp: 100
                      - position: 2
                        image: 'https://placekitten.com/200/200'
                        id: 2
                        name: Ciccio P.
                        monthly_exp: 90
                      - position: 3
                        image: 'https://placekitten.com/200/200'
                        id: 3
                        name: Ciccio I.
                        monthly_exp: 100
                    peers:
                      - position: 50
                        image: 'https://placekitten.com/200/200'
                        id: 41
                        name: Peppe F.
                        monthly_exp: 50
                      - position: 51
                        image: 'https://placekitten.com/200/200'
                        id: 42
                        name: Rosario M.
                        monthly_exp: 50
                      - position: 52
                        image: 'https://placekitten.com/200/200'
                        id: 49
                        name: Giuseppe S.
                        monthly_exp: 49
                      - position: 53
                        image: 'https://placekitten.com/200/200'
                        id: 20
                        name: Maria D.
                        monthly_exp: 48
                      - position: 54
                        image: 'https://placekitten.com/200/200'
                        id: 40
                        name: Luca F.
                        monthly_exp: 49
                      - position: 55
                        image: 'https://placekitten.com/200/200'
                        id: 100
                        name: Maurizio C.
                        monthly_exp: 46
                      - position: 56
                        image: 'https://placekitten.com/200/200'
                        id: 123
                        name: Vittorio S.
                        monthly_exp: 45
                      - position: 57
                        image: 'https://placekitten.com/200/200'
                        id: 49
                        name: Fabrizio C.
                        monthly_exp: 44
                      - position: 58
                        image: 'https://placekitten.com/200/200'
                        id: 49
                        name: Antonio Z.
                        monthly_exp: 40
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-users-me-rank-list
      security:
        - JWT: []
  '/dossiers/{campaign}/manual':
    parameters:
      - $ref: '#/components/parameters/campaign'
    post:
      summary: Create the manual
      operationId: post-dossiers-campaign-manual
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                importFrom:
                  type: integer
                  x-stoplight:
                    id: gf6dy4ke154ct
              required:
                - importFrom
  '/dossiers/{campaign}/preview':
    parameters:
      - $ref: '#/components/parameters/campaign'
    post:
      summary: ''
      operationId: post-dossiers-campaign-preview
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                importFrom:
                  type: integer
                  x-stoplight:
                    id: h4jhe86n6v4fq
              required:
                - importFrom
components:
  schemas:
    AdditionalField:
      description: ''
      type: object
      x-examples:
        example-1:
          field_id: 12
          name: My field name
          value: My field value
      properties:
        field_id:
          type: number
        name:
          type: string
          minLength: 1
        value:
          type: string
        text:
          type: string
        is_candidate:
          type: boolean
      required:
        - field_id
        - name
        - value
    Agreement:
      type: object
      x-examples:
        Example 1:
          id: 1
          title: Agreement Title
          tokens: 10.5
          unitPrice: 165
          expirationDate: '2023-06-06 12:59:16'
          startDate: '2023-06-06 12:59:16'
          note: Agreement Notes
          customer:
            id: 1
            company: Customer Company
          isTokenBased: true
      properties:
        title:
          type: string
          minLength: 1
        tokens:
          type: number
        unitPrice:
          type: number
        startDate:
          type: string
          pattern: '^[0-9]{4}-(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1])$'
        expirationDate:
          type: string
          pattern: '^[0-9]{4}-(0[0-9]|1[0-2])-([0-2][0-9]|3[0-1])$'
        note:
          type: string
        isTokenBased:
          type: boolean
          default: false
      required:
        - title
        - tokens
        - unitPrice
        - startDate
        - expirationDate
    Bug:
      title: Bug
      type: object
      x-examples: {}
      properties:
        severity:
          $ref: '#/components/schemas/BugSeverity'
        status:
          $ref: '#/components/schemas/BugStatus'
        campaign:
          allOf:
            - $ref: '#/components/schemas/CampaignOptional'
            - type: object
              properties:
                id:
                  type: integer
        title:
          type: string
    BugSeverity:
      title: BugSeverity
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    BugStatus:
      title: BugStatus
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    BugTag:
      title: BugTag
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    BugType:
      title: BugType
      type: object
      properties:
        id:
          type: integer
    Campaign:
      description: ''
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/CampaignOptional'
        - $ref: '#/components/schemas/CampaignRequired'
    CampaignAdditionalField:
      title: CampaignAdditionalField
      allOf:
        - type: object
          properties:
            name:
              type: string
            slug:
              type: string
            error:
              type: string
          required:
            - name
            - slug
            - error
        - oneOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - select
                options:
                  type: array
                  items:
                    type: string
              required:
                - type
                - options
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - text
                regex:
                  type: string
              required:
                - type
                - regex
    CampaignField:
      title: CampaignField
      type: object
      properties:
        id:
          type: integer
    CampaignOptional:
      type: object
      x-examples:
        example-1:
          value:
            name: string
            customer_title: string
            internal_id: string
            dates:
              start: string
              end: string
              close: string
            status: true
            language: string
            public: true
            hasBugParade: true
            devices:
              - id: string
            minNumberOfMedia: 0
            titleRule: true
            allowed:
              severities:
                - id: 0
                  name: string
              bug_types:
                - id: 0
              replicabilities:
                - id: string
            projectManager:
              username: string
              name: string
              surname: string
              email: user@example.com
              image: 'http://example.com'
              id: 0
              wp_user_id: 0
              role: string
              is_verified: true
            customerCanViewReviewing: true
            additionalFields:
              - id: 0
            tokens: 0
            csm_effort: 0
            ux_effort: 0
            preview_link:
              en: string
              it: string
            manual_link:
              en: string
              it: string
            applied: true
      properties:
        name:
          type: string
          minLength: 1
        customer_title:
          type: string
          minLength: 0
        internal_id:
          type: string
          minLength: 1
        dates:
          type: object
          properties:
            start:
              type: string
              minLength: 1
            end:
              type: string
              minLength: 1
            close:
              type: string
              minLength: 1
        status:
          type: boolean
        language:
          type: string
          minLength: 1
        public:
          type: boolean
        hasBugParade:
          type: boolean
        devices:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
        minNumberOfMedia:
          type: number
        titleRule:
          type: boolean
        allowed:
          type: object
          properties:
            severities:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/BugSeverity'
            bug_types:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/BugType'
            replicabilities:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/Replicability'
        projectManager:
          $ref: '#/components/schemas/User'
        customerCanViewReviewing:
          type: boolean
        additionalFields:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CampaignField'
        tokens:
          type: number
          default: 0
        csm_effort:
          type: number
          default: 0
        ux_effort:
          type: number
          default: 0
        preview_link:
          $ref: '#/components/schemas/TranslatablePage'
        manual_link:
          $ref: '#/components/schemas/TranslatablePage'
        bugform_link:
          oneOf:
            - type: boolean
              description: Exists only when the campaign bugform is deactivated. It is FALSE
            - $ref: '#/components/schemas/TranslatablePage'
          description: If bugform is deactivated is a boolean else contains URLs to bugforms for each languages
        applied:
          type: boolean
          description: True if you applied on this Campaign
        visibility:
          type: object
          properties:
            freeSpots:
              type: integer
            totalSpots:
              type: integer
            type:
              type: string
              enum:
                - available
                - unavailable
                - candidate
    CampaignRequired:
      description: ''
      type: object
      properties:
        name:
          type: string
          minLength: 1
        dates:
          type: object
          required:
            - start
            - end
            - close
          properties:
            start:
              type: string
              minLength: 1
            end:
              type: string
              minLength: 1
            close:
              type: string
              minLength: 1
        campaign_type:
          $ref: '#/components/schemas/CampaignType'
      required:
        - name
        - dates
        - campaign_type
    CampaignType:
      oneOf:
        - type: string
          properties: {}
        - properties: {}
          type: number
    Certification:
      description: ''
      type: object
      x-examples:
        example-1:
          name: Certification
          area: Area
          institute: Institute
          achievement_date: '2019-08-24'
      properties:
        id:
          type: integer
        name:
          type: string
        area:
          type: string
        institute:
          type: string
        achievement_date:
          type: string
          format: date
      required:
        - name
        - area
        - institute
        - achievement_date
    CountryCode:
      title: CountryCode
      type: string
      x-examples:
        Example 1: string
    CustomUserFieldsData:
      title: CustomUserFieldsData
      type: object
      properties:
        id:
          type: number
        type:
          $ref: '#/components/schemas/CustomUserFieldsType'
        placeholder:
          $ref: '#/components/schemas/TranslatablePage'
        allow_other:
          type: boolean
        name:
          $ref: '#/components/schemas/TranslatablePage'
        format:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserFieldsDataOption'
      required:
        - id
        - type
        - name
    CustomUserFieldsDataOption:
      title: CustomUserFieldsDataOption
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    CustomUserFieldsType:
      type: string
      title: CustomUserFieldsType
      enum:
        - text
        - select
        - multiselect
    Currency:
      title: Currency
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
      required:
        - value
        - currency
    DossierCreationData:
      type: object
      x-examples:
        Example 1:
          project: 0
          testType: 0
          title:
            customer: string
            tester: string
          startDate: '2019-08-24T14:15:22Z'
          endDate: '2019-08-24T14:15:22Z'
          closeDate: '2019-08-24T14:15:22Z'
          deviceList:
            - 0
          csm: 0
          roles:
            - role: 0
              user: 0
          description: string
          productLink: string
          goal: string
          outOfScope: string
          deviceRequirements: string
          target:
            notes: string
            size: 0
            cap: 0
          countries:
            - st
          languages:
            - string
          browsers:
            - 0
          productType: 0
          notes: string
      properties:
        project:
          type: integer
        testType:
          type: integer
        title:
          type: object
          required:
            - customer
          properties:
            customer:
              type: string
            tester:
              type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        closeDate:
          type: string
          format: date-time
        deviceList:
          type: array
          items:
            type: integer
        csm:
          type: integer
        roles:
          type: array
          items:
            type: object
            properties:
              role:
                type: integer
              user:
                type: integer
            required:
              - role
              - user
        description:
          type: string
        productLink:
          type: string
        goal:
          type: string
        outOfScope:
          type: string
        deviceRequirements:
          type: string
        target:
          type: object
          properties:
            notes:
              type: string
            size:
              type: integer
            cap:
              type: integer
        countries:
          type: array
          items:
            $ref: '#/components/schemas/CountryCode'
        languages:
          type: array
          items:
            type: string
        browsers:
          type: array
          items:
            type: integer
        productType:
          type: integer
        notes:
          type: string
        additionals:
          x-stoplight:
            id: prsjf310wgcw1
          type: array
          items:
            x-stoplight:
              id: 05yh361c4m134
            allOf:
              - type: object
                x-stoplight:
                  id: ob87gktp597p8
                properties:
                  showInStats:
                    type: boolean
                    x-stoplight:
                      id: h3ll753yh9e2x
              - $ref: '#/components/schemas/CampaignAdditionalField'
        bugTypes:
          type: array
          x-stoplight:
            id: b3tzoarrt5ir1
          items:
            x-stoplight:
              id: grb3h65cr8pmi
            type: number
      required:
        - project
        - testType
        - title
        - startDate
        - deviceList
    FiscalBirthCity:
      title: FiscalBirthCity
      oneOf:
        - properties:
            city:
              type: string
            province:
              type: string
          required:
            - city
            - province
        - properties:
            placeId:
              type: string
              description: A google maps place id
          required:
            - placeId
      type: object
    FiscalType:
      type: string
      title: FiscalType
      enum:
        - withholding
        - witholding-extra
        - non-italian
        - vat
        - company
    Gender:
      type: string
      title: Gender
      enum:
        - male
        - female
        - not-specified
        - other
    LevelDefinition:
      title: LevelDefinition
      type: object
      description: ''
      properties:
        id:
          type: number
        name:
          type: string
        reach:
          type: number
        hold:
          type: number
      required:
        - id
        - name
    MonthlyLevel:
      title: MonthlyLevel
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
      description: ''
      x-internal: false
      x-examples: {}
    Popup:
      description: ''
      type: object
      x-examples: {}
      properties:
        profiles:
          oneOf:
            - type: array
              items:
                type: integer
            - type: string
              enum:
                - all
                - italian
                - non-italian
                - logged-in-year
                - not-logged-in-year
              example: all
        once:
          type: boolean
        content:
          type: string
          minLength: 1
        title:
          type: string
    Olp:
      x-examples: {}
      oneOf:
        - type: array
          items:
            type: integer
        - type: boolean
    PaginationData:
      title: PaginationData
      type: object
      properties:
        start:
          type: integer
        limit:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
        - start
        - size
    PreselectionFormQuestion:
      title: PreselectionFormQuestion
      allOf:
        - properties:
            question:
              type: string
            short_name:
              type: string
          required:
            - question
        - oneOf:
            - properties:
                type:
                  $ref: '#/components/schemas/PreselectionQuestionSimple'
              required:
                - type
            - properties:
                type:
                  $ref: '#/components/schemas/PreselectionQuestionMultiple'
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                      isInvalid:
                        type: boolean
                    required:
                      - value
              required:
                - type
            - properties:
                type:
                  $ref: '#/components/schemas/PreselectionQuestionCuf'
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: number
                      isInvalid:
                        type: boolean
                    required:
                      - value
              required:
                - type
      type: object
      x-examples:
        Example 1:
          question: string
          short_name: string
          type: gender
    PreselectionQuestionCuf:
      title: PreselectionQuestionCuf
      type: string
      pattern: '^cuf_[0-9]*$'
    PreselectionQuestionMultiple:
      title: PreselectionQuestionMultiple
      type: string
      enum:
        - multiselect
        - select
        - radio
    PreselectionQuestionSimple:
      title: PreselectionQuestionSimple
      type: string
      enum:
        - gender
        - text
        - phone_number
        - address
    Project:
      title: Project
      type: object
      x-examples:
        example-1:
          name: string
          campaigns:
            - name: string
              customer_title: string
              internal_id: string
              dates:
                start: string
                end: string
                close: string
              status: true
              language: string
              public: true
              hasBugParade: true
              devices:
                - id: string
              minNumberOfMedia: 0
              titleRule: true
              allowed:
                severities:
                  - id: string
                bug_types:
                  - id: string
                replicabilities:
                  - id: string
              projectManager:
                id: 0
                name: string
              customerCanViewReviewing: true
              additionalFields:
                - id: string
              id: 0
      properties:
        name:
          type: string
    ProspectStatus:
      title: ProspectStatus
      type: string
      enum:
        - draft
        - confirmed
        - done
    RankingItem:
      type: object
      properties:
        position:
          type: integer
        image:
          type: string
        id:
          type: integer
        name:
          type: string
        monthly_exp:
          type: integer
      required:
        - position
        - image
        - id
        - name
        - monthly_exp
    Replicability:
      title: Replicability
      type: object
      properties:
        id:
          type: string
    Task:
      title: Task
      allOf:
        - $ref: '#/components/schemas/TaskOptional'
        - $ref: '#/components/schemas/TaskRequired'
    TaskOptional:
      description: ''
      type: object
      properties:
        name:
          type: string
          minLength: 1
        content:
          type: string
          minLength: 1
        campaign_id:
          type: number
        group:
          type: number
          minimum: 0
          maximum: 4
        allow_media:
          type: boolean
    TaskRequired:
      description: ''
      type: object
      x-examples:
        example-1:
          name: string
          content: string
          campaign_id: 0
          group: 0
          allow_media: true
      properties:
        name:
          type: string
          minLength: 1
        content:
          type: string
          minLength: 1
        campaign_id:
          type: number
      required:
        - name
        - content
        - campaign_id
    TranslatablePage:
      title: TranslatablePage
      type: object
      properties:
        en:
          type: string
        it:
          type: string
        es:
          type: string
    User:
      title: User
      type: object
      description: ''
      properties:
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        image:
          type: string
          format: uri
        id:
          type: integer
        wp_user_id:
          type: integer
        role:
          type: string
        is_verified:
          type: boolean
      x-examples:
        example-1:
          value:
            username: string
            name: string
            surname: string
            email: user@example.com
            image: 'http://example.com'
            id: 0
            wp_user_id: 0
            role: string
            is_verified: true
    UserDevice:
      title: UserDevice
      type: object
      properties:
        type:
          type: string
        id:
          type: number
        device:
          oneOf:
            - properties:
                manufacturer:
                  type: string
                model:
                  type: string
                id:
                  type: number
              required:
                - manufacturer
                - model
            - properties:
                pc_type:
                  type: string
              required:
                - pc_type
          type: object
        operating_system:
          type: object
          required:
            - id
            - platform
            - version
          properties:
            id:
              type: number
            platform:
              type: string
            version:
              type: string
      required:
        - type
        - id
        - device
        - operating_system
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      description: ''
    User Token:
      type: apiKey
      in: header
      name: apikey
  responses:
    UserData:
      description: A user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            example:
              value:
                username: Elon71
    Authentication:
      description: Authentication data. The token can be used to authenticate the protected requests
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: number
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
              username:
                type: string
              iat:
                type: number
              exp:
                type: number
          examples:
            example:
              value:
                id: 42
                firstName: Elon
                lastName: Musk
                token: my-jwt-token
                username: Elon71
    SingleCampaign:
      description: A single Campaigns with the Campaign id and Project data
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Campaign'
              - type: object
                properties:
                  id:
                    type: integer
                required:
                  - id
              - type: object
                properties:
                  project:
                    allOf:
                      - $ref: '#/components/schemas/Project'
                      - type: object
                        properties:
                          id:
                            type: integer
          examples:
            full-example:
              value:
                id: 1
                campaign_type: 1
                name: UX test for a selfdrive service
                customer_title: Tesla Model 3 selfdrive UX
                internal_id: TSL3
                dates:
                  start: 17/02/2021
                  end: 17/08/2021
                  close: 17/09/2021
                status: true
                language: English (England)
                public: true
                hasBugParade: true
                devices:
                  - id: '2'
                minNumberOfMedia: 0
                titleRule: true
                allowed:
                  severities:
                    - id: 3
                  bug_types:
                    - id: 2
                  replicabilities:
                    - id: '1'
                projectManager:
                  username: Elon Musk
                customerCanViewReviewing: true
                additionalFields:
                  - id: 2
                project:
                  name: Tesla
                  id: 42
            minimal-example:
              value:
                id: 1
                campaign_type: 1
                name: UX test for a selfdrive service
                customer_title: Tesla Model 3 selfdrive UX
                internal_id: TSL3
                dates:
                  start: 17/02/2021
                  end: 17/08/2021
                  close: 17/09/2021
                devices:
                  - id: '2'
                projectManager:
                  username: Elon Musk
                project:
                  name: Tesla
                  id: 42
            tester-example:
              value:
                id: 1
                campaign_type: 1
                name: UX test for a selfdrive service
                internal_id: TSL3
                dates:
                  start: 17/02/2021
                  end: 17/08/2021
                  close: 17/09/2021
                status: true
                language: English (England)
                devices:
                  - id: '2'
                minNumberOfMedia: 0
                titleRule: true
                allowed:
                  severities:
                    - id: 3
                  bug_types:
                    - id: 3
                  replicabilities:
                    - id: '1'
                projectManager:
                  username: Elon Musk
                additionalFields:
                  - id: 2
    NotFound:
      description: An error due to the resource not existing
      content:
        application/json:
          schema:
            type: object
            properties:
              element:
                type: string
              id:
                type: integer
              message:
                type: string
              code:
                type: string
            required:
              - element
              - id
              - message
          examples:
            not-found:
              value:
                element: campaign
                id: 1
                message: No campaign with id 1
    MissingParameters:
      description: An error due to missing required parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            example:
              value:
                message: Missing parameters
    NotAuthorized:
      description: An error due to insufficient authorization to access the resource
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              code:
                type: string
          examples:
            unauthorized:
              value:
                message: Not Authorized.
  parameters:
    campaign:
      name: campaign
      in: path
      required: true
      schema:
        type: string
      description: A campaign id
    task:
      name: task
      in: path
      required: true
      schema:
        type: string
      description: A task id
    customer:
      name: customer
      in: path
      required: true
      schema:
        type: string
      description: A customer id
    project:
      name: project
      in: path
      required: true
      schema:
        type: string
      description: A project id
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: Max items to retrieve
    start:
      name: start
      in: query
      required: false
      schema:
        type: integer
      description: Items to skip for pagination
    filterBy:
      name: filterBy
      in: query
      required: false
      schema:
        type: object
      description: Key-value Array for item filtering
    order:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: DESC
      description: 'How to order values (ASC, DESC)'
    locale:
      name: locale
      in: query
      required: false
      schema:
        type: string
        enum:
          - en
          - it
        default: en
      description: How to localize values
    searchBy:
      name: searchBy
      in: query
      schema:
        type: string
      description: A comma separated list of fields which will be searched
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: The value to search for
    testerId:
      name: testerId
      in: path
      required: true
      schema:
        type: string
  examples: {}
  requestBodies: {}
tags:
  - name: Authentication
  - name: Campaign
  - name: Customer
  - name: Projects
  - name: Task
  - name: User
  - name: Admin
  - name: Devices
